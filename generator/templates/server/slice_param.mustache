{{varName}} := {{reader}}(pth, "{{paramLocation}}", "{{collectionFormat}}", {{defaultValue}}, route.Params, {{required}})
if err != nil {
	res.AddError(err)
} else {
	valid := true
	size := int64(len({{varName}}))
	{{#minItems}}
	if valid {
		if err := validate.MinItems(pth, "{{paramLocation}}", size, {{minItems}}); err != nil {
			valid = false
			res.AddErrors(err)
		}
	}
	{{/minItems}}{{#maxItems}}
	if valid {
		if err := validate.MaxItems(pth, "{{paramLocation}}", size, {{maxItems}}); err != nil {
			valid = false
			res.AddErrors(err)
		}
	}  
	{{/maxItems}}{{#uniqueItems}}
	if valid {
		if err := validate.UniqueItems(pth, "{{paramLocation}}", {{varName}}); err != nil {
			valid = false
			res.AddErrors(err)
		}
	}
	{{/uniqueItems}}{{#enum}}
	if valid {
		if err := validate.Enum(pth, "{{paramLocation}}", {{varName}}, {{enum}}); err != nil {
			valid = false
			res.AddErrors(err)
		}
	}
	{{/enum}}

	if valid {
		i.{{propertyName}} = {{varName}}
	}
}