// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/doc.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/server/responses.gotmpl
// templates/structfield.gotmpl
// templates/swagger_json_embed.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4d\x73\xe3\x36\x0c\x3d\xaf\x7e\x05\xea\xd9\x64\x2c\x57\x2b\xdf\x35\x93\x43\x66\xb3\x87\x5c\x36\x99\x24\xd3\x9e\x19\x09\x92\x38\xb1\x28\x95\xa4\x92\x71\x35\xfa\xef\x05\x3f\xfd\x11\xbb\x75\x6f\x9b\x43\x4c\x12\xe0\xc3\xc3\x03\x08\x0d\xac\x7c\x63\x0d\xc2\x34\x41\xfe\x93\x75\x08\xf3\x9c\x24\xeb\x35\xbc\xb4\x5c\x41\xcd\x37\x08\x1f\x4c\x41\x83\x02\x25\xd3\x58\xc1\xeb\x16\x74\x8b\xa0\x3e\x58\xd3\xa0\x04\xdd\xf7\x9b\xdc\xf8\xff\xa8\xb8\xe6\xa2\x21\x63\xb8\xd7\xf1\xa6\xd5\x30\xc8\xfe\x1d\xa1\x1e\xb5\x85\x6a\x51\xc0\xb6\x1f\x41\xe2\x37\x39\x8a\x03\xa4\x10\x02\xca\xbe\xeb\x98\xa8\x92\x84\x77\x43\x2f\x35\x2c\x13\x80\x85\x40\xbd\x6e\xb5\x1e\x16\x66\xd3\x70\xdd\x8e\xaf\x39\x39\xae\x9b\xfe\x9b\x07\xd8\x5f\xa2\x94\xbd\x54\x97\xf9\x9a\xdf\xcb\x3c\xcb\x0d\x47\xa1\x2f\xf3\x35\x5c\xdf\xf8\xff\x73\x5e\xbf\xb3\x0d\xaf\x48\x82\x45\x42\xd7\xa8\x20\x92\x09\xaa\x4c\x7e\x87\x35\x1b\x37\xfa\xde\xca\xa1\xa8\x40\x64\x1a\x24\x17\xba\x86\xc5\xd5\x5f\x0b\xc8\xa9\x64\xd6\x1f\x45\x05\x61\xed\xee\x7e\x7d\xc3\x6d\x06\x5f\x09\x78\x44\x28\x6e\x20\x3f\x00\x31\x56\x5a\xc1\x11\x9e\x77\x3f\x42\x4d\x6d\x5b\xfc\xc4\x0f\x28\x25\x12\x49\x05\x0c\x04\xed\xc8\xa3\x1d\xa9\x60\xfc\x6f\x8c\x1d\x04\xb7\x8f\xf7\xe0\xe4\xca\x93\x7a\x14\xa5\xb9\xb7\xd4\xc4\x49\xd9\x92\x7a\xd3\x4b\x38\xc8\xa0\xee\x65\xc7\x88\x97\xd2\xb2\xee\x74\xfe\x84\x0d\xa7\xe5\x36\x85\xd5\x77\xeb\x0b\x13\x91\x91\xa8\x47\x29\xe0\xda\x1d\x4d\x11\xaf\x00\xfd\x09\xa9\x08\x8b\x39\x31\x0d\xbd\x4a\x02\xce\x04\xbc\x86\xfc\x79\xa4\x26\x93\x5b\xa7\xc3\xe1\xce\x98\xef\x50\x95\x92\x0f\x9a\xf7\xc2\x3e\x08\xe3\x74\x78\x16\x85\x31\x8b\x8d\xc2\xe3\x6b\x0e\xf8\xf3\x1d\xe3\x3a\xcf\xc4\xed\xac\x70\x3b\xc9\x57\xeb\x44\x6f\x07\x04\x4f\x9d\x04\x19\x4b\xa7\xc4\x79\x29\xc9\x78\x46\xcb\xc4\xe5\xe1\x9b\xea\x61\x30\xaf\x8d\x78\x99\x5e\x58\xaf\x7e\x0d\x59\x4c\x23\x32\x55\xd2\x33\xd8\xd7\xe4\x22\xa1\x6c\x97\x2d\x59\xe8\x97\x14\x4e\x62\x2d\x07\x26\x59\xa7\x4e\x1b\x1f\xad\xcd\xa7\x7a\x3b\xea\xb6\x97\x64\x36\x01\x32\x60\xb4\xbd\x17\x75\x1f\xf4\xbe\xf5\xfb\x3f\x25\xd7\x28\xa7\x89\x88\xcc\x73\xba\xeb\xae\xb2\x44\xa5\x9e\x90\x4a\x22\x6c\x66\xcb\xd5\x61\xc8\x23\x8f\x40\x21\xdb\x3d\x38\x3b\xc3\xce\xe2\xa5\xd1\xcf\xf6\x83\x19\xd8\x0f\x77\x0f\x05\xfc\xe1\x47\x88\x1d\xad\x3e\xd9\x57\xa4\x8e\xa0\x41\x4b\xfe\x34\xa1\xfd\x6c\x39\x0d\x2b\x51\xd1\xa4\x89\xd8\x19\x10\x0b\x33\x37\x58\x1e\x3b\x8e\x6e\xbd\x76\x5c\x2f\xaf\xbd\x12\xb1\x91\x0c\x0f\x80\xfb\xbb\xe2\x78\x9e\xc4\xe4\xac\x83\x53\xb9\x80\x6b\xc7\xce\x1d\x3e\x21\xab\x50\xd2\xe1\xc9\xc2\x38\xeb\x14\x5f\x36\xcb\xc3\xdb\xce\x4e\x55\xcb\x22\x86\x02\x15\xb1\x74\x99\x4b\xcb\xda\xe7\x94\xfe\xd1\x45\x93\xde\x6f\x37\x20\xf8\x06\x1c\x7d\x3f\x62\xce\x0a\x44\x9e\x87\x35\x32\x60\xc9\x7f\xdf\x73\xc2\xe6\x17\xb6\x41\xba\x17\x83\x22\xd2\xcb\xdd\xf5\xba\x99\xc2\xcf\xa8\x5f\x76\x13\xa0\x35\x2f\x5a\xd9\x8a\xef\xe6\x42\xef\xbe\xae\xae\x48\x9f\x5f\xc7\x3e\xc2\xbf\x0c\xe6\xd4\xca\xb2\x57\x7d\xb8\xd9\xc5\x48\xe6\xf0\x49\xa0\xc7\xf8\xc3\xb4\xeb\xd1\xa7\xc1\x7c\x05\x6c\x1b\xc7\x6f\x40\x70\x5c\xf6\x83\x4d\x95\xe6\x12\xb5\x64\x46\xf2\x79\xa5\xa8\x6b\x50\xd6\xac\xc4\x89\x9a\xaf\xec\x2b\x7b\x92\x42\x0c\x30\x25\x5f\xbc\xd4\xe1\x88\x4e\xbe\xc4\x1e\x34\xa0\x05\x38\xf0\x8c\x0c\x41\xd8\x02\xc0\x55\xd7\x6d\x8d\xe9\x3b\x81\xfb\x63\xf3\x67\x62\xd1\xf1\xec\x93\x8a\x01\x3f\x24\x1b\x28\x1f\xe1\x12\x81\x8e\xdc\x36\xb4\xad\xa0\x64\x03\xf1\xf0\xba\x2b\xcd\xf4\xa8\x2c\x88\x1b\xd9\xf1\x7e\x1c\xda\x87\x24\x7d\xe6\x49\x64\xe8\x69\xec\xe5\x9f\x58\x8a\x3b\x86\x64\x32\xe4\x42\x29\x43\x84\x14\x9c\xa2\xa9\x87\xdc\x93\xc8\x4c\xff\x67\xf7\x12\x97\x8b\x2b\x05\x4b\x4f\xf3\xaa\x4a\x0b\xb8\xfa\xfd\x1d\x16\x34\xd8\xf2\x03\x5e\xe6\xc0\x84\x35\xbf\x81\x5a\x4a\x61\xff\x09\x00\x00\xff\xff\x96\x8d\xc4\x84\x27\x0a\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2599, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x5d\x6f\x9b\x4a\x10\x7d\xe7\x57\xcc\xb5\x72\x25\xb8\x72\xf0\xfb\x95\xfc\xd4\x56\xfd\x78\x48\xa2\xda\x7f\x60\x0d\x03\xac\x0c\xbb\x74\x3f\x62\xb9\x91\xff\x7b\x67\x16\x70\xc0\x22\x2d\xe9\x53\xd6\xbb\x33\x67\xe6\x9c\x39\x13\x5a\x91\x1d\x45\x89\xf0\xf2\x02\xe9\x53\x7f\xbe\x5c\xa2\x68\xb3\x81\x7d\x25\x2d\x14\xb2\x46\x38\x09\x0b\x25\x2a\x34\xc2\x61\x0e\x87\x33\xb8\x0a\xc1\x9e\x44\x59\xa2\x01\xa7\x75\x9d\x72\xfc\xa7\x5c\x3a\xa9\x4a\x7a\x1c\xf2\x1a\x59\x56\x0e\x5a\xa3\x9f\x11\x0a\xef\x02\x54\x85\x0a\xce\xda\x83\xc1\x7b\xe3\xd5\x04\x69\x28\x01\x99\x6e\x1a\xa1\xf2\x28\x8a\x64\xd3\x6a\xe3\x20\x8e\x00\x56\x0a\xdd\xa6\x72\xae\x5d\xf1\x8f\x52\xba\xca\x1f\x52\x8a\xdc\x94\xfa\xbe\x47\x18\x1f\x39\xf2\x28\x1d\x07\xf3\xd1\x19\xa1\x6c\xc0\x5a\x9c\xba\xc9\x6a\x89\xca\x2d\x2b\xc7\x7f\x17\x46\xb6\x98\x2d\x8b\x44\x63\xb4\xb1\xef\xa2\xbb\x79\x16\xb5\xcc\x49\xc3\x65\x59\x03\x43\x0a\x26\x03\x90\x44\x34\xfd\xf4\x23\x16\xc2\xd7\xee\x6b\x90\xde\x92\x1b\xe8\xa9\x35\x52\xb9\x02\x56\xff\xfe\x58\x41\x4a\xfe\x08\xf1\xa8\x72\x18\xce\x5d\xee\xdd\x11\xcf\x6b\xb8\xa3\x26\x3c\xc2\xff\x5b\x48\x27\x20\xfc\x4a\x27\xb8\xc1\xeb\xc3\x6f\x50\x93\xde\x83\x08\x7d\x3f\xfc\x56\x79\xf2\x85\xfc\x49\x4d\x3e\x88\x86\x53\xe0\xcb\x7e\xff\x04\x1d\x8d\x34\x7a\x16\xe6\x1a\xbd\x85\x07\x3c\xf1\xeb\x87\xf0\x18\x2b\x59\x77\x90\x93\x6b\xc8\x0c\x92\x5a\x16\x04\x28\x3c\x2d\x28\x51\x78\x95\xdd\x20\x17\xda\x34\x82\x38\x5a\x67\x8a\xc6\xa5\xdf\xb1\x94\x74\x3c\x27\xf0\x1f\x13\x15\x36\xa3\x91\x8c\xf1\x5e\x88\x67\x3f\x80\x1d\x79\x61\x0d\x34\x67\x16\x8b\x8d\x91\x12\x74\xbc\xeb\x1e\xbf\xed\x1e\x1f\xd6\xb0\x5a\x25\x14\x2f\x8b\x10\xf5\xcf\x16\x88\x47\x40\x00\x20\x2e\xe3\xed\xe1\x74\xa0\xcd\x0b\x0e\x80\x03\x66\xc2\x5b\x04\xe9\xc2\xf6\xd2\x31\xa7\x4d\x1d\x6d\x71\xd8\xd2\x4c\xe7\x98\x06\xb0\x96\x48\x67\x31\xd5\xe0\x6a\x97\xae\xe2\x40\x6c\x3b\xae\x7a\xbd\x1c\xf8\xf6\x82\xf7\x69\x06\x9d\x37\x8a\x15\x8a\x27\x6b\x17\x88\x8d\x58\x27\xeb\x01\x29\x89\x2e\xc3\x5c\x96\x4c\xa3\x1b\xc4\x75\x0e\xf1\xeb\x62\xf7\x23\xda\x0f\x17\xd7\x0a\xef\x9a\x0c\xa1\xf0\x30\xa8\x7e\x3c\x1b\x94\x74\x31\xaf\x65\x48\x89\x6b\x0f\x93\x3d\x7a\x6c\x59\x6a\xa9\xd5\x67\xa3\x7d\x6b\x3b\x83\x73\xea\x7c\xf1\x6d\xf8\x1f\xdc\xff\x4a\x27\xd4\x46\x5a\x4d\x17\xaf\x57\x9b\x40\x7b\x11\xe7\xa1\x25\x2b\xda\xc9\xc3\x48\xb3\xc2\x46\xee\xdc\xe2\x1b\xf9\x24\x9a\xcf\x5c\x90\xe7\x0f\xf4\xe6\xf3\x59\x6e\xab\xc4\x71\x7c\x99\x76\xdb\x73\x43\x68\xff\xe6\x34\x99\x20\x33\xdc\xa1\x1b\x05\x55\xdc\x8b\x0d\x7b\xf0\x6a\x04\xdd\x7d\x56\x7a\xc2\xf4\x21\x01\x51\xd7\xb4\x09\x64\x04\x7f\x30\x68\xb5\x37\x19\xda\xce\x42\x71\xc6\xdd\xdd\xf4\x4c\x53\x9e\xd4\xf9\x8d\xc9\x92\xce\x34\x7f\x6d\x87\x79\x33\xa4\xf3\xd5\xa7\xe3\x27\x41\x7e\x05\x00\x00\xff\xff\x58\xb4\xed\xa4\xbe\x07\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1982, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x5f\x8f\xdb\x44\x10\x7f\xcf\xa7\x18\xa2\x22\xd9\xd5\xd5\xe1\x19\x74\x48\xed\x71\x85\xf2\x50\x8e\xf6\x74\x48\x54\x15\xda\x38\x13\x7b\xb9\xb5\xd7\xb7\xbb\x4e\x1b\xa2\x7c\x77\x66\x76\x6d\x9f\x9d\x7f\x38\xa2\x12\x12\xf7\x94\xf5\xec\xfc\xfd\xfd\xc6\x9e\x49\x25\xd2\x7b\x91\x21\x6c\x36\x90\xdc\x34\xe7\xed\x76\x32\x99\xcd\xe0\x36\x97\x16\x96\x52\x21\x7c\x12\x16\x32\x2c\xd1\x08\x87\x0b\x98\xaf\xc1\xe5\x08\xf6\x93\xc8\x32\x34\xe0\xb4\x56\x09\xeb\x5f\x2f\xa4\x93\x65\x46\x97\xad\x5d\x21\xb3\xdc\x41\x65\xf4\x0a\x61\x59\x3b\xef\x2a\xc7\x12\xd6\xba\x06\x83\x2f\x4c\x5d\x0e\x3c\xb5\x21\x20\xd5\x45\x21\xca\xc5\x64\x22\x8b\x4a\x1b\x07\xd1\x04\x60\x5a\xa2\x9b\xe5\xce\x55\x53\x7e\xc8\xa4\xcb\xeb\x79\x42\x8a\xb3\x4c\xbf\x68\x1c\xf4\x8f\xac\x79\x2f\xdd\x38\x65\xfe\x1d\xa7\x89\xc6\x68\x63\xcf\x4a\x61\xb6\x12\x4a\x2e\xa8\xac\x71\x56\xa9\x92\x58\x52\xde\xa4\x4c\x9c\x18\x51\x12\x21\xc9\x0f\xb8\x14\xb5\x72\x6f\x3c\x1c\x96\x08\xa2\xab\xca\xc8\xd2\x2d\x61\xfa\xf5\xc3\x14\x12\xa2\xcc\xeb\x63\xb9\x80\xf6\x1c\x6c\x9f\xdd\xe3\xfa\x02\x9e\x51\x12\x35\xc2\xb7\x97\x90\x0c\x9c\xf0\x2d\x9d\x60\xc7\x5f\xa3\xbe\xe3\x35\xa6\xb6\x78\xce\x9a\xc2\xa6\x54\xd3\x5f\x94\xd8\x5b\x51\xb0\xda\x8d\x30\xa2\xb0\xc4\x5b\xe9\x84\x2c\x2d\x08\xa5\x3c\xb3\x15\xcb\xd1\xa1\xb1\xd4\x26\x60\xd9\x0f\xfd\xf2\xcd\xcb\x9b\x37\xec\xb6\xd2\x14\x74\xb2\xd4\xc6\x0b\xc9\x77\x5e\x13\xf3\x7d\xd7\xa0\x2b\x6e\x0a\xa9\xa9\x57\xd6\x95\xa4\xc0\xca\xf7\x9f\x45\x10\x86\xfa\xc9\x48\xe7\xa8\xa5\xc8\xad\x00\x46\x3c\x79\x87\x0f\x35\x5a\x37\x79\x3e\x9b\x90\x81\x77\x7a\x34\x61\xeb\x4c\x9d\x3a\xd8\x0c\xd1\x6e\x2e\xb7\xdb\x23\xd5\x6e\x36\x72\xc9\x9c\xd8\xd4\xc8\xca\x67\xd6\x02\xb5\x2b\xec\xc3\x47\xf9\xc0\xe1\x64\x58\x4a\x1e\xa9\xe3\x21\x2a\xb5\x23\x8a\xec\x4b\x63\xc4\x3a\x86\x88\x80\xa1\xa7\xb7\xb5\x52\x62\xae\x30\x66\x37\x9d\x43\x8e\xf7\xa3\xbe\xe5\x1a\x77\x88\x0a\xef\xef\x6f\x04\x0d\xde\xea\x06\x0f\x8f\x14\xda\x06\xba\x2a\x94\xe8\x51\x6b\x5f\x3f\xd3\x00\xb7\xac\xcb\x14\x22\xf6\xfe\x0e\x53\x94\x2b\x34\x6d\x9e\xa7\xc8\x8f\x77\xe2\x45\x06\x42\x2b\xb7\x84\x5c\x50\x80\x8c\x11\x5f\x16\x2c\xcb\x24\x1d\xa9\x44\xff\x46\x05\x06\x56\x82\x93\xb0\xf0\xe1\xa3\x17\xfa\x92\x06\x94\xb4\x88\x12\x58\x8c\x53\x83\x8e\xc7\x8a\x0f\xaf\xf4\x62\xed\x15\xe3\x0e\x10\x26\xea\x11\x3f\x12\x93\x80\x2b\xbb\xe3\xfe\xbe\xfe\x5c\x51\x38\x1b\xb8\x82\xaf\x2e\xa1\x94\x0a\x36\x0d\x8e\x43\x0f\xbf\xd6\x68\x82\xef\xe0\x9a\xe0\x7d\x60\x51\x00\xd2\xbb\x6c\xd0\xa0\x4b\x32\xa1\x02\xf8\x65\x33\xc9\x7b\x74\x8f\xb6\xd1\xee\x6b\xdb\xd8\x5c\xb4\x81\x5e\x6b\x53\x08\xea\x67\xd3\xd0\xdb\x7f\x8e\x0e\x95\x43\x8c\xf8\x5c\x0f\xd7\x14\x73\x29\xca\x86\x9e\x3d\xd7\xb8\xb9\x8c\xbf\xf3\xc5\xb4\xe8\x50\x79\x40\x24\xb9\xda\x94\x2c\xa7\xc7\xb6\xf5\x38\x4e\x08\x71\x23\x5c\x3e\xc4\xaa\x22\xc9\x18\xa8\x3a\xcb\x27\x82\xd4\x4f\x28\x16\x68\x86\x58\xe5\x5e\x36\x06\xad\x9e\xf5\x13\xc1\x8b\xb3\xee\xa1\xd5\x85\x7e\x4d\xab\xc5\x10\x45\x1a\x29\x45\x58\x42\x46\x00\xd9\x99\xff\x23\x8c\xe7\x40\x74\x4e\x79\x83\xb4\xc7\x64\xdc\x02\xf1\xbf\x26\xbe\xb7\xcc\xf4\xcf\x7b\x51\x5b\xc7\xfe\xba\xd7\x2e\x61\x32\x74\x73\x98\x85\x57\xb9\x54\x8b\x01\x08\x3c\x75\xfc\xba\x63\x0f\x0f\xe7\x0f\x1f\x69\x50\xd1\x5e\x4b\x3e\x78\x4f\xf9\xe3\x02\x56\x9e\x06\x3f\x98\x8e\x4f\xee\xfd\xb1\x7d\x02\x98\x06\x84\x2e\x8d\x30\xef\xda\x0c\x2e\x41\x54\x15\x59\x47\x27\xd2\xf4\x7c\x1f\xa8\x2e\x5a\xc5\xf1\x5e\xaf\x9d\x2a\x97\x4a\xfb\x42\x45\x1d\x23\xee\xe8\x2c\x15\x9e\xae\x2f\x34\x51\x79\xab\x49\x7e\xa6\xf5\xf2\xd5\x3a\xe0\x71\x1a\xbd\xe9\x66\x93\x5c\x69\xa5\x30\xe5\xdd\x2d\x58\x6c\xb7\xd3\x38\x49\x92\x73\xbf\x53\x0c\xdc\xfe\xb7\xaa\x7d\xb9\x47\x17\x39\xe2\x15\xff\x0f\x6a\x0c\x6c\xee\x3f\x04\x6a\xbb\x0d\xac\xc7\xb8\x87\xe3\x7d\x9a\x63\x21\x48\xe3\x4a\x17\x95\xc2\xcf\xbf\xcc\xff\xa4\x2c\x7a\xf2\x51\x2b\xda\x65\x3f\xbd\x63\x3a\xfe\xe2\x77\x34\xfa\xee\xf1\x3f\xcc\x76\x90\xed\x0e\xd0\x5d\xd2\xd1\xbf\xfa\x90\xf7\xbe\x40\xcd\x89\xe2\x28\x2c\x23\xf2\x14\xc3\xf7\xf0\xcd\x9e\x29\xfd\x93\x4c\x18\x0f\x6d\x69\x71\xbe\x0b\xff\x12\x29\xe4\x35\xdf\xb0\x15\xf3\xd2\xb8\x6f\x8c\x28\x01\x5a\xee\xff\x0e\x00\x00\xff\xff\x2a\x39\xb4\x59\xb4\x0f\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 4020, mode: os.FileMode(420), modTime: time.Unix(1448552954, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xcd\x72\xdb\x36\x10\xbe\xf3\x29\xb6\x1c\x37\x23\x7a\x14\xea\xee\x8e\x0f\x8d\xe3\x49\x75\x68\xea\x71\xd2\x07\x80\xc9\x25\x89\x9a\x04\x59\x00\xb4\xa2\x7a\xf4\xee\x5d\xfc\x89\xa4\x44\x59\x4a\x7a\xa9\x2f\x92\xf7\x7f\xbf\xfd\x83\x5e\x5f\x21\xc7\x82\x0b\x84\x38\xab\x39\x0a\x2d\x51\x75\xad\x50\x18\xc3\x6e\xb7\xba\x26\x76\xc7\x54\xc6\x6a\xfe\x0f\x42\xfa\x99\x35\xb8\xdb\x45\x11\x51\x79\x01\xe9\x47\x54\x99\xe4\x9d\xe6\xad\x20\x61\x22\x1e\x51\xb0\x56\x68\x39\x07\x46\x88\x09\x44\xad\xfa\x86\x89\x31\x91\x34\x44\x4e\x1e\xae\x57\x91\xde\x76\x08\xf3\x9a\x4a\xcb\x3e\xd3\xf0\x1a\x81\x11\x90\x4c\x94\xc4\xfc\x0d\x59\x8e\x52\x59\x23\xc7\xc1\xad\x56\x30\x17\x1f\x90\x3b\xfa\xe2\x0c\xcd\xc7\x98\x7e\x6a\xbf\x9a\x50\x82\xd4\x58\xc3\xf8\xf9\x92\x55\xd8\x30\x47\x7a\x60\xdb\xba\x65\xb9\x67\x31\x92\x5c\x88\x56\x07\x99\x74\xad\x3e\x30\x85\xc6\x5a\x32\xa2\xdd\xb5\x4d\x57\xe3\xb7\x3f\x9e\xfe\x42\x4a\x6a\xb7\xbb\xde\x3b\x31\xde\xbd\xd8\x7c\x10\x54\x8a\xa2\x17\x19\x2c\x8c\xe4\x23\x66\xc8\x5f\x50\x86\xd8\x67\x6a\x47\xe4\x04\x24\x01\xf5\xe8\x8b\xbc\x08\xd5\x06\x57\xfc\x34\x30\x96\x90\xd1\x47\xdf\xa0\x84\x4a\xeb\xee\x99\xeb\xf4\xce\x13\x96\x50\xb4\xb2\x61\x5a\x99\x3a\x14\x8d\xd1\x29\x39\x7d\xdd\x26\x80\x52\xb6\xf2\x64\x5d\x88\x4c\x65\xd8\x7b\xac\x2c\x83\x24\x43\x5b\x19\x2d\x83\x28\x39\xa2\x34\x34\x4a\x8b\x40\x46\xcc\x49\x06\x4b\xe3\x06\x6e\x6e\x8d\xe6\x48\x74\x9f\x4a\xfa\x09\xb5\x73\xba\x88\x0d\x2e\x5e\x2d\x4e\x12\xf2\x40\xf6\x8d\xf6\x4f\xb7\x20\x78\x6d\x23\x05\x8a\x48\xf7\x52\xb8\xe0\x55\xba\x16\x2f\x84\x58\x6e\xe0\xb6\xb0\x3e\x30\x5d\x59\xaf\xb1\x0b\x38\xa6\x6f\x93\xb6\x20\xc2\x45\xae\x7d\xe9\x0e\xeb\x94\xce\x77\x9e\x49\xef\x38\x77\x6b\x62\x3f\x54\x17\x9b\x3a\x1b\x9f\xb3\x6b\x47\xef\x6c\x93\x4f\x48\xa3\x9e\x3e\xae\x70\xe7\xc7\x81\x29\xe0\x82\x8a\x54\xb0\x0c\xc1\xcc\x35\xc9\x79\xde\xa8\x98\x90\xfe\xde\xe6\x94\xdb\x03\xcb\x9e\x59\x69\xf3\xf9\x53\x34\x4c\xaa\x8a\xd5\xc4\xa5\x0e\xe3\x5d\xe0\x1d\x8c\xc5\x91\xe6\xd0\x0c\x1f\xda\x7c\xbb\x48\x86\x76\x3e\xdf\x04\x6f\x94\x2a\xcc\xf7\x6d\x08\xdf\xa3\x45\x05\x99\x62\x72\x38\xd3\x67\xed\x09\xdc\x2c\xe6\xc6\x3d\x19\xd7\xc3\x21\x3f\xbf\x51\x4e\xa2\x3f\xe4\x4b\x28\x07\x14\xc2\x30\x1f\xe3\x34\xe7\xe3\x30\x9b\x77\x2e\xa2\xf9\x1e\xf4\x39\x25\xbf\x5c\x86\xf1\x3e\xb3\x7d\xcb\x79\x29\x52\xa3\xfd\xb6\x67\x74\xbe\xb6\x6e\x24\x43\x9d\xa3\x88\x32\xfe\x5a\x71\x05\x05\xaf\x11\x36\xd4\x69\x25\x0a\x94\x4c\x63\x0e\x4f\x5b\xd0\x15\x82\xda\xb0\xb2\xa4\x45\xa3\xdb\xb6\x4e\x8d\xfc\x7d\xce\x35\x17\x25\x31\x83\x5e\xc3\xcb\x4a\x43\x27\xdb\x17\x84\xa2\xd7\xd6\x54\x85\x02\xb6\x6d\x4f\xe1\xbc\x97\xbd\x98\x58\x0a\x2e\x08\xce\x86\x0e\x58\x1e\x45\x11\x6f\xba\x56\x6a\x58\x50\xfc\xb1\x40\xbd\x32\x4b\x33\x36\xff\x94\x5c\x57\xfd\x53\x4a\x92\xab\xb2\x7d\xef\x2d\x8c\xbf\xfa\xf5\x7a\x99\xb0\xf9\xbc\x4c\xd2\x6d\xb3\xef\x0a\x61\x65\x17\x1f\xe5\x75\x99\x96\xbb\x18\x71\x34\xd9\xf6\x1f\xb1\x60\x7d\xad\xd7\x16\x0e\x77\x8c\x09\x57\x9a\xfe\x02\xe2\x9f\xff\x8e\x21\x9d\xdb\x30\x4e\xf7\xea\x19\xb7\x4b\xb8\xa2\x20\x7a\x34\xbd\x9a\x4e\x8c\x18\xae\xbf\xc8\x63\x7b\x5e\xfc\xc0\x6a\x12\xbd\xf1\x7c\x78\x74\x77\x67\xf4\x88\x38\x71\xcf\x7e\xe4\xbc\x3a\xe3\x09\x3c\xfe\xc7\x23\x9b\xc0\x62\xbf\x32\x5f\xdd\xc9\x6b\x89\x68\xa2\x55\x1b\xae\xb3\x6a\xd8\xe9\x77\xb4\xfb\x16\xc9\xf4\xea\x1e\x61\x19\x5c\xfa\x3b\x0c\x74\x5a\x94\xc5\xc7\xe3\x7a\x63\x89\x00\x2f\x4c\x1a\xcb\x54\xc2\x29\x78\xce\xd4\xe8\x0c\x99\xbf\x61\xaf\x38\x95\x74\xf6\x69\x31\x64\x69\xb7\xcb\xd5\xd1\xc6\xf0\xf0\xcf\x6d\x8c\xd1\xd6\x20\xe2\xd2\xaf\x0e\xf3\x17\x62\xf0\x5c\xb7\xb6\x7c\x94\x6b\xf5\xa5\xcf\x32\x54\x26\xd9\x77\x2e\xb4\xa5\xd1\x0f\xa7\xd3\x9a\xfa\x8c\x9b\x5f\x1f\xd6\xf7\x06\x57\x7b\x0c\xa7\x19\xd2\x51\xdf\x6b\x1e\x20\x9d\x8c\x2f\x65\x58\x83\xee\xc5\x69\x7b\x3f\x00\xe0\xfa\x96\x8a\x55\xcd\xb1\x6c\xf8\xb9\x23\x9f\x03\xff\xff\x0e\xfb\x8f\x01\xfe\x1d\x50\x8f\xee\x84\x33\x38\x87\xde\x38\xe0\x89\xaf\x5e\x3c\x8b\x76\xe3\x1f\x78\xa3\xd7\xda\x9c\xbb\x61\x2f\xd9\xd7\xf5\x85\x03\x45\x62\x1a\xe9\x46\x9a\x9b\x70\xf4\x33\x6a\x58\x51\x83\xf9\x93\x1d\xf3\xb6\xa9\x13\x0a\xde\xe8\x10\x6d\x7a\xff\x4d\x4b\xe6\xee\xb7\x0d\x70\xee\x87\x9c\xdf\xa6\x83\xb7\xbc\xcd\xcc\x23\x4b\x94\xe4\xc8\x28\xf9\x45\x7f\xd3\x98\xc7\x15\x8c\x2a\x66\x7e\x9e\x4d\x34\x95\xf5\xe4\xd5\x86\x80\xfe\x0d\x00\x00\xff\xff\x56\xd5\x77\x15\x5c\x0e\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 3676, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x8f\xbd\x0a\xc2\x30\x14\x85\xf7\x3c\x45\xe8\xd8\x21\xdd\x1d\xc5\x0a\x2e\x2e\xfa\x02\x97\xe6\x9a\x06\xf2\x53\xee\x0d\x58\x29\x7d\x77\xfb\x23\xb6\x59\xdc\xdd\x0e\x39\xe7\xbb\xe4\x1b\x06\x99\xd0\x77\x0e\x12\xca\xa2\x45\xd0\x48\x85\x54\x72\x1c\x85\x98\x2a\xfb\x90\xea\xc2\x75\xdf\x45\x4a\xa8\xa7\xd7\xaa\xcc\x00\x1d\x1b\x4e\x64\x83\x59\x99\x95\x08\x31\xcd\xd4\x11\x18\xef\xaf\x0e\xe7\x5b\xfc\x04\x63\x90\x0e\x3e\x6a\x74\x72\x9a\xa9\x2b\x78\x5c\x09\x74\x9c\x6d\xb4\xe5\x86\xac\xb7\x01\x52\xa4\xfd\x76\xc9\xa7\x7d\x7b\xb6\xe8\xf4\xe7\x4a\x98\x83\x28\xab\x2d\x67\x3f\xe5\xa6\x45\x0f\x3b\x35\x82\x60\x50\xaa\xba\x4f\x04\xb7\xa5\xe4\xaf\x41\xee\x2c\xfe\x45\xfa\xa7\xf3\x36\x7f\x07\x00\x00\xff\xff\xa8\x7f\x8f\x01\xf3\x01\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 499, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x19\xde\x60\x05\x86\x33\x14\x7b\xca\xd0\x87\xa4\xd9\x1f\xbf\xac\xc3\x92\xf5\xa5\x18\x50\x5a\x3a\xc5\x6c\x24\xd1\x21\xa9\xa4\x5e\x90\xef\xbe\x3b\x92\xb2\x29\x59\x72\x9d\x6e\x43\x0b\xb4\x68\x00\x9a\x3c\xde\xfd\xee\x0f\xef\x7e\xf6\xe3\x23\xc8\x1c\x44\x95\xc1\x7c\x61\x2e\x84\xc1\xeb\xcd\x1a\x79\xfd\xd3\x87\xb5\xd2\x16\x33\x78\x7a\xb2\xbc\x45\x82\x6b\x61\x52\x51\xc8\xbf\xe9\xfc\x37\x51\x22\x9d\x80\xac\x2c\xea\x5c\xa4\x74\x3e\x02\x92\x09\xba\xa6\x95\xb2\xac\x64\xd1\x1c\x27\x30\x55\x1a\xe6\x7f\xe0\x5d\x2d\x35\x29\x9d\xff\x2a\xcc\x1b\xd2\x95\x09\x2b\x55\x65\x12\xd2\xb5\xb2\x76\x7d\x2b\xed\x3c\x6c\x8b\x65\x81\x64\x13\x2b\x46\xe0\x74\x83\x16\xd5\x0d\xd9\x3e\x2f\x8a\xd7\xf9\x76\x93\x2c\x92\xa1\xf3\x4a\x55\x9b\x52\xd5\x86\xf6\x77\x92\xbf\x6b\xb5\x46\x6d\x25\x9a\x58\x7c\x42\xf2\xd7\xf5\xba\x40\x2f\x6b\xb1\x5c\x17\xc2\x22\x8c\x2d\x6f\xe6\x12\x8b\x6c\xc1\x98\xc7\x30\xf7\x12\x58\x18\x2f\xbb\x13\x35\x56\xd7\xa9\xed\x93\x8d\xf0\xfa\x75\xc0\x48\x0e\x9f\x67\x99\x64\x77\x45\xd1\x02\x76\x7a\x02\x2d\x18\x99\x4a\x49\xbd\xac\x6e\x48\xe9\xc0\x95\x96\xfc\xda\x9f\x6c\x76\xf1\xbc\x54\xe9\xd5\x21\x0d\x94\xb8\x93\x53\x8f\x31\xca\x69\x9f\x64\x93\xe8\x69\x02\xa5\x58\xbf\xf5\xb8\xfe\x6a\x99\x37\xe9\x0a\x4b\xc1\x65\x33\x8c\x97\x4d\x51\x34\xe2\x9c\xed\x24\x17\xa4\xeb\xf8\x38\x34\xd2\x9f\x14\x02\x77\xf9\x63\xde\x3b\xa1\xc8\xf1\xb7\x47\xf9\xdb\xe0\x8a\x53\x1f\xd6\xbe\x7c\xfc\x87\xf9\x2f\xca\xbd\xb0\x81\x62\x71\xeb\xbd\xea\xfd\x0c\xc5\xdb\xc9\xd6\x57\x5d\xbd\xfb\x29\xfd\x6a\x0a\xf8\x69\x34\xca\xeb\x2a\x85\x3f\xab\x52\x68\xb3\x12\x45\xef\x18\x98\x6a\x14\x19\x6a\x90\x8a\x3a\x3c\xaf\x66\x90\x52\x57\xaf\x4b\xda\x6b\xda\xfa\xab\xb0\x41\x93\xa0\x57\xc7\x0c\x50\x6b\x45\xc7\x3c\x48\x4e\x4f\xe1\x01\xa1\x42\x9a\x14\x56\x01\x6b\x07\xbb\x92\x06\xec\x83\x4c\x71\x06\x46\x41\x2e\xb5\xb1\x3c\x7e\x14\x08\x58\xd6\x79\x8e\x9a\xee\xf1\xdc\x70\x8a\xe0\xec\x25\xa1\xa9\xad\x2c\x1c\x22\x1a\x19\x01\x63\x42\x52\x94\x3d\x16\xf9\xe6\x25\x54\xb2\x70\xf6\x80\x6c\xd8\x5a\x57\xbc\xe1\xee\xd3\x1e\x07\x82\x14\xb3\xa6\xe5\xc6\x72\x31\xe1\xc3\x85\x33\x34\x65\x33\xc9\xc8\xe3\xb4\x2b\x0c\x60\xac\x24\x47\x1c\x4c\xfa\xef\x30\x33\x62\x82\x8a\x36\x5d\x39\xb9\x7b\x51\xd4\x08\x2a\x77\x1f\xb8\x19\x5c\x4a\x93\x6a\x59\xca\x4a\x58\xa5\x7f\xe6\x07\xc9\xcd\xb2\x29\x86\x39\x59\xb8\x17\x1a\x6e\xd0\xba\x9e\xe1\xdf\x2d\x3c\x76\x12\xdf\xaf\xc4\x57\x1e\xbc\x7b\x6f\x54\x75\xc6\x17\xe8\xa3\xcd\x61\xfc\xed\xdd\x78\xe0\xca\x3b\xe7\x72\x08\x0e\x79\xdd\xa4\xb0\x49\xdd\x94\xa2\x31\x83\xef\x02\x9a\xe4\xc7\xe3\x82\xd8\x52\x79\xef\xcb\x1b\xb7\x44\xc0\x97\xf8\xf4\x28\x7c\x33\x18\x2f\x55\xb6\x19\xcf\x9a\x80\xcc\x8f\x88\xc3\x33\x60\x52\x32\xaf\xe3\x24\x0d\x27\x88\xf2\x5a\x1b\x5f\x9b\x19\x12\xc3\xa1\x73\x84\x87\x95\xe4\x34\x73\xa2\x68\x3f\xa5\x02\xa0\xc7\xc6\x64\xa8\x6e\xde\x8e\x4b\x3b\xd7\x8e\xab\x5b\xb2\x68\x1e\x24\x97\xc6\x33\xdc\xf1\xc9\xf7\x03\x62\x72\x3b\x83\xc9\x3d\x87\x35\x96\x6d\x3a\x16\x40\x4a\x6c\x0e\x3a\x91\x9d\xdc\xd2\xe9\x99\x3b\xf6\xb5\xa5\xd1\xd4\x85\x65\x31\x52\x15\x2e\x1e\x51\x04\xfe\x5a\x5f\x70\xfb\x03\xcc\xff\x1a\xe5\xe1\x34\xe8\x98\xb1\x98\x3b\x89\x7b\x2c\xff\x75\xb4\x28\xed\x9e\xe0\xf4\x87\x17\x2f\xa8\x12\x64\xe5\x6a\xe9\x40\x92\x5c\x1e\xcf\x80\xbc\x7e\x5e\xc1\x8c\xa8\xe9\xc5\x73\x93\x83\xc1\xdc\x75\x61\x5e\x29\x6a\xa1\xf8\xe1\xf5\xf2\x3d\xa6\x8e\xde\xfa\x41\xcc\xf4\x73\x70\xd0\xf1\xa4\x08\x1d\xae\xa1\xd1\xb4\x15\xe8\x71\xc4\xb1\xd9\x8f\x20\xd7\x32\xbe\xdf\x28\xb7\x61\x6a\x51\xcc\x6e\x7b\xbf\xe0\x97\xe2\xe6\x7a\xe4\xcc\x01\x22\x3f\x3c\x21\x1a\x15\x31\x99\x5d\x98\xab\x7a\x19\x78\xcc\xa8\x87\x99\x0f\x51\xf0\xed\xf5\xed\x37\x8d\xa7\x27\x37\x5f\xa8\x03\x4c\xa8\x29\xa4\x28\xef\x51\x33\x26\x9e\x71\x2d\xa4\x93\xb9\xdf\x4e\x7a\x1c\x70\x53\xee\xa0\x07\x8f\xdb\xb9\x8d\x77\xa4\xaa\x27\xf3\x4d\x24\x42\xd5\x75\xdf\x4d\xfb\xca\x1b\xd7\x23\xe2\x54\xed\xae\xb5\xfd\xa0\x23\xaa\xba\x94\x56\x31\x5c\x67\xb2\x21\x59\xed\xf0\x76\x16\xa3\x2f\x96\x80\x7d\x86\x2f\x0f\x5f\x08\xf3\xfa\x9f\x78\x57\x2b\xe7\x91\x2f\x51\x6f\xcf\xae\x50\x4b\x67\x57\x77\x1e\xb7\x7f\x56\xcd\x37\x83\xd1\xfe\x57\x83\x8f\xdc\x1c\xa2\xbe\x2d\x45\xa2\x47\xa8\x57\x6f\xa8\xe1\x4f\xfc\x35\xc0\x7d\x8e\x7f\x8b\x68\xd6\xc9\x1e\x22\x1f\xd3\x40\x2b\x54\x8f\x6b\x37\x16\xa6\x05\x56\xa1\x37\x25\xf0\xfd\x33\x55\xfc\xcb\x09\x40\x9c\x22\x38\x86\x5b\xf2\x63\x3c\x49\x24\xbd\xab\xba\x14\x55\xdc\x86\x47\x4d\x33\xec\xf6\xc2\x18\xc4\xd6\xe6\x1e\x9a\x01\x10\x27\x9d\xf6\xfd\x9f\x4c\x9f\x64\xeb\xd8\x34\x57\xba\x14\xd6\x30\xe5\xcc\x4b\x4b\xd0\x6f\x24\x2d\x37\x89\x9f\xda\x8e\x17\xec\x66\xf9\xa8\xa7\xc9\xf5\xfc\x56\x12\x0d\x88\x56\xb6\x56\xc2\x5c\x1e\x7a\x10\xbb\x47\xf4\x4f\x00\x00\x00\xff\xff\xe8\x3f\xeb\x66\xda\x12\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 4826, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xbb\x6e\xdb\x30\x14\xdd\xf3\x15\x84\x90\x21\x09\x5a\x65\xef\xe6\x20\x7d\x78\x69\x0b\x24\xe8\x12\x14\x30\x2b\xd2\x09\x0b\x89\x14\x48\xaa\xad\x6a\xe8\xdf\xcb\x97\x24\xea\x61\x4b\x0d\x3c\x24\x32\x37\xd9\xbc\xcf\x73\x79\xcf\xe1\x6e\x07\x10\xde\x12\x8a\x41\x24\x92\x27\x9c\xc1\x1b\x86\xca\x08\x54\x95\x90\xbc\x48\x24\xd8\x9d\x01\xa0\x6c\x38\xa4\x8f\x18\xc4\xab\x34\xfd\xb2\x55\x87\xf6\x4f\xb2\x05\x8c\x83\x0b\x48\x11\x38\x8f\xd7\xe2\xae\xf8\x71\x5f\xe6\xca\x6a\x2d\x6e\xa0\xc0\xf5\xf7\xfb\x3f\x39\xe3\x12\xa3\x4b\xfd\x63\x45\x19\x2d\x33\x56\x08\x15\xa4\x0d\xfb\x95\xb3\x1c\x73\x49\xb0\xf0\x63\xab\x9a\xce\xe3\x5b\x22\x12\x4e\x32\x42\xa1\x64\xfc\x03\xc1\x29\x02\xf1\x67\x98\x61\xeb\xef\x2a\xa0\x4c\x9a\x0a\xda\x54\x87\x8a\xba\x6c\x7c\xb5\xc1\x7d\x91\xa7\x2e\x9a\xc4\x59\x9e\x42\xa9\xa0\xc8\x39\xf9\x25\xf5\xc1\x56\x67\x8c\x40\x6c\x0d\x70\x2a\xac\x69\xd7\xd2\x42\xd5\x33\x55\xf9\xbb\x3e\x07\x13\xce\x4b\x76\x38\x11\x45\xde\x1f\x16\xc5\xe6\x50\xe5\x8e\x3f\x41\xb1\x42\x88\x48\xc2\x28\x4c\x3b\x90\x5f\x5f\x81\x4e\x35\x88\x25\x2a\x15\xa1\x8f\x2a\xcb\x1e\x97\x1e\x5c\xe6\xa4\xfc\x06\x53\x82\xa0\xb6\xbe\x65\xc9\xdd\xa1\x08\x55\x05\xae\xae\x9b\x49\xeb\x61\x79\xe3\xb3\x03\x6d\x87\xe7\x06\x96\x43\x91\xa8\x04\x7f\xf1\x78\x48\xef\x5a\xb4\x98\x4f\x5a\x1a\x80\x40\x06\xf3\x07\xdb\xf1\xf7\x4e\x63\x76\x25\x74\x0d\xfb\x91\x00\x9b\x9f\x82\xd1\x77\xd1\xdb\x68\xa3\xfb\x31\x63\x68\x3a\xf3\x9c\xd6\x2a\xec\x7c\xb0\x6b\xeb\x67\xe1\x6c\x9c\x8f\x06\xb1\x89\x36\x85\xee\xc0\xc8\x02\xfb\x30\x0b\xcf\xba\x59\x0f\x4a\xff\xfe\xba\x6f\x9b\xb6\xa5\x07\xd5\xc0\x85\x6b\x6b\x9c\x6f\x6c\x8d\x1f\x99\x39\x19\x2c\x4b\x6f\x49\xcc\xf7\x80\x8f\x7a\x54\x17\x88\xa6\x26\x9a\xb3\x91\xbb\x7e\x8a\x04\x33\xd3\xc7\x28\xd7\xd1\xf9\x66\xb8\x24\x8b\xa7\x9c\x69\xf3\x1e\xd4\xc7\x61\xa0\xaa\xbe\xec\xfe\x7b\xc9\xf6\xf1\xbc\x07\xd3\xd1\x1e\x49\x3d\x46\x5a\x3a\xe5\xcc\x7d\xd2\x38\x83\x3e\x30\x0b\x79\x43\x8c\x2f\x58\x90\xf0\x09\x09\x3f\xb5\x65\x99\xad\xcf\xff\x7b\x9f\x96\x20\x8a\x8b\x14\xa9\xfa\xd3\x93\xa9\xdf\x44\x3e\xd5\xcb\x15\xb4\x2a\x68\x55\xd0\xaa\x97\xac\x55\xcd\x5d\x68\x72\x4c\x2d\xd0\x8c\x1d\x18\x23\x26\x8d\x9d\x82\x60\x3f\x5e\x1e\x40\xba\x2f\x87\xf5\x1b\x96\x11\xed\x20\xcb\x68\x33\xd4\x9a\x11\xe2\x0d\xa2\x73\xaa\xa2\xc3\x0a\x19\x74\x27\xe8\x4e\xd0\x9d\xd7\xa3\x3b\x8e\x87\x82\xf6\x04\xed\x79\x65\xda\xf3\x2f\x00\x00\xff\xff\x80\x4b\x58\xd4\xc8\x1c\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 7368, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1445053809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x5b\x6f\xdb\xb6\x17\x7f\xcf\xa7\xe0\xdf\xe8\x7f\xb0\x5b\x43\xed\xc3\xb0\x87\x75\x1d\x90\x75\xe9\x16\xac\x37\xb4\x5d\x5f\x8a\x62\x61\x6c\x3a\x56\xa1\x8b\x2b\x4a\x99\x3d\x43\xdf\x7d\x87\x57\x51\x14\x25\x4b\xb1\xec\xa5\x89\xf2\x12\x89\x97\xc3\xf3\x3b\x3c\x77\xdb\xdb\xed\x9c\x2c\xfc\x88\xa0\xd1\x2a\xf1\x43\x3f\xf5\xaf\xe1\x95\x04\xf3\x6b\x1c\xf8\x73\x9c\xc6\xc9\x28\xcf\x4f\xb6\x5b\x7f\x81\xbc\x77\xe4\x6b\xe6\x27\x64\x0e\x03\xf0\x4a\x92\x04\xfd\xf8\x0c\xc9\x75\x44\xcf\x8e\xb7\x5b\xe4\xbd\xc5\xe9\x12\xe5\xf9\x14\xc1\x0b\xd0\x8d\xd2\x05\x1a\xfd\xff\xeb\x08\x79\x2f\xe3\x19\x4e\xfd\x38\x52\x93\x40\x28\x8a\x53\xe4\x9d\xd3\xd3\x28\x8e\x36\x61\x9c\x51\x98\x62\x24\x7e\x8b\x3f\x6c\x56\x04\x5e\x80\x20\x89\xe6\x6c\xd0\xfb\x88\x83\x8c\x9c\xad\x57\x09\xa1\x14\x88\xf0\x85\x6e\x0a\x13\xb9\x69\xf2\x94\x33\xfa\xbf\x67\x28\xf2\x03\xb4\x3d\x41\x28\x21\x69\x96\x44\x6c\xf4\x84\x01\xe3\xab\x24\xc0\x57\x7e\xf4\x92\x44\x57\xe9\xd2\x8d\x50\x4f\x8f\xc5\xb1\x0a\xa5\x01\x18\xe8\x05\x94\xe4\xf9\x68\x24\x29\xef\x90\x00\x4d\x61\xea\x6a\xec\x82\x36\x61\x5b\x4d\x96\xba\x41\xc1\xeb\x46\x28\x6a\xfa\x98\x50\x0a\x96\x3a\x41\x01\x7e\x52\x92\x44\x6e\x20\x72\xf2\x58\x30\x2e\x60\x5c\xf3\x73\xd1\x55\xb9\xfc\x30\x0b\x6b\x55\x8b\x4d\xf6\x07\x63\x11\xc4\x38\xfd\xe1\xfb\x66\xcd\x12\xfc\xf0\xb7\xb3\xf5\x2c\xc8\x28\x18\xbf\x1e\xee\xaa\x6e\x0d\xe0\xc4\xe4\x51\xc1\x29\x7e\x2c\x70\x6a\xb8\x1b\xb8\x2c\x48\xfd\x55\x40\xde\x2c\x6a\xf0\xe9\xf9\xa3\x42\x34\xb8\xea\x04\xe7\x2c\xb2\x2e\x0a\x88\xbd\x23\x33\x02\xf2\x49\x5e\xe3\x10\x98\xf4\x14\x34\xc6\x22\xa6\x33\x78\xfb\x87\x20\x8f\x4d\x0a\x54\xc6\xe0\xfb\x6c\xb1\xf0\xd7\x30\xcc\xc8\xf6\x87\xdf\x89\xbb\x2d\x4a\xf5\x5f\x45\x36\x1a\xf8\x33\x52\x0d\x68\x71\xc2\xad\xf2\x3c\x25\x21\xe5\x2a\x2c\x9e\xf8\x34\xc4\x93\x68\x4e\xd6\x1f\x71\x52\x41\x2c\xc5\xf0\x9e\xbd\x80\xf4\x00\x01\xdc\x53\x40\x22\xf7\x5d\x4d\xaa\x6e\x80\x1f\x53\xeb\x07\xf8\x6c\x9f\x82\x6c\x07\x45\xf9\x04\xc9\x5c\x57\xeb\x6f\xc2\x24\x67\xff\x2b\x4c\x9a\xb9\x4e\x98\xfe\x8c\xfc\xaf\x19\x69\x80\x65\x2c\xb8\x25\x6a\xdf\x87\x71\xdf\x16\x2b\x96\x2c\x28\x8b\x14\xaf\xcc\x60\xf9\x88\x4e\x36\xd5\xfb\xef\x98\x7e\x14\xb0\xe0\x0c\x6e\xc2\x0b\x58\x0c\xc7\x2b\x35\xc9\x73\x26\x8c\x27\x4f\xad\xb1\x9f\x50\xad\xe1\x5a\x4b\x1f\x3d\x02\x5e\xb7\xdb\xbf\x7d\x10\x84\xa7\xd4\x02\xc1\x1a\x78\x5c\x05\x20\x4e\x96\x40\xc7\x2b\x92\xa4\x9b\xc2\xd3\x20\xcf\xf0\x47\xb9\x86\x66\xfb\x29\xa4\x1c\x55\x88\x57\xc6\x66\x31\xa7\x6e\x15\x59\xd7\x8a\x4a\xf7\x8a\x8e\x7d\xb1\xc8\x16\x19\x6a\x71\xb5\x08\x68\xeb\xdb\x64\x97\x76\x3a\x9f\xfb\x8c\x28\x0e\xde\x0a\xe1\xf9\x84\x16\xb8\x91\xe7\x9a\xf7\x5e\x13\x32\x37\xae\xdb\xb8\x6d\xe7\xf2\x3f\xc8\x46\x2b\x40\x82\xa3\x2b\x52\xc3\x3d\x67\x18\xa6\xc4\x15\xd7\x71\xc6\x97\x34\xdf\xb9\x5e\x26\xd0\x3a\x90\x3b\xf9\xd4\x3a\x7d\xa7\xea\xab\x02\xb8\x7a\xb0\xa3\x73\x7c\xf9\x85\xcc\x52\x33\x3c\xd7\x9e\xaa\xec\xe1\x9c\xbe\xce\x82\x00\x5f\x06\x8c\x7f\x18\xa8\xb9\x50\xcd\x55\x71\x17\x25\xc7\x58\x81\xeb\x49\xad\x22\x63\x50\xa8\x10\xa7\x74\x37\xbc\x0a\x3b\x05\x54\x7e\x2c\x98\x95\x7c\x14\xba\xe7\x9d\x06\xc1\x9b\x45\x79\xa8\xa2\xfb\xbb\xf5\xab\x7c\x88\x7e\xea\x81\xa0\xd6\x06\x40\x86\x23\xe6\x61\xe9\x87\x0c\xf2\x4c\x53\x6b\x75\xa2\xf4\xf8\xb1\x52\x50\x28\x9a\x10\xd6\x0b\x90\xcf\x57\xd0\x65\x9c\x05\x73\x74\x15\xa3\x25\x49\xc8\x49\xc5\x01\x16\xad\x07\x9b\x29\x1d\xd0\xce\xe9\x5b\xd5\x97\x10\x6a\x64\x42\x71\x37\x2c\x94\xd7\x65\xa2\x17\x24\x9e\x67\x34\x8d\xc3\x17\xfc\x4e\xa1\x76\xb3\x09\xcd\xf8\xb4\xb8\xf2\x26\x32\xa7\x49\x82\x37\xf6\x66\x2b\xb9\xac\xee\x7a\x85\x57\xd6\x96\xb2\x9b\x97\xe2\x57\x3b\x78\x90\xa3\xcf\x63\x58\x4c\xd6\x6f\xb8\x6d\x18\x77\x70\x5e\xe7\x32\x4b\x07\xd8\x26\xc5\xcf\x68\xc8\x8f\x67\x4b\x12\xe2\x52\xe4\xb1\x02\xcf\x35\x66\xfe\x15\xcd\x20\x96\x54\xa2\x0a\xfa\xf4\x19\x1c\x10\x49\x16\x78\x46\xb6\xe0\x8a\xb3\x68\x86\xc6\x8e\xf8\x84\x1e\x6a\x73\x01\x9b\x8b\x93\x94\xcc\x9d\xc9\x9b\xb0\x20\x61\x37\x8c\x4c\x51\x76\x08\x05\x9d\xa0\xdd\x81\x6e\x05\xfe\x71\x8a\x02\xe5\x0c\x45\x51\x3f\x65\x1b\x33\x52\x76\xe0\x02\x3b\x73\x85\x42\x4a\x13\x66\xda\x2c\x9a\x80\xad\x0b\xcf\xe2\x06\xfd\xac\x70\x09\x08\x31\xf1\x80\x13\x01\x49\x34\xd2\xe6\x6b\x0b\x0f\xf4\x85\xc6\x11\xa4\x91\x21\x4e\xe8\x12\x07\xe3\x4f\x9f\x2f\x37\xe0\x79\x2e\x80\x04\x9b\xd1\xc2\xbf\x80\x7a\xef\x3b\xa0\x5e\xf5\x45\xec\xcf\xf0\x47\xec\x55\x9c\xc1\xc2\xe1\x5f\x00\xb7\x08\x79\x8c\x3b\xb5\xa5\x1e\x13\xc2\xab\x15\x08\x79\x5c\xb7\x02\x48\x4e\xf4\x31\xf9\x89\x09\x46\xc7\x29\x87\xfc\xa5\xe0\xa7\xb5\x27\xbb\xa0\x95\x80\xe5\x85\xe7\x85\x15\x8e\x88\xca\x3d\x92\x14\x58\x9d\xb2\x16\x6b\x3a\x6a\xec\x83\x06\x95\x7d\xe0\xd2\x59\x39\xda\x41\x6b\x35\x6f\x37\x55\x5d\xe5\x92\x5b\xe8\x6f\x21\x87\xce\x4a\xac\x1d\x7f\x37\x4d\x36\x6f\xe7\x28\xea\x6c\x40\x6c\xd2\x69\xbd\xac\x77\xc5\x36\x68\xef\xa7\xdc\xcd\xd9\x68\x4b\x37\x2d\x12\x9d\xdb\xe7\xab\x35\x5f\x87\x75\xd8\x05\xfc\x3b\xe6\xb5\x0d\x60\x4d\x6a\xae\x97\x1d\xc2\x7f\x6b\xe2\x7b\xe8\xb9\xf1\x04\x19\xa5\x4a\xc2\x35\x4f\x14\xa5\x4b\x9f\xb2\xd3\x97\x59\x88\x23\xf3\x74\xad\xc2\x56\x97\x03\x19\x1d\x83\x22\x77\xaa\x64\x55\x35\x76\xf5\xb0\x12\x5e\xf6\x35\x03\xbb\xb0\x60\x1a\xbe\x08\x53\xe0\xfa\xca\x87\xc7\x8d\xa9\xc5\x85\x5e\xf2\x31\x51\x4b\xda\xd5\x83\x54\x09\x89\xb1\xe8\x87\x54\x3b\x21\x62\xe5\x3e\xb9\xb4\xa0\xd0\x4b\x3e\x5d\x21\xd5\x3a\xa7\xae\xec\x6c\x95\x57\x4b\x31\x49\xe5\x92\xaf\x95\x2a\xc9\x94\x12\xab\x79\xc6\x11\x0b\xec\xbf\xfa\x74\xc6\xc4\x12\x31\x7a\x2f\x98\x5c\xc4\xcd\x4e\xd0\xb8\x49\xe6\x93\xaa\xcf\xe8\xd8\x84\xab\xaf\x3e\x85\x4d\xd1\xc2\xdc\xe1\x65\xca\x16\x4d\x0c\x3f\xa2\x12\xfc\x32\x76\x73\x7c\x77\x71\x97\x97\xbd\x43\xe7\x76\x93\xe8\x8b\x36\xe0\xa8\x45\x61\x73\xaa\x5a\x01\x63\x61\xcb\x45\x3b\x00\x5e\x7e\xc1\x94\x30\x47\x3d\x11\x6d\x80\x06\x66\xcb\x4c\xea\xde\x47\x8b\x82\x7f\x27\xab\xa6\x80\xcd\xe7\xfd\x2c\xae\x37\x7b\xbb\xa9\xb5\xdd\xc4\xd6\x4a\x96\x56\x67\x67\xe2\x4a\xa5\xf6\xa9\x1b\xb4\x5c\xec\x4e\xe5\xdb\x6e\x2b\x2e\xb8\xc7\xbb\xec\xd5\x11\x1c\xc4\x0d\x40\x98\x64\x4d\x93\x6e\xa6\xf4\xad\x9a\xbf\xce\x6f\xf7\xe2\x89\x27\x36\xa3\xd1\x14\x8d\x2e\xe3\xf9\x66\x34\x75\x51\xd8\xc3\xfc\x05\x73\xec\xe3\x04\x96\xf5\xa1\x9f\xd1\x93\x4a\x0e\x14\x27\xd4\x63\x29\x48\x4c\xfd\x94\x14\x8a\x72\xc6\x66\xd8\x2e\xcf\xf3\x26\xee\x3c\xc9\x65\x49\xfa\x33\xcc\x3a\xfd\xb3\xbb\x38\x76\x75\xf0\xc0\xfd\x89\xee\x1e\xad\x9d\x23\x14\xca\x87\xab\x16\x5a\x88\xe3\x8e\x94\x0f\x6d\x90\xba\xea\x89\xdd\xfb\xfa\x2c\x30\x0c\x85\xa9\xf8\xfa\xc3\x37\x8d\x9a\xb1\xde\xf7\x56\x52\x5b\xe9\xdc\xb9\x06\x53\x6b\xe0\xdd\xed\xe7\x20\xcd\xa8\x26\x23\xea\xa9\x43\x55\xfe\x40\x53\xa6\x0f\xee\xf1\x21\x12\x49\x35\xaf\x7e\x94\x76\xe4\xc0\xe4\xf8\x2c\xaf\x9b\xc5\xd5\xdc\xec\x10\xb7\x0e\x1c\xb7\xfa\x69\x0c\x37\x4b\xe4\xc6\xed\xe2\x23\x58\xdd\x81\x5b\xc6\x6d\x05\x73\x2f\x32\xc1\x1d\xed\xe5\x96\x9b\xfb\xb7\xad\x9d\x47\xf6\xd3\x8a\x86\xbf\xfe\x1a\x01\x75\x7d\xea\xe3\x59\x4e\x9b\xd6\x73\x8b\xaf\xb3\x59\x92\x33\x05\x67\x7f\xbf\xc0\xec\x59\xe7\x8d\x65\x6c\x2f\x22\x1e\xaa\xdd\xa1\xda\x1d\xb2\x86\xa1\xda\x1d\xaa\xdd\xa1\xda\x1d\xaa\xdd\x5b\x14\x89\x86\x6a\x77\x88\x5b\x43\xb5\x3b\x54\xbb\xb7\x3b\x13\xbc\xf7\xd5\xee\x5d\x2d\x51\x4f\x9a\x6a\xd4\xca\x0f\x91\xcc\x1f\x81\x76\x08\xea\xf7\x22\x57\xee\x14\xc8\x7b\xc8\x8f\xbf\xc9\xb8\xdd\x32\x3d\x3e\x68\x22\xdc\x63\xce\xdb\xe8\x16\xaa\x3a\xd6\x46\x05\xdb\x99\xb9\xfa\x6e\xa3\x7d\x87\x45\x0b\xc8\x9e\x71\x7d\xf7\x51\xfc\x32\xb0\xf4\x7b\xe1\x5d\x3f\x04\xf4\xea\x39\x97\xa2\xdb\xe5\x83\x9c\x7a\x6b\x7f\x43\xcc\x12\x77\xd9\x31\xfd\x1b\x00\x00\xff\xff\xb6\x8f\x81\xde\x97\x45\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 17815, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xeb\x6f\xdb\xba\x15\xff\x3c\xff\x15\x07\x46\xef\x20\x05\xbe\x4a\x3e\x0e\x01\x32\x20\x6b\xef\x70\xbb\x47\x57\x24\xc5\xf6\xa1\x28\x06\x46\xa2\x6d\x22\x7a\x95\xa4\x92\x65\x86\xff\xf7\x9d\x43\xf2\xe8\x61\x49\x4e\xe2\xa5\xc3\x82\xa2\x90\xc5\xc3\xf3\x7e\xfc\x48\xd5\x22\xbd\x17\x1b\x09\xbb\x5d\xf2\xd9\x3f\xee\xf7\x8b\xdd\x0e\xde\xf1\xc2\xe5\x15\xf0\x0a\xe0\xd2\xe2\xfc\x1c\xbe\x6c\x95\x81\xb5\xca\x25\x3c\x0a\x03\x1b\x59\x4a\x2d\xac\xcc\xe0\xee\x09\xec\x56\x82\x79\x14\x9b\x8d\xd4\x60\xab\x2a\x4f\x88\xfe\x97\x4c\x59\x55\x6e\x70\x91\xf7\x15\x6a\xb3\xb5\x50\xeb\xea\x41\xc2\xba\xb1\x8e\xd5\x56\x96\xf0\x54\x35\xa0\xe5\xcf\xba\x29\x07\x9c\x58\x04\xa4\x55\x51\x88\x32\x5b\x2c\x54\x51\x57\xda\x42\xb4\x00\x58\x1a\xab\x91\xbb\x59\xd2\x73\x29\xed\xf9\xd6\xda\xda\xfd\xd8\x28\xbb\x6d\xee\x12\xdc\x74\xbe\xa9\x7e\x0e\xcc\xfa\x8f\x44\x79\xaf\xec\xcb\x88\x4d\x2d\xd3\x17\x52\x5a\xbd\x2e\x5e\xc8\x35\xa8\x70\x5e\xa8\x2c\xcb\xe5\xa3\xd0\xf2\x75\xfb\x8c\x4c\x1b\xad\xec\xd3\x72\x81\xdb\x30\x6e\x5a\x94\x18\xa8\xe4\x83\x5c\x8b\x26\xb7\x1f\x9d\x9b\x0c\x06\x0e\x97\x6a\x74\x93\x5d\xc3\xf2\xa7\xef\x4b\x48\x28\x96\x6e\x83\x2c\xb3\xf6\xd9\x6f\x7e\x77\x2f\x9f\x56\xf0\xee\x41\xe4\x8d\x0f\xff\x80\x0b\xad\xe2\x13\x1c\x30\x0c\xe4\x07\x5c\x63\x97\x2f\x9f\xe4\x23\x51\x0b\x93\x8a\x5c\xfd\x1b\xb5\xfb\x24\x0a\x22\xbd\xfe\xfc\x11\x52\x2d\x31\xb0\x06\x04\x94\xf2\x11\x26\xc9\x40\x95\xc6\x8a\x32\x95\x8b\x75\x53\xa6\xc7\xb8\x45\x14\x23\x38\xa3\xff\x93\x0f\x55\xda\x14\xb2\xb4\x31\x9c\xcd\x0a\xdf\x39\x65\x93\x1b\x99\x4a\xf5\x20\x35\xad\xa0\x38\x34\xf9\xb7\x73\x5b\x68\x07\x00\x09\xb8\x04\x7e\x5a\xb9\x77\x5b\xcc\xcb\x5c\x6a\x73\x09\x85\xb8\x97\x51\x21\xea\xaf\x3e\x31\xbf\x51\xa8\x92\x5f\xfd\x72\xec\x89\xd7\x95\x2e\x84\x45\x5a\xf0\xb9\xc2\xf1\xf2\xab\x99\xff\xf1\xbe\x2a\x0d\x9a\x80\x54\x4b\x54\x87\x49\xf8\x2d\xea\xb3\x1c\x90\x7f\xd6\x55\xd6\xa4\x87\xe4\xfc\x96\xc9\xf7\x94\x27\x5a\xda\x46\x97\x63\xd3\x17\x54\xdf\x47\xdc\xb5\x03\xb5\xc6\x74\x28\xd7\x95\xcf\x05\xfe\x85\xc2\x4c\xaa\x55\x6d\x55\x55\xba\x95\xd1\x5b\x47\x2e\x73\x43\xac\xa8\xb2\xf1\xd7\xb6\xc1\x52\x1e\xc4\x99\xfc\xcb\xa9\xd3\x3e\xc0\xd9\xf9\xc2\x3e\xd5\x72\x3a\x37\x48\x2d\x74\x61\x93\x5a\x17\x4c\x17\xff\xde\xdf\x30\x15\x90\x20\xad\x4a\x2b\xff\x65\x3b\x82\xae\xee\x92\xf7\x7e\x6d\xd1\xc5\x92\xa9\x66\x82\xb9\x68\x03\xd9\xf2\x0b\xe1\xbc\x91\x1b\x85\x8f\x4f\x8b\x51\x30\xc1\xf3\x59\x8c\xc2\xd6\x2d\xec\x76\xa1\x88\x79\xcf\x7e\x8f\x45\x34\x69\x7e\xa0\xd0\x18\x51\x12\x48\x2a\x0b\xb2\xd1\xbf\x44\xe5\xf0\xa7\xcb\x86\xbf\xca\x4c\x89\x2f\xe4\x46\xcc\x03\x6c\xbf\xb8\x9b\x9c\xea\x8b\xf5\x08\xdf\xd0\x66\x58\x15\xed\x36\x60\x60\x42\x9d\x07\x45\xd9\x86\x79\x45\x03\xc5\x50\xd1\x9a\x5f\x9e\xae\x68\xcb\x97\x15\xe5\x17\xd3\x8a\xde\x86\x6e\x89\xc5\xa1\x4a\x45\x89\x69\x02\x81\x4b\x65\xf3\x07\x61\x54\x7a\xdd\xd8\xed\xbc\x25\xb4\x3a\xb0\x82\x9a\x92\x4b\x7c\xbb\x15\x16\x2c\x16\xbf\x81\xc6\x48\x5d\x12\x3d\x26\x0a\xf1\x30\x8f\x95\xce\xdc\x0f\x5f\x7a\xde\x7a\x55\xa6\xaa\x16\x39\xca\x47\x61\x0a\xe7\xa1\xd4\x94\x4f\xb8\x88\x32\x30\x5f\x55\x2a\x1c\xe3\x47\x1c\x06\x70\x47\xaa\xb9\x95\x39\x5f\x38\xcd\x48\x9b\xc8\xa7\xd2\x2a\xa4\x54\x0c\x91\xaf\xd5\xb2\xc2\x89\x09\xf2\x3b\x05\x2c\xc8\x86\x25\xb6\x70\x14\x2b\x52\xb9\x43\x7f\xc7\xc8\xe6\xac\x5f\x83\x3d\xca\xfd\x7e\x05\x52\xeb\x4a\xc7\x9d\x6f\xd9\x6f\x58\x86\x7f\x96\x4f\x6f\xe0\x38\x81\xa8\xe1\x1e\x81\xc0\xa9\xae\x42\x2f\x21\x10\xa9\x88\x01\x88\x5a\x01\x0d\x2b\x32\x83\x5b\x0c\x41\x0e\x95\x21\x89\xf2\x08\x03\x5b\xd5\x6d\xd5\xe8\x54\xf2\xe0\x7a\xde\xad\x3f\xd0\x9d\xd3\x49\xfb\xb7\x9a\xc0\x8f\xcf\xd5\x39\xe7\x86\x8e\x04\x46\x62\x33\x22\xc3\x2a\xde\xc4\xcd\xcc\x15\xd9\x6c\xeb\x6d\xc9\xe7\xbc\xc0\x02\x5c\xc4\x4b\xd9\x61\x42\x06\x8a\xae\xed\xb7\x10\x32\x69\x13\x64\x9e\xd7\xc0\x5a\x34\xec\x56\xea\x07\xf9\x0b\xb9\x04\x10\x27\xe2\x9e\x1c\xe3\xe4\x60\x21\x06\x53\xf2\x7b\xed\x27\x56\xb6\x22\x63\xb4\xa4\x57\x82\x7b\x29\xdb\xea\xf9\xdd\x35\xd6\x01\xca\x14\xb7\xa3\x5f\xe8\x59\x43\xf5\x18\xea\x89\xc0\x28\xd2\xf5\x84\xba\xc1\x4c\x71\x76\x3d\xfe\x46\x9a\x1a\x5d\x2e\xff\x81\xfd\x42\xea\x15\x9c\x85\xb7\xdf\x1b\x69\x6c\x1b\x3a\x0f\x88\x6f\xa5\x3d\x1c\xb7\x6d\x20\x58\xb5\x9a\x57\x0a\xea\x70\xbe\xa9\x39\x3c\x13\x8d\x11\xc8\xec\x08\x8e\x27\x44\x45\x45\xdb\x32\x39\x41\x77\x8b\xdf\x8c\x98\x26\x87\xf3\xe6\x0a\xda\x8d\x23\x33\xda\x69\xc5\x35\xd8\xb7\x24\xe5\xc5\xb7\xb2\x84\xa5\xbd\xd2\x92\x56\xc9\xb1\x25\x87\xd1\x98\x32\xe3\x8d\x02\x72\x18\x8d\x38\xe8\x4e\xaa\xcf\xe1\xac\xc3\x58\x0c\xb5\xfe\x5f\x38\xff\xd0\xf3\xaf\xd1\x9a\x37\x05\xad\xff\x18\x20\x50\x5f\x5b\x6e\xf3\x58\xc0\x81\x6f\x00\x4a\xa7\xe8\x1a\x04\x78\x1d\xfb\xe8\xea\xa8\xb2\x2c\xd0\x2b\x79\x13\x14\xf2\xbc\x86\x70\xa9\x31\xb6\x2a\x82\x82\x80\xc7\x18\x95\x09\x5b\xe9\x53\x34\x1d\x4a\x89\x1c\x02\xe0\x59\x1c\xf8\x07\x13\x3c\xc5\xaa\x13\xc7\x0b\x7f\xe7\x17\xf1\xf4\xe9\x84\xed\x4a\xae\xb3\xcc\x09\x60\xce\x3d\x5e\xdc\x96\x02\x2f\xc9\x2b\xb2\x1f\x9c\x30\x52\xba\x41\x38\x6d\xd4\x29\x6e\x60\xb9\x18\x31\xdf\xb6\xc9\x92\x07\xa1\xa1\x29\x7b\x89\xf1\xf5\xdb\x31\xc4\x8b\x6f\x71\xd0\x8c\xcd\x3f\x0e\x57\xaf\xae\xa0\x54\x39\xf8\x53\xda\x40\xda\x15\xc2\x81\x1a\x87\x4d\xd4\x7f\xbb\x72\x98\x73\x9e\xdf\x32\x76\x27\xa6\x67\x30\xef\xab\x54\x6d\x01\xeb\x1b\xa9\xca\xfc\x8e\xa9\x3a\x87\x7a\x5f\xae\xb5\xc3\x40\x6f\xa4\x31\xf1\x3a\xa6\x6d\x1f\xee\xbc\x4a\x49\x86\x28\x6f\xa4\x67\x60\x37\x52\xd5\xeb\x94\xcb\x72\xc0\x25\x86\xdf\xc3\x45\x90\x19\x7a\x12\x95\xb3\x43\x16\xeb\x68\x59\x28\x63\xa8\x0d\xf6\x6b\xef\x12\x7e\x32\x4b\x06\xe9\x26\xf9\x53\xa5\xca\x43\xc5\xf0\x5f\x1c\x1f\x9c\xda\xd1\x36\xac\xef\x01\x5e\xc2\x6e\x02\x1b\x02\x1c\x22\x14\x5c\x1f\xf3\x09\xd8\xa0\xe7\xca\x1e\x22\x54\xd9\x69\xf3\xba\x27\x2e\x6a\xb9\x7d\xfc\xd0\x0e\xeb\x57\x82\x27\xe7\xad\xd9\xfe\xdd\x89\xf3\xd6\x5e\x77\x40\xbf\xd2\xa6\xb5\x98\x7a\x97\x18\x2c\xb5\x40\x97\xce\xfe\x6a\xad\x68\x06\x85\x02\x00\x93\x6e\x25\x4d\xae\x13\xcc\x1f\xc9\x8f\x02\xb3\xfe\xed\x80\xbb\x6e\xe0\x72\xbb\x75\xeb\xf1\xe1\xed\x01\x9d\x52\x07\xcc\x42\xa3\xa7\x93\xd4\x5c\xa5\x6a\x69\x68\xf8\x5f\x5e\x4d\x5e\x2e\x8d\x38\xc6\xfe\x66\x02\xfc\x7c\xf0\x7a\xd2\x66\x5f\x61\xac\x77\xb8\xcb\x42\x34\x9c\x6e\x1d\x69\x78\xf3\x82\xce\x41\x7f\x29\x1e\xb5\xa8\x74\x12\xef\xbb\xe5\xe5\x82\x2f\x41\x26\x4e\xd3\xde\x80\xaf\x24\xe5\x1b\x96\x21\x07\x24\x69\x49\x22\x1f\x92\x66\x05\x75\x77\x6c\xed\x1d\xa6\xba\xa4\x99\x4f\x99\xd9\x76\xe3\xd8\xc6\xfb\xb8\xeb\x36\x43\x45\xfb\xc7\xd7\x39\x4d\x3b\x9a\x10\x78\x27\x80\xbd\x9b\x7c\x2c\x57\x3e\xff\xf1\xfc\xfa\x03\x0c\x40\xae\x78\x98\x3c\x30\xa0\xff\x6b\x1f\xba\x54\xe0\xed\xad\xf0\x5d\x2b\x37\x72\xbf\x1f\xf6\x8f\x6e\xaf\x47\x0a\x3c\xf0\x86\x75\xc5\x17\x49\x53\x25\xd5\xc1\xcf\x93\xaa\xa9\x2f\xb0\x83\xfd\xa6\x05\x05\x93\x55\xd3\x8e\xf9\xae\x60\x06\x80\xe1\xf9\x2a\x61\x0e\x5c\x20\xff\x5c\x41\x61\xbb\xca\xe8\x29\x32\x28\x8e\xc2\x8e\x4b\x63\x20\x79\xb0\x72\x9d\xe7\xd8\xbc\x94\xb3\x5a\x8f\xeb\xe5\xe0\x8e\xab\x2b\x9b\x90\x79\x63\x12\xca\xc3\x57\x22\xa1\x89\x0c\x79\xcb\x7c\x61\xd4\x31\xcc\x17\xbe\xcf\xfb\x01\xf9\xd2\x17\xf8\xe2\x7c\x69\xb1\x16\xe7\xcb\x10\xb4\x3d\x9f\x2e\xcc\xe0\x0d\xd2\x65\x20\xf9\xff\x26\x5d\x7a\xb7\xa5\x3f\x32\x5d\x02\x94\xea\xc1\x94\xfe\x35\x7a\x9b\x2d\xed\xe5\xdc\x7f\x0b\x55\x3a\x79\x93\x38\x25\xea\x4b\x5f\xc1\x5d\x55\xe5\x1e\x8c\x4c\x62\xcd\xf6\x63\xc0\x00\x57\x76\xd6\x62\xdf\x17\xe8\x83\xe0\xa0\xed\x0a\x70\x00\x5c\x4e\x45\x80\x19\x7d\xed\xe9\xf4\xad\x73\x9c\xdb\x49\x0e\x3b\xc1\x60\x1a\xce\xc1\x9e\xf7\x02\x07\x52\x74\xc4\x1e\xfe\x04\x32\x30\xe7\x08\x19\xf4\x3e\x91\x7c\x92\x8f\x37\x55\x63\xc5\x5d\x2e\xc3\xd7\x92\xb1\x9e\x89\xfb\x26\x36\xe6\xb8\x22\x71\x1d\x98\xa6\xee\x7d\x00\xf5\x8f\xf9\xfe\xf8\x57\xb5\x23\xe7\x87\x23\x71\xe8\x81\x17\x5f\x33\xaf\xba\xda\x9c\xfb\x0e\x39\xe1\x91\xe0\xcb\x09\xa7\x1c\x3d\xc9\x4c\xdf\x0c\xf3\x5d\x1d\xc2\xe3\xde\xd7\x53\x72\x47\x0b\xfb\x6d\x85\xb8\x85\xd6\xa9\xaa\xe8\x13\x59\x85\x02\xe1\xd7\x2f\x5f\x3e\xd3\x56\xba\x0f\xbd\x93\xf4\x8d\x22\x83\x4c\x69\x99\xda\xfc\x89\xae\x01\x9c\x47\xff\x42\x87\x8f\xf2\xba\xcc\x9c\x80\x68\x79\xf9\xbb\x8b\x8b\x0b\x3c\x87\x88\x5a\x79\x48\x1e\xe1\x81\xe4\xd4\xd3\x03\xa6\xe5\xa0\xf0\x77\xdd\x59\x6a\x3e\x4c\x31\x65\xea\xc5\x6c\x9e\x8e\x53\xff\xb9\xaf\x9c\x1c\x0e\x82\x74\x61\x67\x44\x57\x26\xff\x09\x00\x00\xff\xff\x98\xb5\xa4\x2f\x0b\x21\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 8459, mode: os.FileMode(420), modTime: time.Unix(1448329716, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x95\x4d\x6f\x9c\x30\x10\x86\xef\xfc\x8a\x11\x4a\x25\xa8\xb6\xec\xbd\x52\x0e\xe9\x97\x1a\x55\x4a\x56\x4d\xa5\x9e\x27\x30\x80\xb5\x60\x13\xdb\x64\xbb\x45\xfe\xef\x1d\xf3\x11\xd8\x36\x51\x36\xd9\x43\x4f\x18\xf3\xce\x78\xe6\x79\x6d\xd3\x60\xba\xc5\x82\xa0\x46\x21\x83\x40\xd4\x8d\xd2\x16\xa2\x00\x20\x2c\x84\x2d\xdb\xdb\x24\x55\xf5\xba\x50\xef\xcc\x0e\x8b\x82\xf4\x72\x48\x5a\x2b\x6d\xc2\xa3\xb4\xa5\xb5\xcd\x56\xd8\x17\x89\xd7\xb5\xc8\xb2\x8a\x76\xa8\x29\x0c\x38\xb0\xeb\x34\x4a\x2e\x35\xf9\x44\x39\xb6\x95\xbd\xec\x8b\x35\xce\x75\x5d\xa3\x85\xb4\x39\x84\x6f\xee\x42\x48\x9c\xeb\xc5\x24\xb3\x71\x34\x84\x9d\x6d\x69\xbf\x82\xb3\x7b\xac\x5a\x82\xf7\xe7\x90\x2c\xe2\xfd\x37\xe7\x58\x0a\xcb\x4c\x83\xf6\x20\x5d\x1c\x04\xeb\x35\xfc\x28\x85\x81\x5c\x54\x04\xfc\x34\x98\x13\x58\x05\x94\x09\x9b\xc0\xb5\x4c\x79\xd6\x02\xfd\x12\xc6\x1a\x3f\xda\x89\xaa\x02\xa9\x2c\xdc\x12\xa8\x7b\xd2\x3b\x2d\xac\x25\x86\x9d\xb7\x32\x85\x54\xc9\x5c\x14\xad\xa6\x8b\xcd\x65\x84\x8d\x80\xb7\x5d\x97\x6c\x06\x53\x9c\x4b\x7c\x45\x68\x52\xac\xc4\x6f\x6e\xfc\x0a\x6b\x02\xe7\x58\x1a\x43\xc7\x55\x71\x29\x0f\xf1\x60\x4b\x02\x9f\xa0\x24\x4d\xfc\x8d\x87\xc9\x0d\xe9\x7b\xfa\xec\x6d\x82\x73\x18\xec\x5a\xcc\x0d\x4c\x61\x84\xfa\x51\x49\xd3\xd6\x64\xc0\xf3\x00\x91\xf7\x7c\x2a\xaa\x49\x5a\xb4\x42\x49\x9e\xf7\x29\x1f\x2d\x68\x8c\xf5\xab\xf0\xf7\x7f\x03\xa3\x78\x40\x58\x19\x3a\x2e\xcb\xb8\x03\xa6\xa2\xf4\x17\x46\x15\x79\x5e\x91\x06\xa1\x92\xef\x84\x19\xe9\x15\x58\xd4\x05\x59\x60\xc7\x48\xe7\x98\x52\xe7\xe2\xa1\xcd\x9e\x0e\x80\x26\xdb\x6a\x39\x75\x7e\xa5\xec\x43\x65\x94\x45\x21\x83\xf6\x2b\xb3\xef\xe9\xb4\x72\x89\xa6\xb7\x6a\x4f\xde\x2e\x92\x20\xe6\x80\xd0\x37\xe1\xe2\xe5\xc6\x9a\x47\x13\xc5\x8d\x56\x59\x9b\xbe\x8e\xe2\x18\x7b\x22\xc5\x45\x96\x89\xe2\x34\x35\x53\xdc\x79\x8a\x3f\x79\x23\x7a\x8a\x19\x5a\x3c\x9d\x61\x33\xad\xfb\x6a\x86\x23\xc2\x1b\x4a\x5b\xae\x6c\xcf\xa7\x5c\x48\xe1\x7b\x37\xa3\xa0\xc7\x69\x3e\xa0\x11\xe9\x45\x6b\xcb\x7e\xf6\x49\x0e\x5e\xc1\x0c\xfa\x76\x5b\xc3\x75\x19\xcb\x47\xbb\x58\x79\xa9\x19\x5f\x62\x88\xfa\xac\xbe\xdc\x08\xe8\xce\xfb\x27\x64\x2a\x1a\xac\x20\x5c\x10\x09\x21\x76\x8e\x0f\x26\x70\xb1\xbd\xb3\xb3\xce\xb9\xd5\xc0\x26\x3e\xe4\x25\x45\xb5\x7a\x0a\xda\xad\xef\x00\xd0\x17\xf8\x3c\xac\x19\xd2\x04\x80\x8f\xff\x37\xda\xbf\x8c\x80\x55\x5b\x4e\xfe\x5f\xbb\xf6\x77\x13\x5f\xb3\x43\xdf\xf3\xbe\xc9\xb5\xaa\xfd\xeb\x8d\x6a\x75\xea\x27\x5e\x82\xe4\xf1\x1d\x74\xdd\x90\xc6\x71\xe3\x3c\x49\xe7\x2b\x4a\xfe\xb9\x0c\x87\xed\xb9\x0b\x77\xd4\xce\xe7\x67\xb0\x62\x83\x1a\x6b\x5e\xa3\xe9\x9f\x47\xe4\x19\x02\x96\x76\x72\x62\x48\xbc\x51\x4a\xb3\x30\x9b\x73\xae\x0e\x5d\x9f\x25\xbc\xdc\x83\x5b\xa7\xdb\x38\x2e\x12\xc3\xfc\xaf\xe5\xdb\xd5\x34\x4a\xf2\x05\x7b\xe8\xed\x42\xf1\xb7\xb5\x6a\x02\xbe\xf0\xf5\x88\x6b\x60\xe1\x9e\x0b\xfe\x04\x00\x00\xff\xff\x5a\x98\xb0\xcd\x89\x08\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2185, mode: os.FileMode(420), modTime: time.Unix(1446954874, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerDocGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xcb\x6e\xea\x30\x10\xdd\xfb\x2b\x66\x8d\x74\xcd\x3e\xba\xea\xa2\x0f\xa9\x95\x68\x41\x85\x76\x6f\x25\x13\xb0\x4a\x1c\x64\x87\xa2\x16\xe5\xdf\xeb\x77\x1c\x43\x2a\x95\x0d\x9e\x33\xe7\x61\x8f\x0d\xf3\xd9\x8a\x95\x1f\x6c\x8b\xd0\x30\x2e\xe0\x7c\x06\x5e\x03\x7d\x12\x75\x4b\x37\xbc\xdb\x23\xf4\xbd\xc6\x2e\x00\xdc\x2b\xbf\xda\x1d\x1b\x26\xf8\x37\x02\x7d\x61\x8d\xc3\x50\x54\xb6\x15\x9d\xee\x51\x95\x92\x1f\x3a\xde\x0a\x4d\x20\x24\x3a\x66\x0d\x63\x2c\x2a\x18\x8b\x37\x28\x1b\xb5\xac\xd7\x28\x3f\x79\x69\x02\x88\x45\x60\x59\x83\xc7\x8a\xc4\xf1\x92\x9d\x99\xb6\x12\xe8\xba\xdc\x61\x83\x0a\xe8\x63\xab\x3a\xa0\xb7\x4c\xe1\x8a\x75\x3b\x67\xe1\x35\x26\x3f\xf0\x34\x02\xfa\xe3\xcb\xc2\x4c\x49\x32\xa1\x67\x96\x33\x40\xb7\xa8\x1b\x50\x88\x1c\x1d\xc8\xe6\x79\xae\x59\x5b\xab\x80\xe6\xe4\xb8\x2d\x2f\x08\xb5\x13\x25\x5d\x27\xb4\xdf\x27\x9e\x1c\xc3\xfb\xbc\xa3\x54\x7e\xc0\xc6\xc6\x97\xce\x65\xe8\xe5\xe9\x0b\x3d\x3e\x61\x2f\xd9\xaa\x7c\x59\xc0\xb8\x3d\x5c\xfa\x18\xea\x7b\x98\x30\xa4\x6f\xaf\x8b\x4c\x10\x91\xeb\x43\xbb\x6b\x45\xc7\xca\x38\x37\x5f\xc6\x9d\xf8\x3a\xdd\xc9\x25\x74\xcd\x90\x3e\xe8\x27\xbf\xd7\xf0\xff\x54\x13\xc0\x9b\x29\x95\xdb\x2d\xa4\x9a\x5f\x0e\x90\x5b\xa8\xa3\x7f\x2e\xe1\x2c\x16\x28\x86\x17\x95\x72\x0c\xe5\x9f\x4d\x7a\xc6\x8a\xb3\xcd\xd7\x21\xde\xc7\x64\xc6\x4a\xb6\xd5\xb1\x4c\x32\x02\x90\x64\xa4\x9c\x3f\x65\x0c\x3f\x26\xa2\x4e\x6c\xbb\x45\x59\x34\xd8\x31\x32\x9b\x93\x43\xf2\x37\x42\x08\xf9\x09\x00\x00\xff\xff\x19\xe0\xb9\xc4\x58\x04\x00\x00")

func templatesServerDocGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerDocGotmpl,
		"templates/server/doc.gotmpl",
	)
}

func templatesServerDocGotmpl() (*asset, error) {
	bytes, err := templatesServerDocGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/doc.gotmpl", size: 1112, mode: os.FileMode(420), modTime: time.Unix(1448299118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5f\x6f\xdb\xc8\x11\x7f\x16\x3f\xc5\x1c\x7b\xb9\x92\x07\x6b\x75\x46\xd1\x87\xaa\xf0\x83\xe1\x4b\x10\x35\xbe\x44\x88\x8c\x43\x8b\x34\x50\xd6\xe4\x88\xda\x86\xda\x65\x76\x97\x56\x54\x41\xdf\xbd\x33\x4b\x4a\xa2\x6c\xea\x9c\x5e\x51\x02\xb6\xa4\xd9\xd9\xf9\xf3\x9b\xbf\xac\x64\xf6\x59\x16\x08\x2b\xa9\x74\x14\xa9\x55\x65\xac\x87\x24\x02\x88\x4b\x53\xc4\xfc\x69\x5c\xf8\xd0\xe8\x47\x4b\xef\xab\x38\xe2\x5f\x85\xf2\xcb\xfa\x5e\x64\x66\x35\x2a\xcc\xd0\xad\x65\x51\xa0\xed\x7e\x75\x15\x66\x71\x34\xe8\x32\xfe\x0b\x9d\xc3\x87\xfc\x33\xb3\x2d\x4a\x59\xb8\x47\xe7\x7e\x53\xa2\xbd\x1f\x15\x56\x66\xb8\xa8\xcb\xa0\x68\xbb\xb5\x52\x93\x79\xe2\x67\x5c\xc8\xba\xf4\x93\x60\xa0\xdb\xed\xb6\xdb\xca\x2a\xed\x17\x10\xbf\xf8\x12\x83\xd8\xed\x02\x33\xea\xbc\xfd\xd6\x5c\xfb\xfe\x33\x6e\x2e\xe0\xfb\x07\x59\xd6\x08\xe3\x2b\x10\x9d\xfb\x7c\xb6\xdb\x11\x2b\x74\x25\x35\xbc\x27\xe2\xd2\x28\x1a\x8d\xe0\x6e\xa9\x1c\x2c\x54\x89\xb0\x96\x0e\x0a\xd4\x68\xa5\xc7\x1c\xee\x37\xe0\x97\x08\xad\xdf\xe0\x8d\x29\x05\xf3\xff\x22\x3f\x13\xb5\xb6\x08\xda\x78\x22\x83\x79\x40\xbb\xb6\xca\x23\xf1\xef\x45\xc9\x85\xa7\x3b\x1b\x53\x77\x04\x2a\x0f\xf7\x98\xc9\xda\xd1\x71\x59\xf2\xa1\x05\xcc\x95\x77\xb0\x36\x75\x49\x0a\x11\x4a\xe3\xfc\x77\xac\x64\xe2\x5b\xa2\xd1\xe5\x86\x4f\xf6\x4a\x3c\x6a\x50\x8b\x20\x19\xbf\x56\xa5\xca\x94\x27\x06\x0e\x8a\x5a\x6c\x60\x38\x54\x3a\x2b\xeb\x1c\x87\x1c\x76\x58\x18\x1b\x7c\xd8\xdb\x10\xf4\x12\xcd\xd5\x55\x48\x07\x0a\xce\x4a\xea\xdc\x91\xc6\xc2\x8c\x0f\x5c\x7b\x97\x8f\x04\xb4\xa4\x1e\x86\x1e\x84\x18\x09\x01\xc3\xeb\x80\xae\x74\x99\x2c\xd5\xbf\x29\x88\x6f\xe5\x0a\x81\xb1\x67\xdb\xc4\x94\x60\xcf\x54\x25\xcb\x40\x22\x0a\x03\x95\x00\x7e\xe9\x1e\xc5\x14\x1a\xb4\x0b\x4a\x89\xed\x2e\x86\x94\x02\x36\x1c\x56\x87\xd3\xed\xf6\xc8\xca\x42\x42\xc0\xf6\x71\x8b\x1e\xa4\x05\x53\x11\x70\xce\xdb\x3a\xf3\xb0\x85\x46\x73\xb2\x94\x6e\xa2\x1d\x66\x1c\x1d\x31\xcb\x96\xb8\x42\x97\x92\x15\xd1\xe0\x35\x21\xcb\xec\x4a\x17\xf0\xa9\x34\xba\x18\xc7\x4b\x22\xc5\x90\xa3\xcb\xac\xaa\xbc\x32\x7a\x1c\x33\x58\x93\x29\x07\xb5\x54\x8e\xa1\x36\x9a\x39\x42\x86\x8e\xa9\x70\xc8\xdf\xe6\x16\xea\x87\x71\xfc\xfa\xdd\xec\x2e\xfe\x14\x0d\xa6\x8c\x25\xb9\x03\xf4\xb4\xb2\x19\xde\x1e\xd9\x01\xf5\xae\xf4\x10\x22\xb5\x37\x39\x33\x5a\x63\xc6\xec\xee\x62\xaf\xd6\x31\xbf\x04\x4a\xfb\xdc\xac\x20\x24\x71\xab\x7e\xfa\xee\x3d\xa9\x27\xcf\x09\x95\x03\xf8\x0c\xc1\xac\x07\x80\x68\x70\x77\x3b\x0b\x20\x1c\x9f\x16\x8e\xfd\xd3\x9a\xee\x4b\x37\xfc\x36\x68\x9a\xfc\x2a\xc9\xd6\xf5\x92\x08\x1c\xe5\x26\x11\x55\xc8\xf6\x3f\xba\xa6\x80\x38\x37\xa8\xb2\x86\xc3\x0e\x74\x64\xcc\x7c\x0f\x1f\x7d\x0f\x08\x1e\x9f\x16\xcb\x1e\xc3\xfe\x2b\x5c\x7f\x17\xaa\x6c\x59\x83\x6c\xb0\xec\x06\xad\x27\x87\x32\x2e\x03\x7a\x42\x7b\x13\xaf\xa8\xc4\x35\xbb\xd5\xb1\x2c\x3b\x32\xf6\x18\xd8\x39\x65\xcd\xdc\x03\xfa\x2d\x8c\xc1\xe2\x97\x5a\x59\xcc\xe9\xa2\x3d\xb1\xea\xe6\xe5\xfb\xbb\xc9\xab\xc9\xcd\xf5\xdd\xcb\xa7\xc6\xbd\xc1\xcd\x6f\x18\x47\x1d\xb1\x0f\x35\xab\x1e\xd8\x20\x3a\xed\x37\xea\x79\x9b\xa6\xef\x27\xbf\x92\x3d\xf3\x37\x2f\xff\x11\x7f\x82\x43\x2e\x46\x94\x70\x8b\x5a\x67\x61\xfa\x24\x29\x6c\xa9\xeb\xb6\x5d\x65\x46\x19\x72\x01\x68\x2d\xb7\x6d\x4e\x17\xf1\x16\xd7\xc9\xac\x39\xfc\xdb\xec\xdd\xdb\x0b\x88\xe3\x94\xf8\x29\x99\x99\xeb\xbb\x2b\xd0\xaa\x0c\x12\x80\xfa\x63\x21\x5e\x49\x4f\x6d\x4c\x27\x74\xc8\x6c\x9c\xda\x95\xb4\xd4\xa2\x58\x60\x03\x01\x49\x9c\x06\x52\xf2\x03\xb7\x89\x8b\x96\xdc\x8e\x9a\x74\x7f\x41\xcc\x96\x94\x37\x3f\x1f\x61\x81\xab\xae\x95\x82\xff\x25\xa9\x98\xe8\x85\x11\x77\xd4\x67\xf1\x70\xf1\x96\x90\xfd\xb6\x7b\x1d\x2e\x32\x94\x7c\x9a\x1f\x9c\x6f\x65\x05\x4b\x93\xf4\xaf\xa7\xde\x0e\x06\xc6\x89\x97\x5f\x95\x4f\x2e\xc9\xde\x1d\x8f\x4c\x59\x29\xbe\xc6\xad\xb1\x99\xed\xbb\x1d\x7b\xda\xdb\x89\xaf\xa7\x93\xa4\x63\x12\x03\x45\xf1\x5c\xa8\x82\x22\xcb\x67\x24\x8b\xa6\xdf\x60\x49\xf9\x5f\x36\xc8\x11\x45\xcc\xb8\xcf\x27\x69\xf4\x6c\x37\xe5\x7d\x61\xd6\x0c\x05\xba\xfa\xc3\x7e\xb2\x37\x02\xec\xb6\xf9\x18\x83\xa6\xc8\x32\x6b\x4b\x4f\x4f\x6e\x8a\xd7\xad\xf2\x2b\x68\xcd\x20\x83\x9a\x02\x46\x7b\x00\x89\xb6\x13\x71\x1b\x88\x49\xec\xb3\x2a\xa6\x58\xae\x3c\x21\x1c\x26\x7b\x12\xbf\x70\xe3\x17\x39\x11\x39\xcc\x82\xdb\x5b\xfb\x95\x1b\x4a\x9a\x06\xc0\x1f\xc1\xfa\x24\x85\x18\xdc\x01\x0b\x9d\xb6\x32\x79\xda\x71\x5f\x24\x14\x96\x35\xcd\xc7\x2e\xae\x20\x3d\xb0\x0b\xe3\xd1\xe8\x85\xfb\xa7\x26\xcd\x7b\x8b\xc5\x75\x9e\xdb\x24\x4d\xc3\x7e\xf1\x1b\x9d\xb8\x30\xc0\x95\x11\x8a\x62\x30\x38\x54\x4c\x6b\x28\x79\xdc\x41\xa8\x89\x07\xb9\xfd\x06\xb1\xba\x2e\xd5\x03\xde\xb6\xda\xb6\x07\xb5\xc9\x8f\x0c\xd1\xdd\xcd\x74\x7f\x94\xee\x9e\xe6\x52\x8f\xd7\x83\x67\x06\x06\x55\x56\x92\x1e\x0b\xfa\x1b\xc7\x4c\x88\xaf\xfb\xfd\xa9\xe1\xce\xe6\xc6\xc9\x31\xf7\xbe\x90\xce\x70\x15\x24\x51\x8f\x13\x0d\x21\x3d\xc3\x48\x95\xf2\xd5\x4f\xad\xf1\xc6\xd1\x9d\x0f\x1f\x9b\xd9\xb7\x8d\x99\x79\x74\x29\x2e\x63\x32\x80\xf6\xae\x70\x97\x82\xbb\x5e\xaf\x85\xa1\x7d\xb0\x12\xc6\x16\x23\xa5\x73\xfc\x2a\xaa\x65\x35\xba\xa3\x89\xe1\x78\xda\xcc\x6f\xe5\x06\xed\x9c\x25\x36\x5d\x72\x7e\xb3\x44\xe9\xe7\xb3\x25\xa2\xff\xc3\xfb\xba\xc4\xf9\x70\xfe\x8e\x96\xb7\xf9\xac\x59\xb6\xe6\x33\x6f\xa9\x6b\x84\x1b\x26\x33\xa5\x3b\x67\xe8\x2f\x4a\xff\x8a\xd6\x35\x6d\x85\x1d\x6b\x7f\x11\xc7\xe5\xe5\xb9\x4b\x9d\x49\xc0\xfe\xad\x68\x47\x4d\x3e\x7c\x0c\xb0\x1c\x4f\x2e\xe0\xf2\x2c\x3c\x5d\x01\x1f\x7e\xfa\xd8\xd4\x5f\xa3\xff\xd6\xc8\xfc\xef\x7f\xfe\xe9\x2f\x34\x62\xa6\x52\xd9\xa4\x81\x2e\x09\x75\x76\x3a\x84\xd2\x0b\x38\x7f\x48\xd7\x9f\xa9\xc8\x43\x3d\x3e\xdb\x7f\xe8\x74\xaf\x21\xec\x34\x57\x57\x34\x34\x9a\xae\x79\x42\x3e\xf6\x85\x28\xe4\x7b\x9b\xcc\x03\x72\xeb\xf6\x7f\xe9\x34\xad\x82\xe3\xaf\xff\x77\xbf\x71\xc7\x86\xd3\xb1\xfd\xd0\x73\xa2\xc1\xda\xca\xaa\xa2\xb5\x6b\xdc\xc4\x8c\xe6\xc2\x9e\xa9\xbf\x7f\x74\xa5\xf4\xb4\x90\x0b\xe8\x4d\x93\xa3\x87\x6d\xa3\x72\x27\x9d\xaa\x35\xe2\x69\xff\xe9\x01\xe1\x64\x57\xa0\xca\xeb\xb3\x12\xe8\x75\x2a\x33\x15\xaf\x93\x0b\x4b\x7b\x5a\x58\x27\x7d\x5e\xaa\x7b\xd8\xbf\xb5\x42\xfb\x9e\x7b\x5e\x86\x43\xda\xf6\xc8\x39\x5a\x73\xb0\x1a\x4a\x3e\x03\xaf\x56\x68\x6a\xa2\x53\x91\xc9\x2c\xc3\x8a\xde\xcf\x58\x40\x67\x11\x13\xf4\x0e\x46\x1b\x2c\x2d\x45\xe1\x55\xb0\x11\x77\xad\xf3\xe0\x29\x50\x53\x7a\x44\x22\x8c\xc0\x19\x16\x92\xa3\xcc\x83\xc2\x8e\x34\x48\x50\x14\x02\x32\x7a\xc1\xe3\x50\x97\xb2\xf2\xa6\x82\x95\xca\x87\xb9\x59\xeb\x92\x2a\x2c\x05\x7c\x40\xed\x6b\xc2\x68\xc3\x52\x68\x4e\xc8\xb5\xdc\x88\xc8\x6f\x2a\x3c\xe3\x59\xfb\xf6\x13\x0d\x1e\x07\xf0\xb0\x7f\x25\xa5\xee\xbd\x9b\xc2\x75\x70\x9b\xc6\x50\x92\x85\xd4\xa7\x00\xeb\xa6\x16\xe8\xcf\xd8\x30\x9e\xfc\x71\x53\x2b\xb5\x68\x6e\x90\x96\xa4\x37\xd1\x2d\xfa\xda\x6a\x4e\x6f\xba\x47\x09\xe1\x0f\x4a\x13\x5e\x1a\xd3\x27\xe4\x29\x5a\x65\xf2\xe4\x4f\xf0\x63\x88\x07\x37\xbe\xda\x33\x5f\x23\x09\x58\x3b\x09\x27\x5f\xfe\x13\x00\x00\xff\xff\x7b\xb1\xb6\x44\xcc\x10\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 4300, mode: os.FileMode(420), modTime: time.Unix(1448312884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x57\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\xa6\xc6\x76\x61\x19\x5a\xf9\x9e\x22\x87\x6d\xb7\x45\x72\xe8\x22\xc8\x06\xed\xb1\x60\xa4\x91\x44\x44\x26\x15\x8a\xb4\xe3\x1a\x7e\xf7\x0e\x7f\x64\x49\x8e\x6c\x2f\x50\x24\x87\x05\x72\xa0\xc5\x99\x6f\x66\xbe\xf9\x63\x1a\x96\x3d\xb1\x12\x61\xb7\x83\xf4\x2e\x9c\xf7\xfb\x28\x5a\x2e\xe1\xa1\xe2\x2d\x14\xbc\x46\xd8\xb0\x16\x4a\x14\xa8\x98\xc6\x1c\x1e\xb7\xa0\x2b\x84\x76\xc3\xca\x12\x15\x68\x29\xeb\xd4\xca\xff\x9e\x73\xcd\x45\x49\x97\x9d\xde\x8a\x97\x95\x86\x46\xc9\x35\x42\x61\xb4\x83\xaa\x50\xc0\x56\x1a\x50\xf8\x49\x19\xe1\x90\x3a\x68\xc8\xe4\x6a\xc5\x44\x1e\x45\x7c\xd5\x48\xa5\x61\x1e\x01\xcc\x04\xea\x65\xa5\x75\x33\x8b\xec\xaf\x92\xeb\xca\x3c\xa6\x24\xb9\x2c\xe5\xa7\xe0\xc3\xf0\x68\x45\x9f\xb8\x5e\xae\x78\x9e\xd7\xb8\x61\x0a\x67\xa4\x47\xe1\x29\x26\x28\xb6\xf4\x0b\x16\xcc\xd4\xfa\xd6\x59\x68\x29\x56\xba\x6a\x14\x17\xba\x80\xd9\xcf\xcf\x33\x48\x6d\xf8\x4e\x01\x45\x7e\x38\x7b\xe5\x0f\x4f\xb8\x4d\xe0\xc3\x9a\xd5\x06\xe1\xea\x1a\xd2\x11\x8a\xbd\xa5\x13\x1c\x01\x06\xf1\x23\xd4\xd8\x51\x6c\x45\x59\x9b\xb1\x9a\xff\x4b\xae\x7d\x65\x2b\x2b\x77\x43\x14\xd4\xa8\xfe\x30\x22\x03\x6d\x94\x68\x81\x11\x7b\x22\xd3\x5c\x0a\xd8\x50\xfc\x8e\x34\xe5\xb8\x6d\x79\x29\x18\x09\x21\x90\x41\x49\x82\x84\x58\x19\x22\x71\x08\x08\x95\x47\x8c\xf4\xb6\xc1\xcb\x36\xad\xad\x39\x49\xf1\xc2\x96\x84\x62\xab\x8e\xa5\x57\x5a\xfe\xf6\x10\x94\xd7\x21\x24\x48\x3f\x1b\x5d\x49\x45\xb2\xf9\x00\x23\x81\x23\xd1\xa1\x58\xf7\x4d\x48\xca\x3b\xe0\x33\xe9\x11\x89\x19\x6f\x58\x0d\x33\x0a\x0e\x55\xc1\x32\xdc\xed\x67\x10\x93\xec\x62\x88\x34\x90\x74\xbf\xfd\x45\x0c\x7d\x09\xa4\xf7\xd8\x36\x52\xe4\xc4\x81\xa5\xdd\x47\x0b\xf8\x82\x99\x09\x25\x4b\x84\xe2\xb3\xc1\x56\x3b\xff\x15\x5a\xe2\xed\x0d\xa3\xb3\x55\x6d\x31\xb2\xbc\xc0\xbc\x10\x17\x19\x8c\x83\x01\x22\xb1\xe7\x70\xbf\x6f\x3c\x0f\xef\xc0\x64\x73\xe0\xe3\x5d\x38\x85\x1d\x95\xb6\xa7\x0c\x0a\xf1\xaa\x74\x9a\xb7\x89\xad\x77\x2a\xda\x5f\x6c\x26\x38\x44\x0b\x85\xa4\x99\x55\x31\x0d\x19\x13\xa1\x33\x80\x5a\x94\xe7\xd3\xbd\xe3\xbd\xbf\xdc\x3a\x03\x0b\x96\x8e\x43\x05\xfc\xa0\x6d\xe4\x29\xff\x8a\x9b\xc9\x88\x20\x53\x48\x03\xdd\x4e\x2e\x81\x1b\xb0\x33\x39\xed\x78\xf2\xfc\xe3\x34\xdb\xb2\xb1\x9b\x80\x06\x9d\xef\xb6\x53\xf8\xf3\x4c\xbf\xc0\x62\xe0\xd8\x6f\x92\x42\x7b\xd1\x49\x37\xea\xce\xa6\x2a\x86\xc5\xb4\xd7\x83\x3a\xfe\x38\x29\xb1\x0b\x76\xae\x80\x1c\x48\x42\x92\xd5\x55\x67\x75\xef\x68\x39\x01\x1e\x16\xd4\x95\x92\x46\xfb\x7d\xfb\x27\x52\xda\xf2\xb0\x32\x28\xbf\x34\xd9\x1d\xf1\x61\x53\x3d\xb0\xb2\xed\x2e\x87\x19\xb1\x1f\x32\x02\x1d\xc1\x47\x51\xa8\x85\x6f\x86\x76\xa8\xda\x86\x94\x8e\x7e\xd9\xeb\x2f\xd8\x66\x8a\x37\x6e\x97\x04\xad\xa3\x6f\xc3\x92\xc0\xba\xc5\x63\x35\x0f\xfc\x5a\xc7\x8a\x9e\x28\xf0\xe9\x5c\x7f\xbe\xbb\xed\xf7\x61\xb4\x58\x9e\xe9\x31\x68\xb5\x32\x99\x76\x09\x0a\x29\x98\x4a\xbf\xdf\xb0\xa3\x86\x0b\x87\x73\x53\x77\xb8\x97\x6f\xbe\xa3\x7c\x6c\x92\xfd\x2e\xb0\x44\xdc\x63\x86\x7c\x8d\xaa\xf3\x74\x3a\xfb\x31\x7c\x43\xb5\xc6\x9b\x87\x87\xbb\xb9\x0a\x0d\x71\x1f\x16\xcb\xdf\x8a\x53\x5b\x26\xa0\x60\x11\xbe\xbb\x45\x14\xfb\x72\xb4\xd5\x92\xc0\x3f\xf6\xb9\x31\x61\xae\x8b\x3c\xbd\xb7\x72\xb7\xa2\x90\x73\x15\x47\x3d\x0f\xa3\xc9\x60\xdc\xec\x4c\x00\x95\xba\x04\x77\xd0\x9b\x5b\xc7\x2c\x76\x4c\xa0\x84\x68\x75\x7f\xba\x06\xc1\x6b\xe7\x1e\x9c\x77\xca\x8f\x0b\x8a\x98\x40\x02\x0e\x4d\x19\x99\x9b\x0c\xdb\xa4\x8b\x8d\x20\x63\x07\xe5\x5b\x8f\x8e\xf6\xa9\xb4\x66\x0a\x26\xf7\xd8\x99\x99\x76\x7e\xa4\xf9\x00\x3c\x09\xe3\x18\x7a\x3b\xd7\xc1\xd2\xb9\xc1\xd9\x11\xd9\x17\xbd\xff\x9d\xce\x17\xc7\x26\x63\xa0\x21\xe9\xde\xc3\xf4\x47\x23\xb1\xae\xb7\xfe\x8d\x36\x92\x4a\xe0\xd6\x3e\x92\x57\xbc\xc5\xe1\xb3\x73\x1f\x1d\xbd\x43\x03\xfd\x17\x52\xf7\x2b\x17\xf9\x5f\x76\x9f\x85\x3a\x3a\x64\x30\x79\xd5\x1c\x1f\xa7\x70\xfa\x6d\xe4\x83\x23\x9a\xfa\x65\xf0\xcb\xa8\x00\x6c\x74\x8f\x64\xae\x5b\x92\x6f\x57\x0f\x27\x2a\xda\xcd\xeb\xf6\x14\x23\xa1\x5f\xd3\xd3\xbb\xf8\x44\xf0\x83\x0d\x7b\x28\x0d\x97\x4a\x96\x69\xe3\x92\x18\xde\x0d\x83\x77\xa3\xf3\xd0\x52\xf6\x66\x5e\x0d\x56\xf2\x77\xb8\x32\xfa\xf7\xe5\x7f\x66\x84\xa2\xa1\xa1\xb2\x8f\xfe\x0b\x00\x00\xff\xff\xf7\x6f\xd8\xe2\x2d\x0e\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3629, mode: os.FileMode(420), modTime: time.Unix(1447802315, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x3a\x5b\x6f\x1b\x37\xd6\xef\xfa\x15\xfc\x84\x34\xd0\xa8\xea\x38\x0f\xc5\xf7\xe0\xd6\x05\xd6\x8e\xb7\x35\x90\xa6\xde\xb8\xcd\x4b\x1a\x2c\xe8\x11\x25\x11\x99\x8b\x42\x72\x7c\x89\xe1\xff\xbe\xe7\x90\x1c\x0e\xc9\xa1\x6e\x71\x8c\xdd\x3e\x34\x1a\xf2\xdc\x79\x6e\x3c\xf4\xc3\x03\x99\xb3\x05\xaf\x19\x19\xcb\x92\x17\x6c\x4d\x05\xad\x6e\x68\xc9\xe7\x54\x35\x62\xfc\xf8\x38\x02\x08\xbe\x20\xf9\x5b\xc6\xe6\xf2\x8a\x7f\x61\xc4\xac\x15\xb4\x62\x25\x7e\xe6\x6f\xe1\x17\x2c\xea\xbd\xe3\x13\xc2\x6b\xf5\xff\x3f\x4e\x4a\x56\x4f\x00\x2a\x7f\x4f\xcb\x96\x9d\xdf\xad\x05\x93\x92\x37\x35\xc0\x65\x19\xa2\xb3\x7a\x4e\x7a\xe2\xbf\xf3\xfa\x42\xb1\x4a\xe2\x12\x7c\x33\x21\x90\x92\x15\x83\xb9\x6d\x4d\xf1\x92\xaa\x15\xc0\xcd\xc8\x18\xbf\xde\x34\x05\x55\x86\xf0\x78\x46\x36\xc9\xa5\x77\x7c\x2e\xd9\x4f\x9a\xc9\xff\x9d\x90\x9a\x97\xe4\x61\x44\x88\x60\xaa\x15\x35\xae\x8e\x1e\x13\x02\xd2\xbb\xad\x02\xda\xed\x27\x09\xe8\xa8\x1c\x2e\xde\x5f\x35\xff\xdc\xb2\x6d\x12\x7a\x10\xfb\x08\x99\x3a\xb7\x03\x65\x3a\xaf\xdb\x6a\x83\x30\xb8\xf5\x95\x52\x98\x75\x4b\xfb\x10\x91\xcc\x2f\xcf\xdd\xd7\xa2\x59\x33\xa1\xee\x23\x8f\xf7\x34\xb8\x90\x97\x82\x57\x5c\xf1\x1b\x66\x50\xc1\x7a\xeb\x12\x14\x40\x64\xbb\xe1\x21\xe6\x06\x28\xb4\xc2\x85\x3c\x6b\xa5\x6a\xaa\x7f\x36\xa2\xa2\x4a\x31\x11\x53\x2a\xf4\xf6\x42\x6f\xc7\xa2\x6c\xa0\xf8\x0f\x21\xe8\x7d\x4c\x27\x15\xbd\x43\x02\x9d\x15\x3a\x23\x5c\xf3\x7a\xee\x74\xd1\xd8\xe3\x0d\x90\x3d\x7d\xc4\x61\x81\xa1\x2e\xa9\x60\xb5\x32\xbc\xf2\x0b\xd8\xbd\x7b\x4f\x51\xd1\x02\x4f\x5d\xde\xd2\x65\x7e\xb5\x2e\xb9\x3a\xbd\x37\x56\xb0\x47\x8f\x38\x01\xf4\x87\xf4\xfa\x47\xeb\x1e\x67\x4d\x59\xb2\x02\x1d\xc4\x90\x41\x37\x31\xb9\xa4\x94\x6c\x03\x73\x41\x6f\x03\xfd\x7d\x00\xf9\x45\x8b\x07\xd1\x37\xba\x81\x85\x68\xd7\x2c\xfc\xda\xfc\x79\xbf\x66\x09\xe4\xf7\xd6\x97\xcf\x4b\x56\xa1\xee\x40\x69\xd1\xd6\xc5\x24\x02\xc3\x6c\x18\x45\xfd\xd9\x8a\x97\xf3\x2e\xf6\x35\x13\xb3\xe2\x58\x65\x64\x0a\xfe\xdb\x08\x99\x5b\x26\xe8\xf9\xe8\xdc\x91\x07\xa6\xdd\xd7\x50\x43\x89\x5d\x34\x40\x70\x40\x34\x8c\xc0\xc7\x62\x25\x51\xec\x57\x3f\x0d\x56\x7f\x8e\x57\xe4\x97\x01\xd0\xf7\xdf\x77\x32\x81\x07\x00\x65\xab\xc5\xd0\xdf\xdd\x46\x14\x4c\xe8\x38\x66\xeb\xac\xa9\x6f\x40\x15\x1d\x1b\x37\x18\xf1\xb3\x2e\x63\xf4\xd6\xf1\x61\x62\x23\x1b\xc7\xf1\x3d\x26\x03\xc9\x6c\xde\xf1\x92\x83\x9f\x1e\xd0\xbc\x17\xb5\xb6\x1b\x9a\x7d\xd2\x73\xda\x96\x93\xc6\x89\xe3\xb2\xa9\x6a\xa7\x3c\x70\x02\x4e\x28\xab\xda\x66\x7f\x8a\x55\x9c\x79\xa6\xd8\x27\x35\x07\x99\x10\x79\x93\xa1\x7f\x9f\x10\xba\x5e\x43\x68\xc4\xbc\xc4\x8c\xe8\x53\xc8\x34\x12\x06\x97\x76\xa6\xa7\x0a\xbf\xdd\x40\x09\x0d\x22\x1d\x0e\xd7\x62\x37\x57\xbf\x2e\xe8\x2c\xd2\x3b\x65\x9f\x66\xe3\xc8\x1b\x66\x42\x3f\xe6\xbe\xcd\x19\xfb\x8a\x3c\x9b\x6d\x12\xac\xfa\x64\xe9\x15\x81\x35\x2d\x3e\xd1\x25\x23\x26\x3d\x9b\xdf\x00\x31\x3a\x3a\x22\x7f\xae\xb8\x24\x0b\x5e\x32\x72\x4b\x25\x59\xb2\x9a\x09\x50\x70\x4e\xae\xef\x89\x5a\x31\x9d\xfb\x97\x10\xb3\xaa\x69\xca\x1c\xe1\xcf\xe7\x90\x01\xea\x25\x6c\x76\x78\x15\x5f\xae\x14\x81\x6c\x06\x79\x61\xd1\x2a\x4d\x6a\xc5\x6a\x72\xdf\xb4\xa0\xe3\x0f\xa2\xad\x03\x4a\x1d\x0b\x52\x34\x55\x45\xeb\xf9\x68\xc4\xab\x75\x23\x14\x99\x80\x01\xc6\x35\x53\x47\x2b\xa5\xd6\x63\xfc\x58\x72\xb5\x6a\xaf\x73\x00\x3c\x5a\x36\x3f\x58\x02\xfe\x4f\x93\x06\xf6\x83\x45\xaa\x9f\xb8\x3a\xea\x7a\x98\x83\xb0\xf6\x03\xc6\x7f\xc7\x23\x73\x8e\x82\xd6\x60\xe4\xfc\x35\x5b\xd0\xb6\x54\x17\x5a\x45\x69\xfc\x14\xca\x75\xad\x16\x64\xfc\xdd\x67\x70\xbc\xce\x3b\xed\xa1\x79\xb8\x2f\x3e\xb1\xfb\x19\x79\xa1\x23\x19\x7d\x31\x0f\x88\xe0\xae\x2d\x3f\x3e\x3d\x0b\x1e\x51\xcd\xf4\x51\x23\x28\x95\x05\x0d\x7a\xd7\x4b\x0c\x03\x09\x87\x51\x2b\xca\x6b\x49\x68\x59\xea\xe3\xba\x6e\x5a\xc0\x5d\x9b\x5d\x2c\x3c\xb8\x08\x14\x56\x2d\x1c\x9a\x4f\x80\x60\x15\xd3\x19\x16\x79\x40\x39\xe3\xc0\xa1\xd4\xde\x03\xe1\x08\xbd\x00\x69\xae\x91\x34\xf8\xd4\x42\x34\x15\xa1\x04\x6d\x9a\xbf\x63\xd0\xcd\x4a\x05\x38\x88\x66\x2d\x78\xac\xf9\x31\x28\x12\x32\xd9\x68\x8f\x14\x66\xec\x6d\x7a\x48\x25\xda\x42\x75\x85\xcd\x1e\x82\xdd\x73\x45\xeb\x35\x93\x85\xe0\x6b\x5b\x15\x8e\xa6\x3a\x2e\xc2\x45\x3f\xaf\x20\x0a\x8a\xcb\x05\xb3\x67\xd4\x7d\x1d\x13\x60\xc7\x62\x58\xb8\x05\xf0\xca\xb4\xce\x84\xd8\x8f\x63\xd2\x35\xd5\x77\x45\xd9\x4a\xa8\xa1\x3d\xd4\xcf\xc4\xa7\xe0\xa1\x0f\x08\xf3\xda\x23\x6c\x3e\x12\x84\x1d\xd4\x2f\x11\x61\xb7\x31\x20\x0c\x2e\xca\xd7\x25\xfb\x63\x61\x69\xdb\x6f\xf2\xc7\xe2\xd8\x5c\xbc\x7c\x80\x84\xbe\x6f\x58\xbd\xd4\x45\xd7\x68\x4c\xcc\xb7\xc5\xf5\xb6\x13\x1a\x05\xa8\xbc\x0e\x51\xbd\xed\x18\xf5\x52\x37\x27\xb5\x41\xb4\x1f\xc7\x36\xc3\x75\x3b\x09\x49\xdd\x15\xcb\x08\xaa\x3f\x9d\x9c\xdd\x66\x42\x4c\x1f\x0f\xa4\xf4\xf1\xfa\xcd\x18\x2f\xba\xd5\x11\x62\x16\xd2\x6e\xe3\x35\x2a\x00\x79\x61\x95\xf1\x56\x63\x84\x44\x3b\x0d\x88\xfd\x2a\x31\xcb\x86\x4e\x02\xd8\xcf\x3a\xd3\x23\xd7\x0a\xd6\x8d\x22\xf9\x55\xb1\x62\x15\xb5\xf9\x6a\x10\x6c\xc4\xdd\x64\xde\xb6\x65\x49\xaf\x4b\x5c\x9c\x7a\xf2\xd9\xe6\xaa\x2f\xcb\xdb\x09\x41\x19\x20\x13\x8f\x2f\x10\x3e\xa5\x92\x21\x89\x6c\x5f\x2e\x5e\xfe\x84\xdf\xba\xfe\x61\x66\x39\x85\x0a\x6f\x73\x0d\xe4\x34\xf0\x24\x2c\xf9\x52\x73\xec\x2a\x01\x7c\x41\xa1\xd2\x20\x33\xc2\x15\xa1\x52\xb6\x15\xac\xaa\x15\x98\x09\xb2\x3d\xf8\xfd\x1d\xd6\xbb\x7a\x29\x09\xc7\x2f\x7d\x5f\xa0\xc4\x76\x03\x28\xd8\x04\xf2\xce\xa2\x52\x90\x26\x96\x1c\x7e\xde\x67\xa6\x43\xc5\xcb\x03\x13\x0b\x5a\x30\x14\x05\xb3\xa8\xd4\x04\x4c\x7b\x26\x91\xd9\x2d\x87\x84\xdb\x82\x85\x00\x8d\xea\x4a\x0a\xf9\x6f\xd5\xcc\x09\x66\x51\x39\xc2\x2b\x09\xd1\xd5\xff\x1d\x2b\x18\x44\xb7\xe8\x2c\x37\xdd\x92\x06\x33\x5f\xed\x89\x20\x53\x3f\xe5\xce\x88\x68\x5a\xa8\xbf\xd3\x8a\xcf\xe7\x25\xbb\x85\x14\x0d\xbe\xaf\xc0\xf0\xf3\x77\xb8\xd1\xc9\x8e\x39\x14\xaf\x55\xd0\xa5\x92\x0f\x1f\xf5\x9a\xf3\x91\xfc\x37\x2a\xff\xd5\x32\x71\xef\x52\xeb\x67\xa9\x6f\x6b\xf9\x5f\xef\xde\xe4\x7a\x67\x92\xd9\xc3\xe8\xba\x32\x40\x41\xd7\x73\x18\x41\x85\x4a\xe7\xeb\xd0\x27\x83\x7b\xb3\x71\xbf\x5e\x06\x58\x0d\xdb\xb6\xc8\x5e\x39\x9e\x7b\xd2\x64\x93\xcf\x32\xff\x95\x29\x7f\x9c\x91\x59\x1b\xe5\x26\x56\x64\xba\x3d\x97\x7d\x7b\x06\x1f\xfa\xca\x93\xf5\xad\xba\xd3\x1b\xee\x4d\x40\xf5\xa9\x42\x1a\x79\x8c\x65\x9e\x59\xdc\xdf\x18\x85\xa6\xf8\xc9\x02\xe7\x86\xce\x33\x0b\xeb\x5c\x4a\xbb\x85\x5d\x83\x1e\xb4\x5f\x1b\xb6\x11\xe9\x29\x9e\x11\xd7\xdd\x5c\x85\x16\x10\x49\x05\xd2\x6f\xbc\x97\x26\x24\xc6\x2b\xea\x5b\x76\x3b\xf9\xf1\xd5\x2b\xb8\x79\x0a\xa0\x8f\x9d\xb3\x6e\x9a\xff\x1e\xa7\x44\xf8\x7b\x4c\x16\x14\xb6\xa1\xb1\xf8\xee\x66\x6c\xb4\xd6\x6a\x1b\x8d\x0d\xab\xd4\x31\xa4\x93\xeb\x09\xb1\xed\x6b\x8e\x6a\x3c\xbc\x86\x5c\x75\x9c\x54\x7d\x46\x8c\xf2\xe9\x5d\xb3\xf7\x18\x99\xff\x29\x9e\x81\x96\xd5\x97\xe0\x6f\xee\x18\xee\x2e\xe8\x97\x83\xde\x5b\x9e\x27\x81\x24\x06\x64\xc9\x9c\xb2\x79\x08\xf6\x0d\x63\x02\x2b\x5b\x14\x17\xdf\x50\xaf\xcd\x67\xf7\xbc\xca\x45\xe7\xea\x0a\x83\xd5\xf6\xb4\x99\xdb\x53\xec\x3b\x97\x10\x66\xd0\x58\x78\x4b\xe7\x77\x78\xb1\xd2\xcd\xfd\x35\x10\x0a\x86\x57\xbf\x37\x73\xb0\x6c\x7f\x69\x86\x9e\xae\xa2\x42\xae\x68\x09\xbb\x50\xb3\xf9\xba\xdb\xeb\x06\x4a\x03\x14\x30\xda\xa9\x26\x6b\xcc\x70\xd6\xd4\xd8\x5f\x88\x83\x52\x49\x16\x44\x1e\x96\x65\x94\x34\x9a\x70\xfa\x93\x8b\x90\x57\xf7\xc3\x89\xf2\x12\xd1\xf7\x3e\x09\x9b\xc8\xc0\xc2\x92\x9d\xe3\xe7\x24\x99\xbe\xc6\xe9\x91\x9b\x97\xc8\xdc\x09\xc6\x19\x2d\x0c\x4f\xec\x94\xfe\x3d\x18\xff\xa4\xba\x20\x3d\x21\xae\xed\x68\x63\xbf\xac\xd8\xcd\x5f\x36\x4e\x79\x52\xa4\xba\xc9\xcf\x64\xa7\x2b\x6f\x3d\x42\xf3\xdf\x35\x94\x82\x4f\xf6\xeb\x71\xd4\xff\x3f\x95\x5a\xf1\x9c\x0e\xe2\xbe\x85\x77\xcf\xa5\xf6\x67\x5d\xf8\xd2\x07\x80\x19\x39\x39\x21\xaf\x1c\x9d\x43\xca\xcc\xc1\x5d\xfc\x4b\x27\x04\xea\xe7\x84\xeb\x02\x3b\x6a\xe6\x9d\x6f\x3b\x49\x7f\x71\x82\x86\x03\xe1\x33\xe8\xd6\x1b\xc9\x15\xeb\x07\xef\xc6\x5f\x01\x2b\xcf\xf3\x2e\xa3\x84\x63\x75\x60\xf2\xa2\x28\xa1\xeb\xd7\x0a\x81\xcd\x27\x91\x92\x19\x31\xcf\x07\x83\xf6\x34\x68\x4e\xfb\x1c\xe4\x76\x70\xaa\xee\x8f\xcd\x93\x8f\x49\x3b\x7a\x7c\x4f\xb4\xbe\xbd\xdf\x52\x5c\xe9\xad\x4e\x4b\xf5\x72\x46\xcc\x9b\x94\x1e\x8a\xa4\x2e\x27\x0f\x41\x86\x9c\x58\x35\x5c\xb3\x9a\x05\x53\x8f\xc4\x23\x60\xb7\x7b\xa5\xd9\xed\x7c\x0e\x04\xc9\xf6\x1d\x73\xfb\xe7\x6f\x6e\xba\x5b\xde\x17\x62\x00\x53\x87\xc2\xc7\x06\x43\x10\x25\xf8\xaa\x77\x85\x9d\x2f\x0a\xfe\x5b\x82\xe5\xd2\xcd\x73\x87\xc3\x7e\x72\x62\xee\x7f\x83\xee\x64\xe8\x1b\xa1\xb2\xf6\x3c\x73\x9d\x87\x51\xb0\x60\x92\x78\x65\x66\x68\xae\xf0\x3a\x49\xfe\x07\xf4\x9d\x4e\xb4\x26\xf9\x64\x1a\x60\x67\xfe\x0b\xc5\x46\x64\x60\x30\x70\x0b\x7b\xa1\xec\xc3\x5c\xee\xec\x73\x3a\xbf\x4d\xc7\xcd\x62\x5b\x73\xb2\xc5\x43\x83\x54\x62\x54\xf1\x8b\xd9\x73\x84\xf7\x87\x8f\x07\x04\xb8\xb4\x7f\xd4\xa1\x53\x27\x9e\x94\x33\x5f\x18\xdc\x1a\xce\x2b\x00\xa1\x83\x74\xb0\x3b\xbc\x63\xd0\xb1\xf5\x8d\x5a\x37\x09\x87\xc5\x39\x5b\xbc\xef\x86\xda\x1b\xde\x96\x7b\xe0\xad\x4f\xc7\xda\xb7\x7b\xc9\x5f\xbe\xd4\x6a\x76\xf4\xfd\x32\xb1\xd1\xb9\x3a\xe0\xf8\x66\xb3\xc1\x1e\x70\xce\xfe\xe9\xef\xf3\xb4\xe4\x32\x59\x5a\x80\xa8\xf9\x08\x67\x2c\x57\x48\xee\xbf\xed\xe4\x43\x2f\x0f\xff\xa0\x01\xab\x5c\x14\x8b\x1b\x64\xff\x9a\x58\xd8\x4b\xa3\x1d\x25\x6e\x8f\x47\xf7\x64\x34\x0f\xfe\xee\xc2\xfb\xe5\x35\x04\xe7\x77\x4a\x50\xd3\xf3\x68\x2d\x8f\xa6\xa3\x80\xe9\xbc\x29\x4c\xc4\x5a\x3e\xdd\x6b\x47\x85\x17\x05\x7d\x8c\xdd\xfb\xc6\xf4\x28\xc4\x94\x9a\xa8\x45\xeb\x79\xff\x27\x00\x00\xff\xff\xb0\x26\x2d\xbe\xf4\x25\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 9716, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerResponsesGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\x5f\x8f\xa3\x36\x10\x7f\xe7\x53\x4c\xd1\x9d\x94\x44\x59\x72\x7d\xe8\x4b\xda\xab\x54\xdd\x9d\xda\x95\xda\xee\x6a\xef\xaa\xbe\x9e\x17\x06\xf0\x2d\xd8\xc4\x98\x64\xd3\x88\xef\xde\xb1\x31\x04\x13\xd2\xdd\x3e\x25\xcc\xfc\xe6\x37\x7f\x3c\x33\xf6\xe9\x04\x09\xa6\x5c\x20\x84\x35\xaa\x3d\x2a\x85\x75\x25\x45\x8d\x21\xb4\xed\x66\x45\x6a\x9e\x42\xf4\x11\xeb\x58\xf1\x4a\x73\x29\x48\x4c\xc2\x8a\xd5\x31\x2b\xf8\x3f\x08\xd1\x9f\xac\x44\x12\x02\x49\x2f\x70\x58\xd4\xf8\x1f\xf8\xbc\x29\x99\x18\x0b\xc9\x42\x24\x6d\x1b\x04\xf5\x81\x65\x19\xaa\x6d\x1f\x8d\x41\xc7\x84\xf1\x28\x82\xd5\x26\xd0\xc7\xca\x2a\x67\x1c\xd4\x5a\x35\xb1\x86\x53\x00\x06\xa0\x98\xc8\x48\xf9\x1b\xb2\x04\x55\x6d\x7d\x5d\x66\xb6\xd9\xcc\xa6\x01\x14\x55\xf7\xc7\x98\x3c\xe0\xae\xe1\x0a\x8d\x84\xa8\xc9\xa4\x17\x6c\x81\x3c\xe2\x14\xfe\x07\x7b\xe6\x65\x53\x0e\x68\xf7\xbd\x05\xa7\xff\xf4\x1c\x17\x4d\xcd\xf7\x78\x06\xfe\x04\x63\x92\x11\xc3\x05\x37\x17\x3e\x77\xf7\x3d\xc3\x3d\x00\x7f\x9e\x70\x0f\x8a\x0b\xee\xa6\xd0\xbc\x2a\xf0\x2e\x3d\xd3\x3b\x11\xdc\xa5\xd6\x85\x8f\x99\x49\xfc\x77\x14\x99\xce\xc7\xa9\x43\x27\x72\xe6\x23\xc4\x4c\x6a\x53\x6b\x2e\x7c\xeb\x11\x62\x6a\x7d\xcf\xb4\x46\x25\x06\x5b\xf7\xdd\x19\x9e\x95\x33\x21\xdf\x6a\x2c\x6b\x2f\x62\x2b\x19\x02\xee\xf5\x33\xf1\x4e\x4c\x29\xdc\xb1\xe9\x59\x3f\x35\xfd\x4b\xf0\x5d\x83\xbe\x75\x27\x9b\x74\x54\xd7\xc9\x57\x66\xef\x57\xf9\xc5\xcc\x02\x7d\x7d\xfd\x56\x4b\xb1\x0d\x4f\x27\x7f\x62\xda\x76\x2d\x4b\x4e\x5e\x2a\x7d\x0c\xbf\x76\x5c\x63\x5e\x13\xca\xe7\x38\xc7\x92\x0d\x51\xdc\x52\xc5\x1e\x65\x72\xa4\xaf\x7b\x76\x2c\x24\x4b\x7c\x60\x74\x5b\x7f\x90\x25\x35\xc0\xf3\xdd\xe3\x37\xa4\x61\x6b\xdb\x95\xd7\x5e\x0e\x76\x11\x9b\x21\xbd\x1a\x0d\xcd\x3f\xf9\xfe\x5b\x91\xf6\xa1\x9f\x7f\x2d\x41\xe7\x08\x71\xc1\x51\xe8\x20\x6d\x44\x0c\x0b\xe3\xe0\x01\x63\xa4\xfe\x56\x7d\x25\x56\xb3\x05\x5a\xfa\x6c\x0b\x75\x80\x5c\xeb\x2a\xea\x05\x56\xab\xd6\x50\x29\x99\x34\x31\x2a\xab\x7d\xe2\x3a\xba\x77\x82\xe5\xd5\x35\xd2\x15\x6a\xd8\x53\xb9\x55\x10\xd2\x95\x9c\xd4\xea\xe0\xe0\x8b\x65\xf4\x4b\x92\x98\xb0\x2b\xc5\x85\x4e\x21\x7c\xbb\x0b\x87\x18\xd7\x90\x96\x3a\xfa\xdc\xa9\x16\xe1\xdb\x7d\xb8\x86\x99\x0c\xa3\xf9\x04\x97\x93\xf3\x24\xa7\x36\x29\xe7\xb9\x3b\x35\xdc\x41\xf4\x41\x26\x08\x37\xdf\x13\xea\x87\x77\xef\x8c\x05\xad\x68\x77\x58\x56\x35\x6a\xcf\xe5\xb4\x29\x5e\x3a\x7b\xf2\x4b\xfa\xb9\xa0\xfb\xee\xf9\xee\x3d\x08\x5e\xc0\xc9\x8b\xd5\x5a\xd1\xcd\x03\xdb\xf7\xc3\x09\xf4\x95\xa7\xa3\x9a\x2f\x83\x63\x5c\xfe\x68\x2d\x7b\x5e\xcb\x06\x54\x20\xc1\xe3\x05\x29\x96\xe6\x70\x0a\xd4\xb6\x79\x14\xc6\x92\x18\x8e\x50\xf2\x24\x29\xf0\xc0\x14\xd2\xe5\xc7\x0a\x38\x70\x5a\x22\x3a\xe7\xb5\x35\xbf\x18\x87\x99\x4c\xa1\xf5\xd6\xe8\xd0\xb8\xc3\xff\x8a\xc5\x4f\x2c\x43\xb7\x6f\xba\xff\x6d\xd7\xd8\x5f\xc8\x11\xa4\x9c\xd6\xe8\x81\xd5\x90\xa1\x40\xc5\x34\x5d\x27\x8f\x47\x1b\xa5\xbb\xfa\xa8\xe3\x65\x11\x19\xfc\xa7\x84\x6b\x2e\x32\x1b\x60\x67\x57\xf2\x2c\xd7\xa6\x54\x7b\x84\xb4\xd1\x96\x2a\x47\x01\x47\xd9\x50\x92\x37\xaa\x11\x1e\x53\xef\x02\x62\x59\xd2\x85\x9b\x04\x41\xc0\xcb\x4a\x2a\x0d\x0b\x4a\x35\x14\xa8\x37\xa6\xdf\x43\xf3\x91\x51\x29\x9a\xc7\x88\x90\x9b\x4c\xde\x38\x86\xf1\x5f\x37\x19\xaf\x03\x9b\xdf\xd7\x21\xe9\xac\xa4\xaa\xff\x57\x08\x9b\x3d\xcd\x40\x42\x79\xbd\xce\xaa\x5b\x1d\x61\xe0\xcd\xf1\x47\x4c\x19\xdd\x61\xb7\xb6\x1c\x6e\x37\x7b\xc3\xd9\x2f\xc7\xf1\xa2\xec\x6c\xdf\x3c\xe1\x71\x0d\x6f\x28\x88\x06\x4d\xe7\x46\x1e\x89\xd1\xba\xcd\x3c\xe6\x73\xf0\x09\xeb\x32\x08\xae\xd3\xf6\x3b\xca\x2e\x1b\x82\x99\x95\x59\x98\xd3\xbc\x78\xb0\x9d\xc9\xcf\xd4\xc3\x03\xce\xe6\x39\xac\xd3\x97\xa8\xae\x18\x38\xd2\x73\xb4\xf4\xc2\xd0\x8a\x75\x63\x62\x03\xdc\xac\x7c\xe2\x44\xc6\xf4\x0e\xa3\xf6\x25\x4e\xa3\xef\x1f\x76\x25\xed\x9a\xc2\x4e\xc7\xe8\x31\xe7\x87\x64\x49\x9d\xd9\xd9\xf7\xbf\x01\x00\x00\xff\xff\xf5\x95\x05\xb0\xb1\x0a\x00\x00")

func templatesServerResponsesGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerResponsesGotmpl,
		"templates/server/responses.gotmpl",
	)
}

func templatesServerResponsesGotmpl() (*asset, error) {
	bytes, err := templatesServerResponsesGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/responses.gotmpl", size: 2737, mode: os.FileMode(420), modTime: time.Unix(1447860243, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x93\x4f\x4b\xc3\x40\x10\xc5\xef\xf9\x14\xc3\xd2\x83\x16\x9b\xdc\x3d\x8a\x88\x05\xf5\xa2\x88\xc7\x2c\x9b\x89\xae\xec\x3f\x76\x37\x62\x2c\xfb\xdd\x9d\x24\x35\x4d\x51\x5a\xa8\x50\xe8\x6d\xd9\x37\xf3\xdb\xf7\x26\x93\xd5\x0a\x2a\xac\xa5\x41\x60\x21\xfa\x46\xc4\x5a\xa2\xaa\x18\xa4\x44\x8a\xac\xc1\xd8\x08\xb3\x7c\x19\xae\x78\xc0\xa7\xd6\x21\x09\xc5\x1c\x48\x8b\xa8\x9d\xe2\x91\xfa\x2a\x2b\xa8\x55\x9a\x57\x06\xf9\xd0\xb7\xd1\x9c\xb7\x0e\x7d\x6c\x9f\xb9\x92\x15\x8f\xd2\x9a\x6b\x2b\x1e\x7f\xaa\x53\x82\x79\x41\xf5\x68\xaa\x94\x32\x3a\x38\x1e\x04\x55\x7e\x21\xe4\x0f\x5c\x23\xe9\x5b\xb4\x20\xde\x50\xf3\xce\xc6\xf0\x14\x94\xef\xc1\x9a\x4b\x36\x58\x9d\xe5\xb7\x7c\xea\x73\xd1\x91\x55\xc0\xc1\x53\x0f\xa4\xe3\x85\xd5\xb2\x23\xc6\x76\x78\x98\xae\xd6\xfd\xf9\xcb\xfd\xdd\xba\x08\x3e\xb5\xea\xb1\x93\x3b\x36\xd6\x97\xd9\x78\xcc\x26\xf3\x8b\x8d\x53\x38\x8e\x2f\x3b\xd6\xfc\x36\x66\x0e\x1f\xe0\x82\x95\x50\x14\x20\x9a\x10\xad\x86\x80\x5e\xf6\x10\xff\x77\xd0\xc9\xa2\x2c\x6b\x2e\xf0\x98\xdb\xb2\x3b\xed\xd9\xf9\xee\xbc\xfb\x3e\xdc\xfe\x38\xd9\x09\xe4\x71\x5e\x7e\xfc\xfe\x99\x05\x11\xa7\xec\x9b\x4e\x3b\x14\xbf\xbd\xeb\xff\xa6\x7f\x07\x00\x00\xff\xff\xc4\x80\x23\xbf\x86\x04\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 1158, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSwagger_json_embedGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xcb\x6e\x83\x30\x10\x45\xf7\xfe\x8a\x2b\x94\x4a\x89\xd4\x92\x7d\xa5\xec\xda\x45\x2b\xf5\xa1\xa6\x3f\xe0\xe0\x01\xdc\x60\x9b\xfa\x41\x84\x22\xfe\xbd\x03\x09\x52\xc9\x6e\xc4\x1c\x1f\xe6\xce\xb4\xb2\x38\xca\x8a\x70\x3e\x23\xff\xbc\xd6\xc3\x20\xc4\x76\x8b\xef\x5a\x07\x94\xba\x21\x9c\x64\x40\x45\x96\xbc\x8c\xa4\x70\xe8\x11\x6b\x42\x38\xc9\xaa\x22\x8f\xe8\x5c\x93\x8f\xfc\xb3\xd2\x51\xdb\x8a\x9b\xf3\x3b\xa3\xab\x3a\xa2\xf5\xae\x23\x94\x29\x4e\xaa\x9a\x2c\x7a\x97\xe0\xe9\xc1\x27\xbb\x30\xcd\xbf\x40\xe1\x8c\x91\x56\x09\xa1\x4d\xeb\x7c\xc4\x5a\x00\x19\xd9\xc2\x29\xf6\x6f\x7f\x82\xb3\x99\xe0\x4f\x3c\xb3\x97\x96\x07\xce\x9f\xa8\x94\xa9\x89\x2f\x13\x1e\x38\x00\xb7\x5a\xaf\x6d\x2c\x91\xdd\xfd\x66\xc8\x39\xd2\xc4\x93\x55\x98\xeb\xcb\xdb\xd5\x91\xfa\x7b\xac\x3a\xd9\x24\xc2\xe3\x0e\xf9\x42\x32\x76\xb9\xc2\x8d\xef\x8a\xdf\x58\x37\xd3\xda\xf6\x97\x34\xaf\xfb\x8f\x77\x90\x39\x90\x52\xbc\xb3\x8e\x7c\xd0\xce\xc2\x95\x8b\xc4\xca\x15\xc9\x90\x8d\x48\x81\x21\x19\xe7\x15\x8c\x68\xd4\x86\x44\x27\xfd\x42\xb8\xc3\x98\x3e\xff\x92\xa7\x37\x0a\x81\x8f\xb5\x1e\x0f\xf7\x9f\x18\x86\x8d\xf8\x0b\x00\x00\xff\xff\x3a\xba\xd6\x9f\xd5\x01\x00\x00")

func templatesSwagger_json_embedGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSwagger_json_embedGotmpl,
		"templates/swagger_json_embed.gotmpl",
	)
}

func templatesSwagger_json_embedGotmpl() (*asset, error) {
	bytes, err := templatesSwagger_json_embedGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/swagger_json_embed.gotmpl", size: 469, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x51\x6f\xdb\x36\x10\x7e\xb6\x7e\xc5\xcd\xc8\x0a\xab\x13\x54\x24\x8f\x19\x3c\x20\x59\xb7\x21\x03\x92\x0e\xed\xb6\x97\x20\x58\x69\x89\x8e\x99\xc9\x92\x46\x52\x49\x3c\xc1\xff\x7d\x77\xa4\x6c\x49\x16\x65\x27\xae\x9b\x15\xcd\x43\x60\x93\x14\xef\xbb\xef\xbe\xfb\x48\xb9\x2c\x21\xe6\x53\x91\x72\x18\xea\x22\x4f\xf8\x07\x2e\x05\x4b\xc4\xbf\x5c\x0e\x61\xb9\xf4\xde\xbc\x81\x3f\xd2\x39\x93\x6a\xc6\x92\x5f\x3f\xbc\xbb\x82\x62\xf5\x4d\x81\x9e\x09\xfc\x47\x0f\x81\x5e\xe4\x1c\xa6\x32\x9b\x03\x03\xb3\x8c\x49\xc9\x16\xde\xb4\x48\x23\x18\x95\x65\xf8\x9e\x47\x5c\xdc\x73\x79\xc5\xe6\x7c\xb9\x84\xd7\x18\x35\x67\x2a\x32\x81\x20\xa4\x51\x0c\xe6\xb7\x43\x8d\x62\xa6\x19\x5c\xdf\x4c\x16\x9a\xfb\xc0\xa5\xcc\x24\x94\x1e\x00\x42\x52\x9a\xdd\x72\x38\x0e\xe0\x96\x6b\x84\xc1\x6d\x38\x98\x14\x1a\xee\x0a\xd5\x18\xc2\xe5\xf7\x4c\xda\xf5\xc7\xb8\xd7\x9d\xca\xd2\xf0\x3d\x7b\xb8\xe4\x4a\xe1\x10\x4e\x8b\x29\x6d\x0d\xa7\x63\x30\x73\x6b\x04\x26\x7a\x00\xaf\xec\xa3\xfe\xf7\x66\xd5\x37\x63\x48\x45\x62\x50\x00\x48\xae\x0b\x99\xd2\x38\x7e\x5d\x36\x81\x9d\x60\x7a\xb8\x6f\x78\x16\xc7\x42\x8b\x2c\x65\xc9\x85\xe6\x73\x45\x7c\x5a\x3c\x09\x53\xfa\x22\x8d\xf9\x23\x88\x54\xe3\x18\xae\xe7\x69\x6c\xe7\xf1\xb3\x64\x29\xee\x72\x24\xe2\xc7\x00\x8e\xee\x59\x42\xe8\xc2\xdf\x64\x96\x73\xa9\x05\xa7\x7d\x70\xf7\x84\xa7\xa3\x0a\x1c\xfc\x40\x4f\xd1\x7a\x9c\xaa\xd0\xf5\xe6\x65\x9f\xb9\xae\x1f\xb8\x09\xc0\xe2\x4d\x33\x6d\xc2\x85\x17\xea\xaa\x48\x12\x36\x49\xa8\x2a\xaf\xd6\xe0\xe8\x11\x9a\x6e\x16\x13\x87\xc3\x56\x31\xcd\x8a\x55\x41\x1d\xac\x6d\xf0\x86\xcc\xd9\xe0\x47\x6e\xb6\xa0\xc1\xd5\xb8\x91\x65\x59\x22\x26\xb3\x62\xd9\xe5\xaf\x97\xfb\x0e\x6d\xeb\xcd\xbf\x3b\xae\xf0\x4d\x51\x65\x7f\x05\x50\xb1\x6e\x2b\x51\x51\xd6\x58\x7c\x7a\xb3\x4e\x87\xea\xa9\x33\x16\xc7\x14\x19\x43\xe5\x09\xd3\xd8\x4c\x2a\x9a\xf1\x39\xfb\x1d\xfb\x62\xd8\x03\x66\x6b\x95\x30\x3e\x8a\xcf\xec\xeb\x66\xb1\xc3\xa3\x65\x82\xfe\x10\x47\xf8\x27\x4b\x0a\xfe\xd3\x63\x2e\x51\xe8\x18\x98\x74\x31\x06\x96\xe7\x48\xd3\xc8\x3d\x1f\xd8\x2c\x7c\x6f\xb5\x55\x8b\xd8\x2a\x18\x22\xf0\x96\x1e\xb9\xc2\x65\xc3\x13\x7a\x1d\x01\xd5\x9d\x3d\xcd\x11\x7a\x0c\xa1\x11\x65\xe4\xc3\xc8\x9a\x41\x60\xcd\xc0\x37\x5c\x18\x93\x40\xfe\xae\x6f\x30\x18\x97\x53\x16\xf1\x72\x59\x36\xfb\xa8\xdd\x39\xce\x40\x41\x33\x55\xd8\xa5\xa2\x95\x44\x6a\x81\x10\xa3\x1b\x4b\x5d\x15\xb0\xb5\x33\x88\xd7\xc5\xb0\x36\x73\xef\x3b\x94\x5c\x71\x6e\x94\x71\xd9\x70\x25\x1f\x4b\x50\xaf\x6b\x18\x78\x2c\x54\x24\xc5\x5c\xa4\xa8\xc0\xf8\xb9\x46\x9e\x67\xc9\x62\x9e\xc9\x7c\x26\xa2\xae\x9d\x2b\x2d\x8b\x08\xd1\xf0\x4f\xb4\x74\xc9\x1e\x1c\x8e\x4e\x2d\x64\x58\x69\x77\x50\x31\xa1\xf6\x39\xcf\xe2\x05\xb6\x10\xe5\xb0\xcd\xae\x71\x67\x6c\x18\x43\xcf\x6e\xaf\x6e\xc9\xe3\x2c\x49\xde\x4d\xad\x32\x7a\x04\x43\xde\x88\xce\x16\xbe\xad\xf9\xcd\xe4\xcf\x82\x27\xf1\x3a\xd1\x0e\x21\x61\xa5\xa0\x0b\x75\xce\x14\xa7\x44\xcc\x56\x11\x4e\xb6\x18\x32\xdb\x50\x35\x13\xc5\xfb\xe4\x59\x4b\x73\x6c\x78\x0a\x9d\xab\x9a\xea\x71\x7e\xd8\x3f\xbb\xfe\xa0\xd6\x94\x5d\x47\xc2\xc1\x93\x77\xe6\x57\xb7\xc9\x53\xac\xa9\xa3\xf1\xda\x9e\x76\x2b\x7c\x6f\x8b\x7a\x86\xbc\x0f\xac\xca\x2f\xb7\x6e\x5f\xbb\x2e\x1d\xc8\x1c\x79\xac\x70\xe6\x12\x0f\xaf\x29\x0c\xbf\xfd\x67\xb8\xb1\xce\x9c\x22\x7b\x1e\x07\x33\xa6\xde\x7e\xca\x89\x90\x4d\xee\x78\xa4\xe1\x41\xe8\x19\x76\xc9\x17\x77\x3e\x10\xae\xac\xd0\xab\x4a\x9a\x46\x3a\xec\x31\xd1\xd3\x8f\x56\x41\x67\x69\x96\x22\x21\x85\x6a\x8a\x78\xdb\x9d\xbd\xa3\x3d\x1c\x63\xb4\x6b\xf3\x56\xdb\x73\x93\x0e\x56\xe9\xac\x33\x59\x5d\xc6\x7f\xc9\xaa\xad\x46\xc4\x9a\x0a\xaf\xf8\xc3\x79\x31\x9d\x72\x49\xa9\xfa\x01\xcc\xb4\xce\xff\x16\x3a\x24\x7a\x7f\xcc\x52\x55\xcc\xb9\xf4\x77\xb6\xa4\xb9\x5c\x6f\x6d\xcd\x76\x1e\xae\x26\x72\x62\xde\x1b\x6f\x55\xd1\x2d\xe5\x72\x36\xa4\xe7\x55\xfa\xc1\x6b\x58\x91\x68\xb7\x89\x1f\xb8\xd0\x36\x54\xff\x6b\x91\xed\x79\x7a\xe7\xb1\x2f\x5b\x3d\x7a\xd8\x22\x87\xda\x9a\xba\x3e\xb3\x5e\xf7\x34\x0b\xee\x2d\xb3\x2b\x8b\x4e\x06\xbb\x55\xb0\x0d\xea\x36\x98\xaf\x1d\xf6\x8d\x61\x2d\xaa\xe7\x9d\xfa\x3b\x7c\xec\xf3\xdf\x01\xcc\x7b\xab\x6c\xe6\x42\x9a\xd9\x48\xce\x1b\x90\x4c\x27\xc7\x01\x4c\x4e\x2a\x0f\xb4\x43\x24\x7b\xb3\x93\x37\xa0\x59\xfa\x3a\x6e\x9f\x02\x3b\x6d\xd1\xdc\x2f\xca\x3d\x64\xee\x3c\x94\x33\xdd\xad\x7b\x97\x95\xd3\x6e\xd6\x9b\xbf\x15\x38\x5f\xbf\xf6\xbe\x2b\xbc\x10\x2c\xb2\x1a\xdf\x1b\x6c\xfa\xd1\x60\x50\x2b\xd2\x14\xc9\x1b\x60\x49\x27\x27\xce\x82\x59\xa1\x95\x07\x29\x47\x3b\x67\xaf\xfa\x01\xc0\xd1\xb3\x65\xef\xcf\x13\x34\xfb\x91\x00\x9e\x0e\xa9\xeb\x56\xe9\x67\x73\x41\x0f\xe8\xc5\xf0\xe3\x21\x0a\xf4\x3f\x00\x35\xfe\xb6\x7c\x59\x9e\x5f\x5a\xf7\x9f\x0d\xd7\xea\x70\xb0\x18\x9e\xae\xf9\x6a\x4c\x3d\xb0\xdb\x10\x4f\xf0\x88\x69\xe3\x8b\xd6\xd9\xf0\x84\xb7\x96\x5d\xf7\xd3\x7f\x01\x00\x00\xff\xff\xd7\x7c\xd2\xc6\x82\x16\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 5762, mode: os.FileMode(420), modTime: time.Unix(1448757005, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/doc.gotmpl": templatesServerDocGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/server/responses.gotmpl": templatesServerResponsesGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/swagger_json_embed.gotmpl": templatesSwagger_json_embedGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{}},
			"doc.gotmpl": &bintree{templatesServerDocGotmpl, map[string]*bintree{}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{}},
			"responses.gotmpl": &bintree{templatesServerResponsesGotmpl, map[string]*bintree{}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{}},
		"swagger_json_embed.gotmpl": &bintree{templatesSwagger_json_embedGotmpl, map[string]*bintree{}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

