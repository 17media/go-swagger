// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/server/responses.gotmpl
// templates/structfield.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x4d\x6f\xdb\x38\x10\x3d\x57\xbf\x62\xd6\x68\x02\xc9\xab\xca\x77\x01\x3d\x04\x4d\x0f\xb9\x34\x45\x5a\xec\x9e\x19\x69\x24\x13\xb1\x28\x2d\x49\xc5\xf0\x0a\xfa\xef\x3b\xfc\xb4\xe5\xda\x58\xef\x6d\x7b\xa8\x45\xce\xf0\xf1\xcd\x9b\xe1\x43\x06\x56\xbd\xb1\x16\x61\x9a\xa0\xf8\xc6\x3a\x84\x79\x4e\x92\xcd\x06\x7e\x6e\xb9\x82\x86\xef\x10\xf6\x4c\x41\x8b\x02\x25\xd3\x58\xc3\xeb\x01\xf4\x16\x41\xed\x59\xdb\xa2\x04\xdd\xf7\xbb\xc2\xe4\x7f\xad\xb9\xe6\xa2\xa5\x60\x38\xd7\xf1\x76\xab\x61\x90\xfd\x3b\x42\x33\x6a\x0b\xb5\x45\x01\x87\x7e\x04\x89\x9f\xe4\x28\x16\x48\xe1\x0a\xa8\xfa\xae\x63\xa2\x4e\x12\xde\x0d\xbd\xd4\x90\x26\x00\x2b\x81\x7a\xb3\xd5\x7a\x58\x99\x45\xcb\xf5\x76\x7c\x2d\x28\x71\xd3\xf6\x9f\x3c\xc0\xe9\x27\x4a\xd9\x4b\x75\x5b\xae\xf9\xbd\x2d\xb3\xda\x71\x14\xfa\xb6\x5c\xc3\xf5\x8d\xff\xb7\xe4\xcd\x3b\xdb\xf1\x9a\x24\x58\x25\x74\x8c\x1a\x22\x99\xa0\xce\x14\x8f\xd8\xb0\x71\xa7\x9f\xac\x1c\x8a\x1a\x44\xa1\x41\x72\xa1\x1b\x58\xdd\xfd\xb5\x82\x82\x5a\x66\xf3\x51\xd4\x10\xbe\xdd\xd9\x8f\x6f\x78\xc8\xe1\x23\x01\x8f\x08\xe5\x67\x28\x16\x20\x26\x4a\x5f\x70\x86\xe7\xd3\xcf\x50\x33\x3b\x16\xdf\x70\x0f\x95\x44\x22\xa9\x80\x81\xa0\x15\x65\x6c\x47\x6a\x18\xff\x1b\xe3\x04\xc1\xc3\xf7\x27\x70\x72\x15\x49\x33\x8a\xca\x9c\x4b\x35\x71\x52\xb6\xa5\x3e\xf4\x33\x6c\xe4\xd0\xf4\xb2\x63\xc4\x4b\x69\xd9\x74\xba\x78\xc1\x96\xd3\xe7\x21\x83\xf5\x17\x9b\x0b\x13\x91\x91\xa8\x47\x29\xe0\xde\x6d\x4d\x11\xaf\x04\xfd\x0b\x52\x19\x3e\xe6\xc4\x0c\xf4\x3a\x09\x38\x13\xf0\x06\x8a\x1f\x23\x0d\x99\x3c\x38\x1d\x96\x2b\x13\x7e\x44\x55\x49\x3e\x68\xde\x0b\xfb\x20\x4c\xd2\x72\x2f\x0a\x63\x3e\x76\x0a\xcf\x8f\x39\xe0\x5f\xcf\x98\xd4\x79\x26\x6e\x57\x85\x3b\x4a\xbe\xde\x24\xfa\x30\x20\x78\xea\x24\xc8\x58\x39\x25\xae\x4b\x49\xc1\x2b\x5a\x26\xae\x0e\x3f\x54\xcf\x83\x79\x6d\xc4\xcb\xcc\xc2\x66\xfd\xff\x90\xc5\x0c\x22\x53\x15\x3d\x83\x53\x4d\x6e\x12\xca\x4e\x59\xca\xc2\xbc\x64\x70\x11\x2b\x1d\x98\x64\x9d\xba\x1c\xfc\x6e\x63\xbe\xd4\x87\x51\x6f\x7b\x49\x61\x73\x41\x0e\x8c\x96\x4f\xa2\xe9\x83\xde\x0f\x7e\xfd\xa7\xe4\x1a\xe5\x34\x11\x91\x79\xce\x8e\xd3\x55\x55\xa8\xd4\x0b\x52\x4b\x84\xad\x2c\x5d\x2f\xaf\x3c\xcb\x08\x14\xf2\xe3\x83\xb3\x1e\x76\x15\x2f\x8b\x79\x76\x1e\x8c\x61\x3f\x3f\x3e\x97\xf0\x87\xb7\x10\x6b\xad\xbe\xd8\x57\xa4\x89\x20\xa3\xa5\x7c\x72\x68\xef\x2d\x97\x61\x25\x2a\x72\x9a\x88\x9d\x03\xb1\x30\xbe\xc1\x8a\x38\x71\x74\xea\xb5\xe3\x3a\xbd\xf7\x4a\xc4\x41\x32\x3c\x00\x9e\x1e\xcb\x73\x3f\x89\xc5\xd9\x04\xa7\x72\x09\xf7\x8e\x9d\xdb\x7c\x41\x56\xa3\xa4\xcd\x8b\x8d\x71\xd1\x29\xbe\x6c\x56\x84\xb7\x9d\x5f\xea\x96\x45\x0c\x0d\x2a\x63\xeb\x72\x57\x96\x8d\xcf\x19\xfd\x47\x07\x4d\x79\xbf\x7d\x06\xc1\x77\xe0\xe8\x7b\x8b\xb9\x2a\x10\x65\x2e\x7b\x64\xc0\x92\x7f\x3f\xe7\x84\x2d\x6e\x1c\x83\xec\xe4\x0e\xba\x91\x5e\xee\x71\xd6\xbd\x0b\xd3\xfc\x7f\x35\x13\x72\xe6\xc6\xc6\x78\xed\xe4\x44\xdb\x0d\x89\x69\x3f\x58\x74\xb2\x02\x9a\x82\x9c\x18\x7b\x72\xd4\x28\x94\x0d\xab\x70\xa2\x7e\x57\x7d\x6d\x77\x32\x88\x17\x4c\xc9\x07\x5f\x5d\xd8\xa2\x9d\x0f\xb1\xed\x06\xb4\x04\x07\x9e\x53\x20\xd4\x52\x02\x38\x41\xdd\xd2\x84\xbe\x10\xb8\xdf\x36\xff\xcc\x5d\xb4\xed\x0c\x7a\x73\xbc\x70\x2f\xd9\x40\xf5\x08\x57\x08\x74\x94\xb6\xa3\x65\x0d\x15\x1b\x88\x07\xd5\x6a\xff\x6e\xd0\x4c\x8f\xca\x82\x38\x97\x8c\xe7\xa3\x4f\x2e\x49\xfa\xca\x93\xc8\xd0\xd3\x38\xa9\x3f\xb1\x14\x8f\x0c\x29\x64\xc8\x05\x6f\x09\x37\x64\xe0\x14\xcd\x3c\xe4\x89\x44\xc6\x70\x7f\xb8\xe1\x4f\x57\x77\x0a\x52\x4f\xf3\xae\xce\x4a\xb8\xfb\xfd\x1d\x56\xe4\x25\xc5\x82\x97\xd9\x30\xd7\x9a\xdf\x40\x2d\xa3\x6b\xff\x09\x00\x00\xff\xff\xca\x04\xee\xd9\x9a\x09\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2458, mode: os.FileMode(420), modTime: time.Unix(1447343087, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\xa6\x56\x2a\x41\xe5\xac\xef\x95\x7c\x6a\xab\x7e\x48\x4d\xa2\xd8\xb7\xaa\x52\xd6\x30\xc0\x36\x66\x97\xee\x47\x2c\x37\xf2\x7f\xef\xcc\x02\x09\x44\xae\x4a\x4e\x1e\xd8\x37\x6f\xf6\xbd\x99\x31\xad\xcc\xef\x65\x85\xf0\xf8\x08\xe2\xa6\x8f\x4f\xa7\x24\x59\xad\x60\x5b\x2b\x07\xa5\xda\x23\x1c\xa4\x83\x0a\x35\x5a\xe9\xb1\x80\xdd\x11\x7c\x8d\xe0\x0e\xb2\xaa\xd0\x82\x37\x66\x2f\x18\xff\xa9\x50\x5e\xe9\x8a\x0e\x87\xbc\x46\x55\xb5\x87\xd6\x9a\x07\x84\x32\xf8\x48\x55\xa3\x86\xa3\x09\x60\xf1\xd2\x06\x3d\x61\x1a\x4a\x40\x6e\x9a\x46\xea\x22\x49\x12\xd5\xb4\xc6\x7a\x48\x13\x80\x85\x46\xbf\xaa\xbd\x6f\x17\xfc\x50\x29\x5f\x87\x9d\x20\xe4\xaa\x32\x97\x3d\xc3\x38\x64\xe4\xbd\xf2\x0c\xe6\xd0\x5b\xa9\x5d\xe4\x9a\x9d\xba\xca\xf7\x0a\xb5\x9f\x57\x8e\x7f\x67\x22\x5b\xcc\xe7\x21\xd1\x5a\x63\xdd\xab\xe4\xae\x1e\xe4\x5e\x15\xe4\xe1\xbc\xac\x41\x21\x81\x69\x00\xc8\x22\xea\xbe\xf8\x88\xa5\x0c\x7b\xff\x35\x5a\xef\x68\x1a\xe8\xa8\xb5\x4a\xfb\x12\x16\x6f\x7f\x2f\x40\xd0\x7c\x44\x3c\xea\x02\x86\xb8\xcb\xbd\xb8\xc7\xe3\x12\x2e\xe8\x12\x01\xe1\xfd\x1a\xc4\x84\x84\x4f\x29\x82\x17\x7c\x3d\xfc\x05\x6b\x96\xc4\x21\xbc\xc2\xc3\x97\xed\xf6\xe6\x43\xbc\x28\xe4\x16\x49\x9b\x03\x09\x1a\x0f\x0c\xae\x03\x0d\x8a\xfa\x43\xb7\xbe\x92\x0d\x73\x00\xa3\xa1\xd3\x25\x92\x32\xe8\x7c\x4a\x91\x96\xc6\x36\x92\x6e\xe4\xbc\x2d\x1b\x2f\x6e\xb1\x52\x14\x1e\x33\x78\xc7\xd7\x92\x2e\x27\x03\xc7\x7c\x8f\x74\xab\xde\xae\x0d\x75\x6e\x09\xd4\x15\x96\xc6\x6d\x14\x44\x9d\xf6\x87\xdf\x36\xd7\x57\x4b\x58\x2c\x32\xc2\xab\x32\xa2\xde\xac\x41\xab\x7d\x64\x00\x20\x2d\xe3\x59\xe7\x74\xa0\x3d\x89\xfd\x82\x1d\xe6\x32\x38\x04\xe5\xe3\xae\x51\x58\xd0\x5e\x8d\x76\x2e\xee\x54\x6e\x0a\x14\x91\xac\x25\xd1\x79\x4a\x35\xb8\xda\xa9\xab\x38\x08\x5b\x8f\xab\x3e\xbd\x1c\xf4\xf6\xcd\xed\xd3\x2c\xfa\x60\x35\x3b\x94\x4e\x96\x64\x2c\x8c\x55\x67\xcb\x81\x29\x4b\x4e\x43\x5f\xe6\x74\xa3\x6b\xc4\x53\x1f\xd2\xe7\x35\xec\x5b\xb4\x1d\x5e\x3c\x55\x78\x55\x67\x88\x85\x9b\x41\xf5\xd3\xb3\xa0\x6c\x32\xd9\xd7\x2d\xdb\xa9\x8c\xfe\x6c\x4d\x68\x5d\x37\x72\x44\x21\xce\x17\x58\xc7\x7f\xc5\xfe\x49\x4c\xae\x3f\xf2\x63\xba\x0a\xbd\xa3\x44\xda\x1b\x75\x9e\x5a\xb1\x6b\x9d\x05\xcc\x74\xd6\xbc\xc4\x1f\x5b\xfc\x47\x3e\x19\x13\x72\x1f\x2d\xf8\x8f\xbc\xf3\xf9\x6c\x69\x4e\xf1\xe4\xad\xe8\x56\x64\xa2\x88\x44\x3c\x48\x0b\xa3\x21\x27\x5b\x7e\x39\xa3\xc5\xad\x3c\x7c\x47\xe7\xe8\x83\x91\xfe\xf8\xb9\x3b\x7a\x4c\xef\xd8\xae\xcd\x33\x72\xe3\x2d\x7f\x0f\x4e\xa7\xbb\x8c\xb6\xf9\x6f\x00\x00\x00\xff\xff\x2d\x34\xca\xab\x6a\x06\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1642, mode: os.FileMode(420), modTime: time.Unix(1447351973, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\x71\x33\x3a\x40\x0a\x52\x79\xcf\x1b\x32\xa0\xed\xd2\x2d\x7b\x18\xb2\x2e\xe8\x1e\x8a\x62\x60\x2d\x5a\x22\x22\x89\x0a\x49\xb9\xf3\x0c\xff\xef\xfb\x8e\x22\x5d\x4b\xf6\x12\xb9\x18\x30\x60\x7d\x32\x7d\xbc\x5f\xdf\x77\x47\xf2\xd4\x8a\xe5\xbd\x28\x24\x6d\xb7\x94\xdd\x86\xf5\x6e\x37\x9b\x2d\x16\x74\x57\x2a\x4b\x2b\x55\x49\xfa\x28\x2c\x15\xb2\x91\x46\x38\x99\xd3\x87\x0d\xb9\x52\x92\xfd\x28\x8a\x42\x1a\x72\x5a\x57\x19\xeb\x5f\xe7\xca\xa9\xa6\xc0\x66\xb4\xab\x55\x51\x3a\x6a\x8d\x5e\x4b\x5a\x75\xce\xbb\x2a\x65\x43\x1b\xdd\x91\x91\xcf\x4d\xd7\x0c\x3c\xc5\x10\xb4\xd4\x75\x2d\x9a\x7c\x36\x53\x75\xab\x8d\xa3\x64\x46\x34\x6f\xa4\x5b\x94\xce\xb5\x73\xfe\x53\x28\x57\x76\x1f\x32\x28\x2e\x0a\xfd\x3c\x38\x38\x5c\xb2\xe6\xbd\x72\xd3\x94\xf9\x77\x9a\xa6\x34\x46\x1b\x7b\x56\x0a\x8b\xb5\xa8\x54\x0e\x58\xd3\xac\x96\x95\x92\x0d\xf2\x86\x32\x6a\x62\x44\x83\x82\x64\x3f\xc8\x95\xe8\x2a\x77\xe3\xe9\xb0\x28\x10\xb6\x5a\xa3\x1a\xb7\xa2\xf9\xd7\x0f\x73\xca\x50\x32\xaf\x2f\x9b\x9c\xe2\xba\xb7\x7d\x76\x2f\x37\x97\xf4\x0c\x49\x74\x92\xbe\xbd\xa2\x6c\xe0\x84\x77\xb1\xa2\x91\xbf\xa0\x3e\xf2\x9a\xa2\x2d\x2e\x66\xac\x2a\xec\x12\xa0\xfe\x42\x66\xbf\x88\x9a\xf5\x6e\x85\x11\xb5\x45\xe1\x1a\x27\x54\x63\x49\x54\x95\x2f\x6d\xcb\x72\xe9\xa4\xb1\xe8\x13\xb2\xec\x08\xbf\xbc\xf3\xe2\xf6\x86\xfd\xb6\x1a\x51\x67\x2b\x6d\xbc\x10\xbe\xcb\x0e\xa5\x3f\x74\x4d\xba\xe5\xae\x50\x1a\xcd\xb2\x69\x15\x02\x57\xbe\x01\xad\x24\x61\xd0\x50\x46\x39\x87\x9e\x82\x5b\x41\x4c\x79\xf6\x46\x3e\x74\xd2\xba\xd9\xc5\x62\x06\x03\xef\xf4\x1f\x13\xb6\xce\x74\x4b\x47\xdb\x01\xdb\x61\x8f\x09\x52\x2b\x26\xdf\x2e\x8d\x6a\x7d\x06\xbb\x1d\x18\xf0\xba\x23\x31\x84\x17\x8b\x51\x01\x8e\xa3\xb2\x14\x2e\x81\x36\xbb\xb1\x2f\x75\xbe\xf1\xa1\x28\x69\xb4\x23\x9f\xb7\x32\x32\x4f\xa1\x78\xb1\x77\xc5\xa1\x7e\xd4\x77\x0c\x64\x54\x8e\xfe\x94\xfe\x0e\xfc\xf2\x4e\x07\xd0\x9e\x0e\x69\x03\x3f\x6d\x0f\xc4\x53\x13\x0f\x99\x09\xec\xac\xba\x66\x49\x09\x7b\x7f\x23\x97\x52\xad\xa5\x89\x39\x5e\x3c\x42\x58\x3a\x8a\x97\x18\xea\x1b\x36\xb2\x7e\x89\x00\x05\xd3\xba\xaa\x59\x56\x28\x2c\x37\x29\xf9\x73\x03\x9a\x01\x60\x2d\x38\x09\x4b\xef\xde\x7b\xa1\x87\x34\x20\x3e\xc2\x04\x51\x03\x5e\x90\x04\x44\x9c\xf1\x5b\xee\xce\xeb\x3f\x5b\xb8\xb1\x3d\xfd\xf4\xd5\x15\x35\xaa\xa2\x6d\xe0\x27\xf8\x88\x2e\x6e\xec\x0b\x63\xc4\xc6\xdf\x6c\xd1\x37\x84\xbf\x76\xd2\x84\x12\x78\x03\xd0\xf9\xc0\xa2\x9e\x38\x1f\x2a\xa0\xc7\x26\x4c\x90\x30\x1f\x21\x93\xfd\x26\xdd\x27\xdb\x64\x7c\x18\x83\xcd\x65\x0c\xf4\x5a\x9b\x5a\xa0\x49\x4d\x28\xe7\xe1\xff\xe4\x34\x50\xd4\xc0\xa3\x38\x8d\x36\x65\x90\x95\x95\xbd\xbf\xb3\xcd\xc3\x66\xfa\x9d\x07\x14\x99\x03\x44\x42\x61\x5c\x67\x1a\x96\xe3\x6f\x6c\x37\x8e\xd4\x13\x76\x2b\x5c\x39\xe4\xab\x85\x64\x0a\x5d\x7b\xcb\x2f\x88\xad\x9f\xa4\xc8\xa5\x19\xf2\x55\x7a\xd9\x14\xc6\x0e\xac\xbf\x20\xce\x38\xf3\x03\xc6\xf6\x47\xf5\x35\x86\x87\x21\x93\x78\x33\xea\x7e\xcc\x98\x40\xe6\xde\xfc\x29\x2a\xcf\xa4\xe9\x1c\x80\x83\xc4\xa7\xe4\x1c\xa9\xf8\xdf\x97\xff\xd3\x9b\x79\xd0\x09\x27\x6e\xec\x57\xa5\xaa\xf2\x01\x3a\x7e\x4c\xfc\xac\x62\x4f\xbf\xb7\xef\xde\xe3\xfd\xc1\x50\x0a\x1f\x3c\x63\xfc\x71\x49\x6b\xcf\xaf\x7f\x6f\x3e\x07\x5a\x80\xb1\x8f\xd9\xbf\x59\x31\xdc\x15\x89\xb6\x85\x75\xf2\x48\x4e\xbe\x6a\x27\xa0\x24\xeb\x34\x3d\xea\x98\xc7\xb0\x01\xc7\xe7\x20\x38\x1e\x14\x9f\x78\x0c\x85\x2f\xc4\xbf\xf4\x24\xf2\x18\x92\xfd\x8c\xa1\xef\xe5\xa6\x07\xff\x38\x55\xf3\xed\x36\x7b\xa5\xab\x4a\x2e\x79\xce\xea\x2d\x76\xbb\x79\x9a\x65\xd9\xb9\x97\x0b\x3e\x28\x4e\x5c\x30\xf1\x3c\x4e\x06\x39\xe1\x54\xfe\x07\x18\xfb\x6a\x9e\xf8\x73\xa2\x3d\xe2\xf1\x3c\xd6\xee\x1b\x61\x3f\x97\x46\xf8\x4f\x8c\x5c\x3e\xab\x11\x4b\x7b\x1f\xc9\xf4\x8b\x73\x04\xad\x07\x17\xae\x85\x7d\xbe\x71\x85\x78\x95\x6c\x12\x78\x4c\xe9\x7b\xfa\xe6\x88\x1b\x7c\xa5\x81\x54\x7c\xea\x58\x8c\xab\x6f\xfb\x2f\x30\x84\xbe\xe6\x1d\xb6\x62\x72\x83\xfb\x60\x84\x44\x30\x52\xff\x1d\x00\x00\xff\xff\xa1\x2d\x39\xa2\x10\x0f\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3856, mode: os.FileMode(420), modTime: time.Unix(1447280407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcd\x72\x9c\x46\x10\xbe\xf3\x14\x1d\x4a\x71\x81\x0a\xb3\x39\x3b\xe5\x43\x22\xbb\x9c\xbd\x38\x2a\xd9\x2f\x30\x82\x06\x26\x82\x19\x32\x33\x68\xb3\x51\xed\xbb\xa7\xe7\x87\x05\xb4\xac\xb4\x76\x2e\xd6\x65\x51\xff\x7e\xfd\x4d\x4f\xf7\x3c\x3d\x41\x89\x15\x17\x08\x71\xd1\x72\x14\x46\xa1\xee\xa5\xd0\x18\xc3\xe1\xb0\xb9\x8e\x48\xcf\x2b\xc8\x3f\xa0\x2e\x14\xef\x0d\x97\x82\xe4\x24\x3c\x91\x60\xab\xd1\x69\x7a\xa6\x0b\xd6\xf2\x7f\x11\xf2\xcf\xac\x43\x52\x02\x49\x9b\xa1\x63\x62\x2e\x24\x0f\x51\x1e\x0e\xd1\xf5\x26\x32\xfb\x1e\x61\xdd\x53\x1b\x35\x14\x06\x9e\x22\xb0\x06\x8a\x89\x9a\x94\x7f\x20\x2b\x51\x69\x17\xe4\x14\xdc\x66\x03\x6b\xf8\x80\xd2\xd1\x87\x0f\xb4\x8e\x31\xff\x24\xbf\x5a\x28\xa3\xd5\xdc\xc3\xe6\xf9\x52\x34\xd8\x31\x2f\xba\x65\xfb\x56\xb2\x72\xa9\xca\xb7\xfa\x46\x76\x7d\x8b\xff\xfc\x79\xff\x17\x12\xee\xc3\xe1\xfa\x18\xc7\x26\x08\x66\xeb\x79\x0e\x51\x54\x0d\xa2\x80\xc4\x5a\xde\x61\x81\xfc\x11\xd5\x08\xef\x7a\x15\x75\x0a\x8a\xb8\xb8\x0b\x47\x96\x8c\x67\x07\xfe\x28\xf3\x51\x91\x41\x41\x3f\x43\x87\x0a\x1a\x63\xfa\x07\x6e\xf2\x9b\x20\xc8\xa0\x92\xaa\x63\x46\x5b\xaa\xab\xce\xfa\xd4\x9c\x3e\xf7\x29\xa0\x52\x52\x9d\xa5\x9e\xc4\xc4\xf4\x31\x63\xe3\x14\x64\xe9\xa0\x85\xca\x2c\x33\x94\x88\xca\x30\xa8\x1c\x03\x05\x29\x17\x15\x64\x36\x0d\xbc\x7b\x6f\x3d\x67\xa6\xc7\x52\xf2\x4f\x68\x7c\xd2\x24\xb6\xbc\x04\xb7\x38\x4d\x29\x03\xc5\xb7\xde\x3f\xbd\x07\xc1\x5b\x87\x14\x08\x91\x19\x94\xf0\xe0\x75\xbe\x15\x8f\xc4\x58\x69\xe9\x76\xb4\xde\x32\xd3\xb8\xac\xb1\x07\x1c\xd3\xd7\xe2\xe4\x49\x70\x51\xea\x70\x74\xcf\xcf\x29\x5f\x6f\x2e\x5b\xde\x69\xed\x2e\xc4\xf1\xde\x5c\x1c\xea\x55\x7c\x3e\xae\xbb\x5d\xaf\xf6\xf1\x6b\xfd\x7b\xa6\xcc\xb1\xfd\x89\x79\xdc\x25\x6b\xad\x9d\x3e\xcb\x3d\x6f\x96\xde\x7b\x4f\x27\x48\xe7\x3f\x76\xe8\xd8\x99\x53\x07\xfc\x2e\xcb\x7d\x92\x66\x01\xaa\x90\xe6\x05\xb8\x6f\x7c\xca\x75\x42\x03\xe8\xf4\xd7\x97\xba\x66\x3a\xdb\x23\xf4\xa0\x24\x6b\xba\xa3\x47\x45\xcf\x8a\x07\x56\xbb\xc1\x45\x91\xfd\x37\x99\x47\x54\xe8\xd7\x86\x6b\xa8\x78\x8b\xb0\x63\x1a\x6a\x14\xa8\x98\xc1\x12\xee\xf7\x60\x1a\x04\xbd\x63\x75\x4d\x97\xc5\x48\xd9\xe6\xd6\xfe\x63\xc9\x0d\x17\x35\x29\x47\xbf\x8e\xd7\x8d\x81\x5e\xc9\x47\x84\x6a\x30\x2e\x54\x83\x02\xf6\x72\x20\x38\x6f\xd5\x20\x16\x91\xc6\x14\xc4\x62\x47\x73\xb6\x8c\xa2\x88\x77\xbd\x54\x06\x12\xc2\x1f\x0b\x34\x1b\x7b\xf1\x63\xfb\x4f\xcd\x4d\x33\xdc\xe7\x64\xb9\xa9\xe5\xdb\x10\x61\xfe\x19\x46\xc4\x65\xc6\xf6\xf7\x32\x4b\x7f\x23\xbf\x09\xc2\xc6\x5d\x5e\xaa\xeb\x32\x2f\x3f\xf5\xe2\x68\x31\xb1\x3e\x60\xc5\x86\xd6\x6c\x1d\x1d\x7e\x67\x10\xaf\x5c\x98\x0a\xe2\x9f\xff\x8e\x21\x5f\xbb\x25\xde\xf7\xea\x01\xf7\x19\x5c\x11\x88\x01\x6d\x8b\xe6\x8b\x20\x56\x1b\x16\xc7\x3c\x5e\x30\x7f\x16\x35\x8d\x5e\xd8\x72\x77\x7e\x76\xce\x76\xdd\x99\x99\xfc\x3d\x2b\xc2\x07\x4f\xe1\xee\x7f\x2e\x8a\x14\x12\x2a\x12\x55\xc5\x0a\x7c\xf2\x63\x5b\x92\xd0\xa2\xd5\x3b\x6e\x8a\x66\x9a\x4b\x37\xb2\xc4\x24\x5d\x6e\x8e\x13\x2e\xc7\x94\x61\x97\x00\x8d\x47\xed\xf8\x09\xbc\xbe\x73\x42\x80\x47\xa6\x6c\x64\x3a\xc2\x25\x79\x3e\xd4\x6c\x94\xda\xbf\x69\x9c\x78\x97\x7c\x75\x3d\x4e\x55\xba\xa1\x72\x75\x32\x28\x02\xfd\x6b\x83\x62\x36\x2c\x48\x98\x85\x89\x61\xff\x46\x0c\x41\xeb\xa7\x55\x40\xb9\xd5\x5f\x86\xa2\x40\x6d\x8b\x7d\xe3\xa1\x65\xd6\x7f\x1c\xff\x2e\xd4\x67\xdc\xfd\x76\xbb\xfd\x68\x79\x75\x03\x7d\x59\x21\x2d\xa6\xa3\xe7\x33\xa6\xd3\xf9\xb4\x1f\xa7\x9f\x7f\x18\xb9\xde\x1f\x09\xf0\x7d\x4b\x87\xd5\xac\xa9\x1c\xfc\xd2\x8b\x5f\x23\xff\x47\xa7\xfd\xfb\x08\xff\x06\xaa\x67\xaf\x3a\x1f\x70\x8d\xbd\x39\xe0\x45\xae\x41\x3c\x08\xb9\x0b\x8f\x94\x38\xf3\x16\xbf\xa4\xf3\x21\xe4\x9e\x83\x17\xde\x1e\x32\x33\x48\x7b\xd0\x2e\x80\x93\x57\xfc\x34\x8f\xa6\xf0\x67\xdb\xe3\xe5\x50\x67\x1c\x42\xd0\xff\x02\x00\x00\xff\xff\x02\x83\x89\x18\x4a\x0c\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1446870912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x49\x2d\x52\x52\xd0\x53\xa8\xad\xe5\xe2\xd2\xd7\xe2\x42\x91\x4d\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x87\x2a\x28\x2e\x4f\x4c\x4f\x4f\x2d\xb2\xca\xcd\x4f\x49\xcd\x51\x00\x2a\xd5\xf3\x4b\xcc\x4d\x05\xc9\x68\xe9\xa3\xea\x2c\x4e\xce\x48\xcd\x4d\x84\x99\x0b\x94\x2a\x4a\xcc\x4b\x4f\x55\xd0\x73\xad\x28\x29\x4a\x0c\x06\x4b\x16\x83\xa4\x68\x64\x23\x50\x26\x35\x2f\x05\xc4\x02\x04\x00\x00\xff\xff\xab\x63\xcf\xcc\xee\x00\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 238, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\x4d\x4f\xc3\x30\x0c\xbd\xf7\x57\x58\x3b\x6d\x1c\xba\xdf\x00\x5c\xe0\x02\x08\x26\xee\xa1\x75\x69\x50\x93\x54\x8e\x3b\x51\xaa\xfc\x77\x1c\xd2\x95\xae\xdb\xb4\x5b\xe2\xe7\xf7\xfc\xfc\x31\x0c\xa0\x2b\x70\x04\xf9\xa3\xbf\x77\xa6\x6d\xf0\xfb\xf9\xe3\x0b\x0b\x8e\x81\x5d\x27\xff\xf8\xb8\x2d\x4b\xcd\xda\x59\xd5\xbc\x90\x6b\x91\x58\xa3\x87\x10\x12\x39\x7f\x52\x06\xe5\xc7\x7d\x8b\x20\xa1\x56\xf9\x42\x35\xfa\x07\x27\x24\x46\xd1\x96\x89\xc1\x28\x55\x14\x23\xac\x7c\x51\xa3\x51\x77\xae\xec\x57\x90\x0b\x98\xc5\xb4\xc6\x5f\xd7\x5a\x4a\xec\x24\x7b\x26\x71\xa8\x14\xbd\x1d\x9a\x48\xd0\x3f\x91\x63\xf4\x0d\x49\xff\xa9\xd3\xc2\x40\x62\x5e\xe8\xfa\x58\x48\x9d\x49\x3a\xab\x3b\xba\x8a\xd2\x0f\xca\xbf\x0b\x5e\xaa\x48\x3c\x95\x4c\x4d\xed\x53\x86\x5b\x7a\x9b\xb5\x76\xbc\xb0\x10\xb6\x5b\x18\x75\x11\x46\xba\x38\xe6\x5a\xfb\x38\xb5\xba\x33\xca\xce\x47\x99\x55\x9d\x2d\x60\x3d\x0c\xf9\x2b\x16\xa8\xf7\x48\x11\x48\x23\x9e\x8e\x62\xba\x81\x93\xeb\xb8\x30\x9e\x9b\xf9\x0a\x16\xfb\x0b\x61\x33\x39\x5c\x57\x8e\x8c\x62\x0f\x9e\xa9\x32\x2c\x1e\x3e\xb5\x3c\xfb\x0d\x20\x91\xd4\x1e\x32\x00\x42\xee\xc8\x82\xd5\x4d\x16\xe6\xb2\xe9\x91\xfd\x06\x00\x00\xff\xff\xe9\x14\xe1\x3f\xbd\x02\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 701, mode: os.FileMode(420), modTime: time.Unix(1446441287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x92\x3f\x4f\xf3\x30\x10\xc6\xf7\xf7\x53\x9c\xa2\x77\xaa\x44\xba\xb3\x15\x21\x41\x97\x82\x44\xc5\x52\x21\xf5\x88\x2f\xc5\xc8\xb1\xad\xd8\x19\x42\x94\xef\x8e\x93\x6b\x9a\xa4\x34\x50\x31\xb0\xc0\xe6\x3f\xbf\xbb\x7b\xee\xee\xa9\x2a\x10\x94\x4a\x4d\x10\xb9\xe4\x85\x32\xbc\x32\xa2\x8c\xa0\xae\x9d\xcf\x8b\xc4\x43\xf5\x0f\x20\x30\x39\xea\x1d\x41\xbc\x50\xea\x2e\x0d\x9f\xfc\x28\x53\x88\x97\x6e\xa1\x8d\x2e\x33\x53\xb8\xf0\xde\x93\xf7\xb9\xb1\x94\x7b\x49\x6e\x88\xff\x0f\xfc\xba\xb0\x8a\x98\xf5\x94\x59\x85\x3e\xd4\xf6\xcd\x63\x2a\x49\x89\x08\x62\xfe\x24\xe5\x18\xeb\x29\xd6\x74\x84\x69\x71\xa8\xc0\xe7\xbd\xb2\x5b\x74\x0b\x21\xa4\x97\x46\xa3\x1a\xc9\x99\xcf\x60\x54\x5c\x98\x24\x64\x96\x7a\x17\x92\x4e\x84\x8c\x78\xcb\x3f\xe5\x23\x2a\x29\xb0\xa1\xaf\x4d\xf2\xf0\x59\x86\xba\x86\xd9\x9c\x35\x5a\x74\x49\x88\x7b\xa3\xd3\x64\xbc\xc2\xac\x69\x1b\x32\xb4\x1b\x56\xf5\x34\x2a\xce\x5b\x5a\x97\x96\xa6\xd5\xc2\xf6\xd5\x19\x7d\x19\x5d\x44\xdb\xa6\x66\x18\xcb\x70\x65\x7d\xd0\x32\xa4\x3d\x7f\x20\x1d\xfd\xad\x59\xb4\xc1\x5f\x8d\xa1\x85\x0e\x13\xd8\x9c\xd5\x78\xa7\x6a\xd0\xf3\xd0\x0c\xfb\x33\x7b\xa9\xbd\xb0\x6b\x57\x85\x52\xf8\xdc\x1a\x71\x36\x74\x4e\x7c\x63\x9a\x12\x53\xde\x6a\xcf\x1f\x2c\xfe\x63\x0e\x3f\xda\xe4\x9f\xc5\x4f\xaf\xfb\xf7\xb9\xbc\xee\xbc\xf1\x1e\x00\x00\xff\xff\xd9\x41\x2b\x8f\xd0\x05\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 1488, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1445053809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4b\x6f\x1b\x37\x10\xbe\xfb\x57\xb0\x42\x5a\x48\x89\xb0\xc9\xa1\xe8\xa1\x69\x0a\x18\x85\xdb\x1a\x4d\x9a\x20\x49\x7d\x09\x82\x9a\x96\x28\x6b\x83\x7d\xc8\xcb\x5d\x57\xaa\xa0\xff\xde\xe1\x73\xb9\x5c\x72\x1f\xd2\x5a\xb5\xdd\xfa\x62\xf1\x35\x9c\x6f\xe6\x9b\xe1\x90\xd2\x76\x3b\x27\x8b\x30\x21\x68\xb4\xca\xc2\x38\xcc\xc3\x5b\x68\x92\x68\x7e\x8b\xa3\x70\x8e\xf3\x34\x1b\xed\x76\x27\xdb\x6d\xb8\x40\xc1\x7b\x72\x53\x84\x19\x99\x43\x07\x34\x49\x96\xa1\xef\x5f\x21\x39\x8f\xe8\xd1\xf1\x76\x8b\x82\x77\x38\x5f\xa2\xdd\x6e\x8a\xa0\x01\x72\x93\x7c\x81\x46\x5f\xdf\x8c\x50\xf0\x3a\x9d\xe1\x3c\x4c\x13\x35\x08\x82\x92\x34\x47\xc1\x39\x3d\x4d\xd2\x64\x13\xa7\x05\x85\x21\x26\xe2\x97\xf4\xe3\x66\x45\xa0\x01\x02\x49\x32\x67\x9d\xc1\x05\x8e\x0a\x72\xb6\x5e\x65\x84\x52\x10\xc2\x27\xba\x25\x4c\xe4\xa2\xc9\x4b\xae\xe8\x57\xaf\x50\x12\x46\x68\x7b\x82\x50\x46\xf2\x22\x4b\x58\xef\x09\x03\xc6\x67\x49\x80\x6f\xc2\xe4\x35\x49\xae\xf3\xa5\x1b\xa1\x1e\x1e\x8b\x6d\x15\x4a\x03\x30\xc8\x8b\x28\xd9\xed\x46\x23\x29\xb9\xc5\x02\x34\x87\xa1\xeb\xb1\x0b\xda\x84\x2d\x35\x55\xea\x07\x05\xaf\x1b\xa1\xa8\xe1\x63\x42\x29\x55\xea\x05\x05\xf4\xc9\x49\x96\xb8\x81\xc8\xc1\x63\xc1\xb8\x84\x7e\xad\xcf\x65\x5f\x72\x85\x71\x11\x7b\xa9\xc5\x06\x87\x83\xb1\x88\x52\x9c\x7f\xf7\x6d\x33\xb3\x84\x3e\xbc\x75\xb6\x9e\x45\x05\x85\xe0\xd7\xdd\x7d\xe9\xd6\x00\x4e\x0c\x1e\x15\x9c\xd2\xc7\x02\xa7\xba\xfb\x81\x2b\xa2\x3c\x5c\x45\xe4\xed\xc2\x83\x4f\x8f\x1f\x15\xa2\xa1\x55\x2f\x38\x67\x89\xe5\x28\x10\xf6\x9e\xcc\x08\xd8\x27\xfb\x1d\xc7\xa0\x64\xa0\xa0\x31\x15\x31\x9d\x41\xeb\x6f\x82\x02\x36\x28\x50\x19\x9d\x1f\x8a\xc5\x22\x5c\x43\x37\x13\x3b\x1c\x7e\x27\xee\xae\x28\xd5\x7f\x75\xb2\xd1\x28\x9c\x91\xfa\x81\x96\x66\x3c\x2a\xcf\x73\x12\x53\x4e\x61\xf1\x89\x0f\xc3\x79\x92\xcc\xc9\xfa\x02\x67\x35\xc4\xd2\x0c\x1f\x58\x03\xac\x07\x08\xc0\x4f\x11\x49\xdc\xbe\x9a\xd4\xd3\x00\xdf\xc6\x9b\x07\xf8\xe8\x90\x86\xec\x06\x45\xe5\x04\xa9\x5c\xdf\xe8\x6f\xc2\x24\x47\xff\x2d\x4c\x5a\xb9\x5e\x98\xfe\x48\xc2\x9b\x82\x34\xc0\x32\x26\xdc\x13\xda\x0f\x11\xdc\xf7\x25\x8a\xa5\x0a\x2a\x22\xcd\x66\xf0\x2b\xa6\x17\x02\x03\x08\xe4\xf1\xba\x80\x50\x86\xbd\x14\x27\x76\x3b\x86\xfc\xc5\x4b\xab\xef\x07\xe4\x8d\x52\x6b\xea\xb3\x67\xa0\xd8\x76\xfb\x57\x08\xa8\x03\xc5\x01\x04\x73\xe0\xe3\x2a\x02\xdb\xb1\x6a\x39\x5d\x91\x2c\xdf\x94\x69\x05\x05\x46\xf2\xd9\x69\x1c\x76\x52\x42\x2a\x2b\xc5\x78\x65\x2c\x16\x63\xca\x85\xc8\xf2\x21\xaa\x38\x11\x1d\xdb\x8b\xc8\x36\x19\xea\xe0\x47\x04\xb2\x4b\xd7\x81\xd3\x4e\xe7\xf3\x90\x09\xc5\xd1\x3b\x61\xbc\x90\x94\xbe\x45\x81\x6b\xd8\xef\x6b\xe7\xec\xdf\xc8\x46\xbb\x3f\xc3\xc9\x35\xf1\xe8\xce\xd5\x85\x21\xe1\x60\x8f\x5e\x62\x4a\xab\xc7\xf9\x2c\x01\xd5\x82\xad\x3e\xd8\xc7\x51\x7a\xf5\x85\xcc\x72\xf3\x3c\xf2\x5e\x63\xaa\x81\x5c\xe3\x6d\x20\x6d\x43\xc6\x60\x95\x18\xe7\xb4\x83\x53\xc0\xf5\x92\x6c\xc2\x42\xc1\x69\x14\xbd\x5d\x54\xbb\xaa\x76\x68\xb5\x82\x9c\x24\x8d\x50\xf9\x34\x80\x40\x1d\x49\x60\x0b\x0c\x3d\x60\xa2\x8f\x05\x14\x3e\xa6\xe3\xf4\xc9\xfd\xfc\xb9\xca\xd0\x50\xc5\x23\xac\x27\xa0\x90\xcf\xa0\xcb\xb4\x88\xe6\xe8\x3a\x45\x4b\x92\x91\x93\x5a\x90\x96\x77\x61\x5b\x29\x9d\x61\xcf\xe9\x3b\x75\x51\x16\x6e\x36\xa1\xb8\x6f\xd0\x2a\x33\x30\xd3\x0b\x11\x3f\x15\x34\x4f\xe3\x9f\xb9\xd3\xe0\x32\x61\x0b\x9a\xf1\x61\xe1\xd3\x26\x31\xa7\x59\x86\x37\xf6\x62\xab\xda\xa9\xaf\x7a\x83\x57\xd6\x92\x6a\x2a\x92\xe6\x57\x2b\x58\x99\x04\x1a\xa7\x30\x99\xac\xdf\x72\xee\x1a\x3e\x38\x6f\x08\xeb\x72\x03\x9b\xf2\x7c\x8f\x86\x82\x6d\xb6\x24\x31\xae\x64\x47\x2b\x39\xde\x62\x96\x05\xd0\x0c\xf2\x5d\x2d\xf3\xa1\x4f\x9f\x21\x95\x91\x6c\x81\x67\x64\x0b\x09\xa3\x48\x66\x68\xec\xc8\xa1\xe8\x69\x3d\x79\x42\x5e\x43\xed\xa9\x75\x05\x89\x74\x8a\x22\x95\x24\xc5\x9d\x71\xca\x16\x16\xa4\x9a\x34\x04\x12\xf6\x92\x21\x30\x4f\x58\x24\xb2\x0c\x06\xa1\x09\x78\xbc\x10\x5e\x95\x11\x8c\x10\x03\x0b\x31\x0f\xb8\x1a\x65\xf3\xb9\x65\xc2\xf8\x42\xd3\x04\xaa\x94\x18\x67\x74\x89\xa3\xf1\xa7\xcf\x57\x1b\x48\x14\x70\x83\xe5\x23\xda\x94\x97\x70\x9d\xf8\x06\xa4\xd7\x53\x07\xfb\x33\xd2\x07\x6b\x8a\x3d\x58\x0a\xfe\x13\xe0\x96\x69\x96\x69\xa7\x96\xf8\x31\x21\xbc\x5a\x81\xab\xc7\xbe\x19\x20\x72\xa2\xb7\xd9\x95\xc9\x4b\xd7\x5c\x0e\xe3\x4b\xab\x4f\xbd\xdb\x4e\x1c\x87\x11\x4f\x17\x12\xbf\x8f\x49\xe5\x9c\xfd\xe8\xf4\xa4\x1b\x9f\xf4\x36\xfb\x92\x4a\xa5\xbe\x0e\xcc\x2a\x21\xf5\xa6\x97\x4e\xb0\xfd\x38\x66\x1a\xfa\x28\x44\x33\x20\x36\xb1\x4d\x4f\x1b\x96\x72\x86\x60\x9b\x76\xcd\xa5\x46\xc7\xec\x26\x0a\x80\xbb\x4e\x71\x7a\x97\xbb\xcd\x73\x25\x98\x47\x96\xec\x0c\x60\x4d\x1c\xd4\xd3\x06\x4f\x7b\x5a\x72\x85\x84\xc6\x27\xa8\x92\x54\xe5\xa8\x77\xa1\x28\x5f\x86\x94\xc9\x5b\x16\x31\x4e\x4c\x79\x9a\x5f\xd6\x55\x52\x3e\xe0\x8b\x02\x41\xd7\x03\xb5\x4a\xc1\x43\xfa\xa7\x66\x78\x38\x38\x6a\xd7\xb6\x8c\x7e\x8b\x38\x07\x1d\xae\x43\xf8\xb8\x31\x29\x26\x4a\xb3\xea\x65\x81\x73\xa4\x64\x13\x9f\x2c\xaa\x75\xbb\xf0\x95\x8e\xac\x8b\x28\x07\x0f\xa9\xfc\x84\x84\x41\xaa\xbf\x9a\xa8\xce\x15\x60\x6d\x65\xa7\x2a\x50\x5a\x46\xd2\x46\x36\x6b\x35\x7d\xc5\x4a\x0e\x27\x98\x81\xda\xf3\x3d\xc2\x7f\xb1\x11\x01\x4b\xcb\x18\x83\xc6\x94\x4d\x9a\x18\xc1\xab\x4a\xcb\x2a\x0e\xb3\xbf\xfd\x5a\xc1\xa7\x1d\x70\x19\x17\x4f\x44\x0d\x38\xbc\x28\x6c\x4d\x4d\xfd\x0f\x23\xe4\x60\x74\xdc\x97\x8c\xfb\x50\xb1\x42\x44\x1f\x0d\xbd\x24\xbc\x13\x0a\x76\x76\xdd\x83\xa4\x9b\x59\x92\x1c\xa4\x13\x3f\xc0\x46\xa3\x29\x1a\x5d\xa5\xf3\xcd\x68\xea\x92\xb0\x87\xaa\x06\x1d\x40\x39\xf6\xb8\xc7\x8e\x76\xf4\x23\x7a\xa1\xd7\xab\x03\x3d\xcd\x68\xc0\x0e\xa6\x94\x86\x39\x29\xa9\x71\xc6\x46\xd8\xaa\x20\x08\xea\x26\x90\xcb\x41\x1f\x7e\x8e\xba\x08\xe7\xa6\x5b\xd5\x76\x76\x35\xf7\xc4\xfd\x4d\xca\xe1\x37\xd8\x8e\x57\x8e\xbb\x2b\xed\x3a\x20\x7b\x24\xb5\x5e\x17\xa4\xae\xe2\xaf\x7d\xdd\x60\xd5\xa0\x62\x83\xab\xba\xda\xe7\x62\xdc\xac\xfa\x23\xba\x2e\x77\x05\xfa\xe8\x2e\xd1\x9d\x81\xf7\x67\xf6\xf0\x17\xee\x26\x7a\x7b\x6f\xe1\x8c\xe3\xb5\xf3\xd6\xdd\xff\x18\xb3\x77\xfd\xc1\xfc\xc8\xc9\xdc\xf1\x62\xdf\x2f\x16\x3c\x4e\xfa\x3f\xd7\xf7\xcb\xf5\xc3\x3c\x4b\x35\x03\x3c\xf4\xb1\xaa\x63\x3c\xdc\xf1\x6b\x55\x57\x8c\xff\x89\xba\xa6\xe5\x65\xab\xe3\xe2\x81\x59\xdf\xba\x9f\xef\x15\x0c\xfe\x7c\x0f\x5b\x2e\x26\xa2\x56\x2a\x76\x7b\xa9\x6a\xfd\x46\xb9\x7e\xf3\xb0\xbf\x27\x33\x1f\xb0\x76\xfd\xae\x26\x0f\x06\x73\xe9\x2f\x1b\x7d\xed\xe7\x04\xe6\xef\xb6\x7a\x9c\xe4\x0f\xad\x74\xed\x75\x7a\x0f\x50\xae\x3e\xc8\xc3\xfa\x7e\x7f\x11\xd4\x31\xf8\x3a\xc6\x5e\xe5\xa9\xa7\x39\x00\x9d\x71\xe1\x7a\xec\x16\x3f\xaf\xa9\xfc\xbe\xae\xed\xd7\x34\x81\x5f\x39\xe9\xa2\xb6\x04\xe0\x64\x9a\xfd\xe6\xd9\x98\x13\xff\x09\x00\x00\xff\xff\x1b\x0a\x2f\x8b\xc7\x30\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 12487, mode: os.FileMode(420), modTime: time.Unix(1446358277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xeb\x6f\xdb\xba\x15\xff\x3c\xff\x15\x07\x46\xef\x20\x05\xbe\x4a\x3e\x0e\x01\x32\x20\x6b\xef\x70\xbb\x47\x57\x24\xc5\xf6\xa1\x28\x06\x46\xa2\x6d\x22\x7a\x95\xa4\x92\x65\x86\xff\xf7\x9d\x43\xf2\xe8\x61\x49\x4e\xe2\xa5\xc3\x82\xa2\x90\xc5\xc3\xf3\x7e\xfc\x48\xd5\x22\xbd\x17\x1b\x09\xbb\x5d\xf2\xd9\x3f\xee\xf7\x8b\xdd\x0e\xde\xf1\xc2\xe5\x15\xf0\x0a\xe0\xd2\xe2\xfc\x1c\xbe\x6c\x95\x81\xb5\xca\x25\x3c\x0a\x03\x1b\x59\x4a\x2d\xac\xcc\xe0\xee\x09\xec\x56\x82\x79\x14\x9b\x8d\xd4\x60\xab\x2a\x4f\x88\xfe\x97\x4c\x59\x55\x6e\x70\x91\xf7\x15\x6a\xb3\xb5\x50\xeb\xea\x41\xc2\xba\xb1\x8e\xd5\x56\x96\xf0\x54\x35\xa0\xe5\xcf\xba\x29\x07\x9c\x58\x04\xa4\x55\x51\x88\x32\x5b\x2c\x54\x51\x57\xda\x42\xb4\x00\x58\x1a\xab\x91\xbb\x59\xd2\x73\x29\xed\xf9\xd6\xda\xda\xfd\xd8\x28\xbb\x6d\xee\x12\xdc\x74\xbe\xa9\x7e\x0e\xcc\xfa\x8f\x44\x79\xaf\xec\xcb\x88\x4d\x2d\xd3\x17\x52\x5a\xbd\x2e\x5e\xc8\x35\xa8\x70\x5e\xa8\x2c\xcb\xe5\xa3\xd0\xf2\x75\xfb\x8c\x4c\x1b\xad\xec\xd3\x72\x81\xdb\x30\x6e\x5a\x94\x18\xa8\xe4\x83\x5c\x8b\x26\xb7\x1f\x9d\x9b\x0c\x06\x0e\x97\x6a\x74\x93\x5d\xc3\xf2\xa7\xef\x4b\x48\x28\x96\x6e\x83\x2c\xb3\xf6\xd9\x6f\x7e\x77\x2f\x9f\x56\xf0\xee\x41\xe4\x8d\x0f\xff\x80\x0b\xad\xe2\x13\x1c\x30\x0c\xe4\x07\x5c\x63\x97\x2f\x9f\xe4\x23\x51\x0b\x93\x8a\x5c\xfd\x1b\xb5\xfb\x24\x0a\x22\xbd\xfe\xfc\x11\x52\x2d\x31\xb0\x06\x04\x94\xf2\x11\x26\xc9\x40\x95\xc6\x8a\x32\x95\x8b\x75\x53\xa6\xc7\xb8\x45\x14\x23\x38\xa3\xff\x93\x0f\x55\xda\x14\xb2\xb4\x31\x9c\xcd\x0a\xdf\x39\x65\x93\x1b\x99\x4a\xf5\x20\x35\xad\xa0\x38\x34\xf9\xb7\x73\x5b\x68\x07\x00\x09\xb8\x04\x7e\x5a\xb9\x77\x5b\xcc\xcb\x5c\x6a\x73\x09\x85\xb8\x97\x51\x21\xea\xaf\x3e\x31\xbf\x51\xa8\x92\x5f\xfd\x72\xec\x89\xd7\x95\x2e\x84\x45\x5a\xf0\xb9\xc2\xf1\xf2\xab\x99\xff\xf1\xbe\x2a\x0d\x9a\x80\x54\x4b\x54\x87\x49\xf8\x2d\xea\xb3\x1c\x90\x7f\xd6\x55\xd6\xa4\x87\xe4\xfc\x96\xc9\xf7\x94\x27\x5a\xda\x46\x97\x63\xd3\x17\x54\xdf\x47\xdc\xb5\x03\xb5\xc6\x74\x28\xd7\x95\xcf\x05\xfe\x85\xc2\x4c\xaa\x55\x6d\x55\x55\xba\x95\xd1\x5b\x47\x2e\x73\x43\xac\xa8\xb2\xf1\xd7\xb6\xc1\x52\x1e\xc4\x99\xfc\xcb\xa9\xd3\x3e\xc0\xd9\xf9\xc2\x3e\xd5\x72\x3a\x37\x48\x2d\x74\x61\x93\x5a\x17\x4c\x17\xff\xde\xdf\x30\x15\x90\x20\xad\x4a\x2b\xff\x65\x3b\x82\xae\xee\x92\xf7\x7e\x6d\xd1\xc5\x92\xa9\x66\x82\xb9\x68\x03\xd9\xf2\x0b\xe1\xbc\x91\x1b\x85\x8f\x4f\x8b\x51\x30\xc1\xf3\x59\x8c\xc2\xd6\x2d\xec\x76\xa1\x88\x79\xcf\x7e\x8f\x45\x34\x69\x7e\xa0\xd0\x18\x51\x12\x48\x2a\x0b\xb2\xd1\xbf\x44\xe5\xf0\xa7\xcb\x86\xbf\xca\x4c\x89\x2f\xe4\x46\xcc\x03\x6c\xbf\xb8\x9b\x9c\xea\x8b\xf5\x08\xdf\xd0\x66\x58\x15\xed\x36\x60\x60\x42\x9d\x07\x45\xd9\x86\x79\x45\x03\xc5\x50\xd1\x9a\x5f\x9e\xae\x68\xcb\x97\x15\xe5\x17\xd3\x8a\xde\x86\x6e\x89\xc5\xa1\x4a\x45\x89\x69\x02\x81\x4b\x65\xf3\x07\x61\x54\x7a\xdd\xd8\xed\xbc\x25\xb4\x3a\xb0\x82\x9a\x92\x4b\x7c\xbb\x15\x16\x2c\x16\xbf\x81\xc6\x48\x5d\x12\x3d\x26\x0a\xf1\x30\x8f\x95\xce\xdc\x0f\x5f\x7a\xde\x7a\x55\xa6\xaa\x16\x39\xca\x47\x61\x0a\xe7\xa1\xd4\x94\x4f\xb8\x88\x32\x30\x5f\x55\x2a\x1c\xe3\x47\x1c\x06\x70\x47\xaa\xb9\x95\x39\x5f\x38\xcd\x48\x9b\xc8\xa7\xd2\x2a\xa4\x54\x0c\x91\xaf\xd5\xb2\xc2\x89\x09\xf2\x3b\x05\x2c\xc8\x86\x25\xb6\x70\x14\x2b\x52\xb9\x43\x7f\xc7\xc8\xe6\xac\x5f\x83\x3d\xca\xfd\x7e\x05\x52\xeb\x4a\xc7\x9d\x6f\xd9\x6f\x58\x86\x7f\x96\x4f\x6f\xe0\x38\x81\xa8\xe1\x1e\x81\xc0\xa9\xae\x42\x2f\x21\x10\xa9\x88\x01\x88\x5a\x01\x0d\x2b\x32\x83\x5b\x0c\x41\x0e\x95\x21\x89\xf2\x08\x03\x5b\xd5\x6d\xd5\xe8\x54\xf2\xe0\x7a\xde\xad\x3f\xd0\x9d\xd3\x49\xfb\xb7\x9a\xc0\x8f\xcf\xd5\x39\xe7\x86\x8e\x04\x46\x62\x33\x22\xc3\x2a\xde\xc4\xcd\xcc\x15\xd9\x6c\xeb\x6d\xc9\xe7\xbc\xc0\x02\x5c\xc4\x4b\xd9\x61\x42\x06\x8a\xae\xed\xb7\x10\x32\x69\x13\x64\x9e\xd7\xc0\x5a\x34\xec\x56\xea\x07\xf9\x0b\xb9\x04\x10\x27\xe2\x9e\x1c\xe3\xe4\x60\x21\x06\x53\xf2\x7b\xed\x27\x56\xb6\x22\x63\xb4\xa4\x57\x82\x7b\x29\xdb\xea\xf9\xdd\x35\xd6\x01\xca\x14\xb7\xa3\x5f\xe8\x59\x43\xf5\x18\xea\x89\xc0\x28\xd2\xf5\x84\xba\xc1\x4c\x71\x76\x3d\xfe\x46\x9a\x1a\x5d\x2e\xff\x81\xfd\x42\xea\x15\x9c\x85\xb7\xdf\x1b\x69\x6c\x1b\x3a\x0f\x88\x6f\xa5\x3d\x1c\xb7\x6d\x20\x58\xb5\x9a\x57\x0a\xea\x70\xbe\xa9\x39\x3c\x13\x8d\x11\xc8\xec\x08\x8e\x27\x44\x45\x45\xdb\x32\x39\x41\x77\x8b\xdf\x8c\x98\x26\x87\xf3\xe6\x0a\xda\x8d\x23\x33\xda\x69\xc5\x35\xd8\xb7\x24\xe5\xc5\xb7\xb2\x84\xa5\xbd\xd2\x92\x56\xc9\xb1\x25\x87\xd1\x98\x32\xe3\x8d\x02\x72\x18\x8d\x38\xe8\x4e\xaa\xcf\xe1\xac\xc3\x58\x0c\xb5\xfe\x5f\x38\xff\xd0\xf3\xaf\xd1\x9a\x37\x05\xad\xff\x18\x20\x50\x5f\x5b\x6e\xf3\x58\xc0\x81\x6f\x00\x4a\xa7\xe8\x1a\x04\x78\x1d\xfb\xe8\xea\xa8\xb2\x2c\xd0\x2b\x79\x13\x14\xf2\xbc\x86\x70\xa9\x31\xb6\x2a\x82\x82\x80\xc7\x18\x95\x09\x5b\xe9\x53\x34\x1d\x4a\x89\x1c\x02\xe0\x59\x1c\xf8\x07\x13\x3c\xc5\xaa\x13\xc7\x0b\x7f\xe7\x17\xf1\xf4\xe9\x84\xed\x4a\xae\xb3\xcc\x09\x60\xce\x3d\x5e\xdc\x96\x02\x2f\xc9\x2b\xb2\x1f\x9c\x30\x52\xba\x41\x38\x6d\xd4\x29\x6e\x60\xb9\x18\x31\xdf\xb6\xc9\x92\x07\xa1\xa1\x29\x7b\x89\xf1\xf5\xdb\x31\xc4\x8b\x6f\x71\xd0\x8c\xcd\x3f\x0e\x57\xaf\xae\xa0\x54\x39\xf8\x53\xda\x40\xda\x15\xc2\x81\x1a\x87\x4d\xd4\x7f\xbb\x72\x98\x73\x9e\xdf\x32\x76\x27\xa6\x67\x30\xef\xab\x54\x6d\x01\xeb\x1b\xa9\xca\xfc\x8e\xa9\x3a\x87\x7a\x5f\xae\xb5\xc3\x40\x6f\xa4\x31\xf1\x3a\xa6\x6d\x1f\xee\xbc\x4a\x49\x86\x28\x6f\xa4\x67\x60\x37\x52\xd5\xeb\x94\xcb\x72\xc0\x25\x86\xdf\xc3\x45\x90\x19\x7a\x12\x95\xb3\x43\x16\xeb\x68\x59\x28\x63\xa8\x0d\xf6\x6b\xef\x12\x7e\x32\x4b\x06\xe9\x26\xf9\x53\xa5\xca\x43\xc5\xf0\x5f\x1c\x1f\x9c\xda\xd1\x36\xac\xef\x01\x5e\xc2\x6e\x02\x1b\x02\x1c\x22\x14\x5c\x1f\xf3\x09\xd8\xa0\xe7\xca\x1e\x22\x54\xd9\x69\xf3\xba\x27\x2e\x6a\xb9\x7d\xfc\xd0\x0e\xeb\x57\x82\x27\xe7\xad\xd9\xfe\xdd\x89\xf3\xd6\x5e\x77\x40\xbf\xd2\xa6\xb5\x98\x7a\x97\x18\x2c\xb5\x40\x97\xce\xfe\x6a\xad\x68\x06\x85\x02\x00\x93\x6e\x25\x4d\xae\x13\xcc\x1f\xc9\x8f\x02\xb3\xfe\xed\x80\xbb\x6e\xe0\x72\xbb\x75\xeb\xf1\xe1\xed\x01\x9d\x52\x07\xcc\x42\xa3\xa7\x93\xd4\x5c\xa5\x6a\x69\x68\xf8\x5f\x5e\x4d\x5e\x2e\x8d\x38\xc6\xfe\x66\x02\xfc\x7c\xf0\x7a\xd2\x66\x5f\x61\xac\x77\xb8\xcb\x42\x34\x9c\x6e\x1d\x69\x78\xf3\x82\xce\x41\x7f\x29\x1e\xb5\xa8\x74\x12\xef\xbb\xe5\xe5\x82\x2f\x41\x26\x4e\xd3\xde\x80\xaf\x24\xe5\x1b\x96\x21\x07\x24\x69\x49\x22\x1f\x92\x66\x05\x75\x77\x6c\xed\x1d\xa6\xba\xa4\x99\x4f\x99\xd9\x76\xe3\xd8\xc6\xfb\xb8\xeb\x36\x43\x45\xfb\xc7\xd7\x39\x4d\x3b\x9a\x10\x78\x27\x80\xbd\x9b\x7c\x2c\x57\x3e\xff\xf1\xfc\xfa\x03\x0c\x40\xae\x78\x98\x3c\x30\xa0\xff\x6b\x1f\xba\x54\xe0\xed\xad\xf0\x5d\x2b\x37\x72\xbf\x1f\xf6\x8f\x6e\xaf\x47\x0a\x3c\xf0\x86\x75\xc5\x17\x49\x53\x25\xd5\xc1\xcf\x93\xaa\xa9\x2f\xb0\x83\xfd\xa6\x05\x05\x93\x55\xd3\x8e\xf9\xae\x60\x06\x80\xe1\xf9\x2a\x61\x0e\x5c\x20\xff\x5c\x41\x61\xbb\xca\xe8\x29\x32\x28\x8e\xc2\x8e\x4b\x63\x20\x79\xb0\x72\x9d\xe7\xd8\xbc\x94\xb3\x5a\x8f\xeb\xe5\xe0\x8e\xab\x2b\x9b\x90\x79\x63\x12\xca\xc3\x57\x22\xa1\x89\x0c\x79\xcb\x7c\x61\xd4\x31\xcc\x17\xbe\xcf\xfb\x01\xf9\xd2\x17\xf8\xe2\x7c\x69\xb1\x16\xe7\xcb\x10\xb4\x3d\x9f\x2e\xcc\xe0\x0d\xd2\x65\x20\xf9\xff\x26\x5d\x7a\xb7\xa5\x3f\x32\x5d\x02\x94\xea\xc1\x94\xfe\x35\x7a\x9b\x2d\xed\xe5\xdc\x7f\x0b\x55\x3a\x79\x93\x38\x25\xea\x4b\x5f\xc1\x5d\x55\xe5\x1e\x8c\x4c\x62\xcd\xf6\x63\xc0\x00\x57\x76\xd6\x62\xdf\x17\xe8\x83\xe0\xa0\xed\x0a\x70\x00\x5c\x4e\x45\x80\x19\x7d\xed\xe9\xf4\xad\x73\x9c\xdb\x49\x0e\x3b\xc1\x60\x1a\xce\xc1\x9e\xf7\x02\x07\x52\x74\xc4\x1e\xfe\x04\x32\x30\xe7\x08\x19\xf4\x3e\x91\x7c\x92\x8f\x37\x55\x63\xc5\x5d\x2e\xc3\xd7\x92\xb1\x9e\x89\xfb\x26\x36\xe6\xb8\x22\x71\x1d\x98\xa6\xee\x7d\x00\xf5\x8f\xf9\xfe\xf8\x57\xb5\x23\xe7\x87\x23\x71\xe8\x81\x17\x5f\x33\xaf\xba\xda\x9c\xfb\x0e\x39\xe1\x91\xe0\xcb\x09\xa7\x1c\x3d\xc9\x4c\xdf\x0c\xf3\x5d\x1d\xc2\xe3\xde\xd7\x53\x72\x47\x0b\xfb\x6d\x85\xb8\x85\xd6\xa9\xaa\xe8\x13\x59\x85\x02\xe1\xd7\x2f\x5f\x3e\xd3\x56\xba\x0f\xbd\x93\xf4\x8d\x22\x83\x4c\x69\x99\xda\xfc\x89\xae\x01\x9c\x47\xff\x42\x87\x8f\xf2\xba\xcc\x9c\x80\x68\x79\xf9\xbb\x8b\x8b\x0b\x3c\x87\x88\x5a\x79\x48\x1e\xe1\x81\xe4\xd4\xd3\x03\xa6\xe5\xa0\xf0\x77\xdd\x59\x6a\x3e\x4c\x31\x65\xea\xc5\x6c\x9e\x8e\x53\xff\xb9\xaf\x9c\x1c\x0e\x82\x74\x61\x67\x44\x57\x26\xff\x09\x00\x00\xff\xff\x98\xb5\xa4\x2f\x0b\x21\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 8459, mode: os.FileMode(420), modTime: time.Unix(1446917043, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x95\x4d\x6f\x9c\x30\x10\x86\xef\xfc\x8a\x11\x4a\x25\xa8\xb6\xec\xbd\x52\x0e\xe9\x97\x1a\x55\x4a\x56\x4d\xa5\x9e\x27\x30\x80\xb5\x60\x13\xdb\x64\xbb\x45\xfe\xef\x1d\xf3\x11\xd8\x36\x51\x36\xd9\x43\x4f\x18\xf3\xce\x78\xe6\x79\x6d\xd3\x60\xba\xc5\x82\xa0\x46\x21\x83\x40\xd4\x8d\xd2\x16\xa2\x00\x20\x2c\x84\x2d\xdb\xdb\x24\x55\xf5\xba\x50\xef\xcc\x0e\x8b\x82\xf4\x72\x48\x5a\x2b\x6d\xc2\xa3\xb4\xa5\xb5\xcd\x56\xd8\x17\x89\xd7\xb5\xc8\xb2\x8a\x76\xa8\x29\x0c\x38\xb0\xeb\x34\x4a\x2e\x35\xf9\x44\x39\xb6\x95\xbd\xec\x8b\x35\xce\x75\x5d\xa3\x85\xb4\x39\x84\x6f\xee\x42\x48\x9c\xeb\xc5\x24\xb3\x71\x34\x84\x9d\x6d\x69\xbf\x82\xb3\x7b\xac\x5a\x82\xf7\xe7\x90\x2c\xe2\xfd\x37\xe7\x58\x0a\xcb\x4c\x83\xf6\x20\x5d\x1c\x04\xeb\x35\xfc\x28\x85\x81\x5c\x54\x04\xfc\x34\x98\x13\x58\x05\x94\x09\x9b\xc0\xb5\x4c\x79\xd6\x02\xfd\x12\xc6\x1a\x3f\xda\x89\xaa\x02\xa9\x2c\xdc\x12\xa8\x7b\xd2\x3b\x2d\xac\x25\x86\x9d\xb7\x32\x85\x54\xc9\x5c\x14\xad\xa6\x8b\xcd\x65\x84\x8d\x80\xb7\x5d\x97\x6c\x06\x53\x9c\x4b\x7c\x45\x68\x52\xac\xc4\x6f\x6e\xfc\x0a\x6b\x02\xe7\x58\x1a\x43\xc7\x55\x71\x29\x0f\xf1\x60\x4b\x02\x9f\xa0\x24\x4d\xfc\x8d\x87\xc9\x0d\xe9\x7b\xfa\xec\x6d\x82\x73\x18\xec\x5a\xcc\x0d\x4c\x61\x84\xfa\x51\x49\xd3\xd6\x64\xc0\xf3\x00\x91\xf7\x7c\x2a\xaa\x49\x5a\xb4\x42\x49\x9e\xf7\x29\x1f\x2d\x68\x8c\xf5\xab\xf0\xf7\x7f\x03\xa3\x78\x40\x58\x19\x3a\x2e\xcb\xb8\x03\xa6\xa2\xf4\x17\x46\x15\x79\x5e\x91\x06\xa1\x92\xef\x84\x19\xe9\x15\x58\xd4\x05\x59\x60\xc7\x48\xe7\x98\x52\xe7\xe2\xa1\xcd\x9e\x0e\x80\x26\xdb\x6a\x39\x75\x7e\xa5\xec\x43\x65\x94\x45\x21\x83\xf6\x2b\xb3\xef\xe9\xb4\x72\x89\xa6\xb7\x6a\x4f\xde\x2e\x92\x20\xe6\x80\xd0\x37\xe1\xe2\xe5\xc6\x9a\x47\x13\xc5\x8d\x56\x59\x9b\xbe\x8e\xe2\x18\x7b\x22\xc5\x45\x96\x89\xe2\x34\x35\x53\xdc\x79\x8a\x3f\x79\x23\x7a\x8a\x19\x5a\x3c\x9d\x61\x33\xad\xfb\x6a\x86\x23\xc2\x1b\x4a\x5b\xae\x6c\xcf\xa7\x5c\x48\xe1\x7b\x37\xa3\xa0\xc7\x69\x3e\xa0\x11\xe9\x45\x6b\xcb\x7e\xf6\x49\x0e\x5e\xc1\x0c\xfa\x76\x5b\xc3\x75\x19\xcb\x47\xbb\x58\x79\xa9\x19\x5f\x62\x88\xfa\xac\xbe\xdc\x08\xe8\xce\xfb\x27\x64\x2a\x1a\xac\x20\x5c\x10\x09\x21\x76\x8e\x0f\x26\x70\xb1\xbd\xb3\xb3\xce\xb9\xd5\xc0\x26\x3e\xe4\x25\x45\xb5\x7a\x0a\xda\xad\xef\x00\xd0\x17\xf8\x3c\xac\x19\xd2\x04\x80\x8f\xff\x37\xda\xbf\x8c\x80\x55\x5b\x4e\xfe\x5f\xbb\xf6\x77\x13\x5f\xb3\x43\xdf\xf3\xbe\xc9\xb5\xaa\xfd\xeb\x8d\x6a\x75\xea\x27\x5e\x82\xe4\xf1\x1d\x74\xdd\x90\xc6\x71\xe3\x3c\x49\xe7\x2b\x4a\xfe\xb9\x0c\x87\xed\xb9\x0b\x77\xd4\xce\xe7\x67\xb0\x62\x83\x1a\x6b\x5e\xa3\xe9\x9f\x47\xe4\x19\x02\x96\x76\x72\x62\x48\xbc\x51\x4a\xb3\x30\x9b\x73\xae\x0e\x5d\x9f\x25\xbc\xdc\x83\x5b\xa7\xdb\x38\x2e\x12\xc3\xfc\xaf\xe5\xdb\xd5\x34\x4a\xf2\x05\x7b\xe8\xed\x42\xf1\xb7\xb5\x6a\x02\xbe\xf0\xf5\x88\x6b\x60\xe1\x9e\x0b\xfe\x04\x00\x00\xff\xff\x5a\x98\xb0\xcd\x89\x08\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2185, mode: os.FileMode(420), modTime: time.Unix(1446954874, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xc1\x8e\xe3\x44\x10\x3d\xc7\x5f\x51\xdb\xda\x95\x6c\x11\x77\x38\x07\xe5\x30\x12\x02\x06\xb1\x33\xa3\xcd\xde\x00\x69\x3b\x4e\xd9\x69\xa6\xd3\xed\xed\x6e\x27\x04\xcb\xff\x4e\x55\xc7\x4e\xcc\xc0\x81\x4b\x6c\x57\x3d\xbf\x7a\xfd\x5e\x39\xad\xaa\x5e\x55\x83\x70\x54\xda\x66\x99\x3e\xb6\xce\x47\xc8\x33\x00\x61\x5c\x23\xf8\xea\x42\xba\x58\x8c\xab\x43\x8c\xad\xc8\xf8\xa9\xd1\xf1\xd0\xed\x64\xe5\x8e\xab\xc6\x95\xe1\xac\x9a\x06\xfd\xfc\x36\xb4\x58\x25\x68\xdf\x7b\x65\x69\x80\xfc\x1e\x6b\xd5\x99\xf8\x98\x46\x84\x61\xe8\xfb\xd6\x6b\x1b\x6b\x10\x1f\xbe\x0a\x90\xc3\x90\xc0\x68\xf7\xe3\xdd\xf5\xb5\xf7\xaf\x78\x59\xc2\xfb\x93\x32\x1d\xc2\x7a\x03\x72\xf6\x3e\xf7\x86\x81\xa0\x30\x67\xba\x62\xff\x41\x57\x64\xd9\x6a\x05\x9f\x0f\x3a\x40\xad\x0d\xc2\x59\x05\x68\xd0\xa2\x57\x11\xf7\xb0\xbb\x40\x3c\x20\x8c\xca\x21\x3a\x67\x24\xe3\x3f\xaa\x57\xaa\x76\x1e\xc1\xba\x48\x65\x70\x27\xf4\x67\xaf\x23\x12\x7e\xa2\x52\x75\xa4\x77\x2e\xae\x9b\x11\xea\x08\x3b\xac\x54\x17\xa8\x6d\x0c\x37\x3d\xe0\x5e\xc7\x00\x67\xd7\x19\x1a\x88\x60\x5c\x88\xef\x78\xc8\x63\x1c\x8b\xce\x9a\x0b\x77\xa6\x21\x11\x2d\xe8\x3a\x31\xe3\x9f\xad\xd1\x95\x8e\x04\x60\x5b\x75\x7d\x81\xb2\xd4\xb6\x32\xdd\x1e\x4b\x0e\x0e\x6a\xe7\xd3\x19\x26\x0d\x69\x2e\xd5\x42\xd7\xa6\x40\x29\xa7\xa3\xb2\xfb\x40\x13\x1b\xb7\xbe\xa1\xa6\x23\xdf\x0b\xe8\x69\x3c\x94\x11\xa4\x5c\x49\x09\xe5\x43\x72\x57\x85\x4a\x19\xfd\x17\x85\xf8\xa4\x8e\x08\xec\x3d\x6b\x93\x2f\x64\x7b\xa5\x5b\x65\x52\x89\x2a\x6c\x54\x0e\xf8\x75\xde\x12\x14\x0d\xfa\x5a\x55\xd8\x0f\x02\x0a\x0a\xac\x2c\xdb\x5b\xb7\xef\xef\x50\x26\x49\x81\x4d\xb9\x65\x59\xdd\xd9\x2a\xed\x66\x5e\x40\x4f\x89\x8e\x8a\xb7\x64\xc3\x12\xd0\x7b\x5e\x09\xf6\x44\x3e\xe1\x39\x1f\x9b\x3f\x6f\x9f\x9f\x96\x20\x44\x41\x78\xd2\xc4\xa8\x77\x1b\xb0\xda\x24\x06\x20\xef\x1b\xf9\x83\x8a\x64\x91\xcd\xa9\xc9\xb0\x81\x37\x35\x39\x45\x7c\x2e\xc8\x1f\x91\xec\x3f\xe5\xe2\xe5\xf9\xd3\xe7\x89\x27\xb5\x37\x1b\x22\x1e\x79\xae\x05\x10\xdf\x8a\x89\xe1\x40\xa9\xbe\x61\xf8\xe9\x79\x7b\x63\x48\xed\x39\xc3\xb5\xc0\x9f\x1a\xf9\xcb\x0f\x37\x26\xd5\x6a\x26\x62\x77\xae\x1f\xe8\x30\xf0\x11\xff\x33\x8c\x87\x97\xc7\x7c\xe6\x0b\x0f\xab\x9c\xad\x75\x43\xab\xcb\x3d\xe2\x2a\x98\xd3\xe8\x10\x39\xe8\x9b\x71\xf4\x49\xcb\x5f\x52\x31\x17\xb1\x6a\xc5\xf2\x2a\xe8\x1b\x10\x6b\x41\xbf\x7c\xbe\x22\x5b\xbc\xb5\x70\xb1\xf8\x97\x81\x0b\xd2\xbc\xa8\x8f\x31\x45\x19\xeb\x5c\xf0\x1e\x69\xdb\xf0\xf2\x1c\x3a\xda\xbc\xb9\x5c\x50\x11\xf8\x8f\x64\xbd\x5a\x7d\x08\xbf\x59\x9a\x3a\x09\x93\x0f\xfb\xbd\xcf\x8b\x24\x76\x9c\x4a\x2a\x19\x2b\xb7\xbc\x98\xf9\xfd\x04\x74\xa6\xb1\x56\x14\xdf\xfd\xcf\x88\x49\xe4\x49\x79\x98\x6d\x09\x79\xff\x47\x70\x56\x7e\x52\xe7\x8f\x18\x02\xd9\x9c\xff\xfa\xfb\xee\x12\x31\xff\x42\xce\x6f\xef\xc0\x6d\xa4\x83\x35\xc3\xf0\x85\xc4\xfd\x1d\x00\x00\xff\xff\x2e\xba\x5c\x53\x32\x05\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 1330, mode: os.FileMode(420), modTime: time.Unix(1447351868, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x57\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\xa6\xc6\x76\x61\x19\x5a\xf9\x9e\x22\x87\x6d\xb7\x45\x72\x59\x04\xd9\xa0\x3d\x16\x8c\x34\x92\x88\xc8\xa4\x42\x91\x71\x5c\x43\xef\xde\xe1\x8f\x2c\xc9\x91\xed\x05\x8a\xec\xa1\x40\x0e\x94\x39\xf3\xcd\xcc\x37\x7f\x4c\xc3\xb2\x27\x56\x22\xec\xf7\x90\xde\x85\x73\xd7\x45\xd1\x7a\x0d\x0f\x15\x6f\xa1\xe0\x35\xc2\x96\xb5\x50\xa2\x40\xc5\x34\xe6\xf0\xb8\x03\x5d\x21\xb4\x5b\x56\x96\xa8\x40\x4b\x59\xa7\x56\xfe\xf7\x9c\x6b\x2e\x4a\xba\xec\xf5\x36\xbc\xac\x34\x34\x4a\xbe\x20\x14\x46\x3b\xa8\x0a\x05\xec\xa4\x01\x85\x9f\x94\x11\x0e\xa9\x87\x86\x4c\x6e\x36\x4c\xe4\x51\xc4\x37\x8d\x54\x1a\x96\x11\xc0\x42\xa0\x5e\x57\x5a\x37\x8b\xc8\x7e\x95\x5c\x57\xe6\x31\x25\xc9\x75\x29\x3f\x05\x1f\xc6\x47\x2b\xfa\xc4\xf5\x7a\xc3\xf3\xbc\xc6\x2d\x53\xb8\x20\x3d\x0a\x4f\x31\x41\xb1\xa5\x5f\xb0\x60\xa6\xd6\xb7\xce\x42\x4b\xb1\xd2\x55\xa3\xb8\xd0\x05\x2c\x7e\x7e\x5e\x40\x6a\xc3\x77\x0a\x28\xf2\xc3\xd9\x2b\x7f\x78\xc2\x5d\x02\x1f\x5e\x58\x6d\x10\xae\xae\x21\x9d\xa0\xd8\x5b\x3a\xc1\x11\x60\x10\x3f\x42\x8d\x1d\xc5\x56\x94\xb5\x19\xab\xf9\x3f\xe4\xda\x57\xb6\xb1\x72\x37\x44\x41\x8d\xea\x0f\x23\x32\xd0\x46\x89\x16\x18\xb1\x27\x32\xcd\xa5\x80\x2d\xc5\xef\x48\x53\x8e\xdb\x96\x97\x82\x91\x10\x02\x19\x94\x24\x48\x88\x95\x21\x12\xc7\x80\x50\x79\xc4\x48\xef\x1a\xbc\x6c\xd3\xda\x5a\x92\x14\x2f\x6c\x49\x28\xb6\xe9\x59\x7a\xa3\xe5\x6f\x0f\x41\x79\x1d\x42\x82\xf4\xb3\xd1\x95\x54\x24\x9b\x8f\x30\x12\x38\x12\x1d\x8b\xf5\xbf\x09\x49\x79\x07\x7c\x26\x3d\x22\x31\xe3\x0d\xab\x61\x41\xc1\xa1\x2a\x58\x86\xfb\x6e\x01\x31\xc9\xae\xc6\x48\x23\x49\xf7\xed\x2f\x62\x18\x4a\x20\xbd\xc7\xb6\x91\x22\x27\x0e\x2c\xed\x3e\x5a\xc0\x57\xcc\x4c\x28\x59\x22\x14\x9f\x0d\xb6\xda\xf9\xaf\xd0\x12\x6f\x6f\x18\x9d\xad\x6a\x8b\x91\xe5\x05\x96\x85\xb8\xc8\x60\x1c\x0c\x10\x89\x03\x87\x5d\xd7\x78\x1e\x7e\x00\x93\xcd\x81\x8f\x1f\xc2\x29\xec\xa9\xb4\x3d\x65\x50\x88\x37\xa5\xd3\xbc\x4f\x6c\x83\x53\x51\x77\xb1\x99\xe0\x10\x2d\x14\x92\x66\x56\xc5\x34\x64\x4c\x84\xce\x00\x6a\x51\x9e\xcf\xf7\x8e\xf7\xfe\x72\xeb\x8c\x2c\x58\x3a\x0e\x15\xf0\x3f\x6d\x23\x4f\xf9\x57\xdc\xce\x46\x04\x99\x42\x1a\xe8\x76\x72\x09\xdc\x82\x9d\xc9\x69\xcf\x93\xe7\x1f\xe7\xd9\x96\x8d\xdd\x04\x34\xe8\x7c\xb7\x9d\xc2\x5f\x66\xfa\x15\x56\x23\xc7\x7e\x93\x14\xda\xab\x4e\xfa\x51\x77\x36\x55\x31\xac\xe6\xbd\x1e\xd5\xf1\xc7\x59\x89\x7d\xb0\x73\x05\xe4\x40\x12\x92\xac\xae\x7a\xab\x9d\xa3\x65\x15\x85\xb4\x7c\x33\xb4\xce\xd4\x2e\xb0\x3b\xf9\xb2\xd7\x5f\xb0\xcd\x14\x6f\xdc\x58\xb7\x2b\xd7\x0a\x4d\x7f\x1b\x67\x07\xeb\x16\x8f\xd5\x3c\xf0\x5b\x1d\x2b\x7a\xa2\xd6\xe6\x69\xff\x7c\x77\x3b\xac\xa6\xd5\xfa\x4c\xb5\x43\xab\x95\xc9\xb4\xa3\x2a\x90\x31\x97\x08\xbf\xeb\x26\xa5\x1f\x0e\xe7\xe6\xdf\x78\x43\xde\x7c\x47\x22\x2d\xdd\x7e\x2a\x5b\x1e\xee\x31\x43\xfe\x82\xaa\xf7\x74\x3e\xc9\x31\x7c\x43\xf5\x82\x37\x0f\x0f\x77\x4b\x15\x4a\xf3\x3e\x8c\xf8\xbf\x14\xa7\x06\x49\x40\xc1\x2a\xfc\xee\x56\x42\xec\x0b\x43\x1a\x8d\x09\xfc\x6d\x17\xff\x8c\xb9\x3e\xf2\xf4\xde\xca\xdd\x8a\x42\x2e\x55\x1c\x0d\x3c\x4c\x7a\xd4\xb8\x29\x96\x00\x2a\x75\x09\xee\xa0\xb7\xb4\x8e\x59\xec\x98\x40\x09\xd1\xea\xfe\x74\x0d\x82\xd7\xce\x3d\x38\xef\x94\x6f\x5c\x8a\x98\x40\x02\x0e\xf5\xbb\xcc\x4d\x86\x6d\xd2\xc7\x46\x90\xb1\x83\xf2\x4d\x40\x47\xfb\x68\x79\x61\x0a\x66\x37\xca\x99\xe9\x72\x7e\xb8\xf8\x00\x3c\x09\xd3\x18\x06\x3b\xd7\xc1\xd2\xb9\x11\xd6\x13\x39\xd4\xbc\xff\x4e\x97\xab\x63\x93\x31\xd0\xb8\x72\x2f\x53\xfa\xa3\xe1\x54\xd7\x3b\xff\x5a\x9a\x48\x25\x70\x6b\x9f\xab\x1b\xde\xe2\xf8\x01\xd8\x45\x47\x2f\xc2\x40\xff\x85\xd4\xfd\xca\x45\xfe\xa7\xdd\x2c\xa1\x8e\x0e\x19\x4c\xde\x34\xc7\xc7\x39\x9c\x61\x2f\xf8\xe0\x88\xa6\x61\x2c\xff\x32\x29\x00\x1b\xdd\x23\x99\xeb\xd7\xd5\xfb\xd5\xc3\x89\x8a\x76\x93\xb3\x3d\xc5\x48\xe8\xd7\xf4\xf4\x56\x3c\x11\xfc\x68\xd7\x1d\x4a\xc3\xa5\x92\x65\xda\xb8\x24\x86\x0d\x3e\x7a\xc1\x39\x0f\x2d\x65\xef\xe6\xd5\x68\x39\x7e\x87\x2b\x93\x7f\x24\xfe\x63\x46\x28\x1a\x1a\x2a\x5d\xf4\x6f\x00\x00\x00\xff\xff\x7d\x7c\x31\x93\xb7\x0d\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3511, mode: os.FileMode(420), modTime: time.Unix(1446954874, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xdb\x53\xdb\x38\x17\x7f\xcf\x5f\xa1\x2f\xd3\x76\xec\x34\x35\x3c\x74\xbe\x07\xfa\xf1\xcd\x6c\x29\xdb\x32\xd3\x65\x58\x68\x79\x69\x3b\x3b\xc2\x56\x12\x0d\xbe\x04\x49\x06\x52\x86\xff\x7d\xcf\x91\x64\x5b\xb6\xe5\x24\x14\x98\xdd\x7d\xd8\xc6\xba\x9c\xeb\xef\x5c\x74\xb8\xbb\x23\x09\x9b\xf1\x9c\x91\xb1\x4c\x79\xcc\x96\x54\xd0\xec\x9a\xa6\x3c\xa1\xaa\x10\xe3\xfb\xfb\x11\x9c\xe0\x33\x12\x1d\x33\x96\xc8\x33\xfe\x93\x11\xb3\x16\xd3\x8c\xa5\xf8\x19\x1d\xc3\x2f\x58\xd4\x7b\x7b\xfb\x84\xe7\xea\xbf\x6f\x83\x94\xe5\x01\x9c\x8a\xce\x69\x5a\xb2\xc3\xdb\xa5\x60\x52\xf2\x22\x87\x73\x61\x88\xd7\x59\x9e\x90\x86\xf8\x1f\x3c\x3f\x52\x2c\x93\xb8\x04\xdf\x4c\x08\xa4\x64\xc5\x60\xf5\xb6\xa6\x78\x42\xd5\x02\xce\x4d\xc9\x18\xbf\x3e\x17\x31\x55\x86\xf0\x78\x4a\x86\xe4\xd2\x3b\x2e\x97\xf0\x9d\x66\xf2\x9f\x7d\x92\xf3\x94\xdc\x8d\x08\x11\x4c\x95\x22\xc7\xd5\xd1\xbd\x47\x40\x7a\xbb\x56\x40\xbb\xfd\x28\x01\x6b\x2a\x0f\x17\xef\x6b\xce\xaf\x4a\xb6\x4e\x42\xe7\xc4\x36\x42\xfa\xfc\xf6\x40\x99\x0e\xf3\x32\x1b\x10\x06\xb7\x7e\x51\x0a\xb3\x6e\x69\x3f\x44\x24\xf3\xcb\x81\xfb\x52\x14\x4b\x26\xd4\xaa\x83\x78\x47\x83\x23\x79\x22\x78\xc6\x15\xbf\x66\xe6\x2a\x58\x6f\x99\x82\x02\x78\xd9\x6e\x38\x17\x23\x73\xa8\x6d\x85\x23\x79\x50\x4a\x55\x64\xbf\x17\x22\xa3\x4a\x31\xd1\xa5\x14\xeb\xed\x99\xde\xee\x8a\x32\x40\xf1\x37\x21\xe8\xaa\x4b\xc7\x17\xbd\x7d\x02\x95\x15\x2a\x23\x5c\xf0\x3c\xa9\x75\xd1\xb7\xc7\x03\x27\x1b\xfa\x78\x87\xb5\x0c\x75\x42\x05\xcb\x95\xe1\x15\x1d\xc1\xee\xed\x39\x45\x45\x63\xf4\xba\xbc\xa1\xf3\xe8\x6c\x99\x72\xf5\x7e\x65\xac\x60\x5d\x8f\x77\x5a\xa7\xbf\xf9\xd7\x7f\x58\x78\x1c\x14\x69\xca\x62\x04\x88\x21\x83\x30\x31\xb9\x24\x95\x6c\x80\xb9\xa0\x37\x2d\xfd\xdd\x03\xf2\xa7\x16\x0f\xa2\x6f\x74\x0d\x0b\x9d\x5d\xb3\xf0\xb1\xf8\xb2\x5a\x32\xcf\xe5\x73\x8b\xe5\xc3\x94\x65\xa8\x3b\x50\x9a\x95\x79\x1c\x74\x8e\x61\x36\xec\x44\xfd\xc1\x82\xa7\x49\x15\xfb\x9a\x89\x59\xa9\x59\x85\x64\x02\xf8\x2d\x84\x8c\x2c\x13\x44\x3e\x82\xbb\x83\x40\x3f\x7c\x0d\x35\x94\xb8\x8e\x06\x08\x0e\x88\x86\x11\x60\xac\xab\x24\x8a\xbd\xfb\xae\xb7\xfa\xbf\xee\x8a\xfc\xd9\x3b\xf4\xfa\x75\x25\x13\x20\x00\x28\x5b\x2d\xfa\x78\xaf\x37\x3a\xc1\x84\xc0\x31\x5b\x07\x45\x7e\x0d\xaa\xe8\xd8\xb8\xc6\x88\x9f\x56\x19\xa3\xb1\x8e\x7b\xa6\x6b\x64\x03\x1c\x17\x31\x21\x48\x66\xf3\x8e\x93\x1c\xdc\xf4\x80\xe6\x3d\xca\xb5\xdd\xd0\xec\x41\xc3\x69\x5d\x4e\x1a\x7b\xdc\x65\x53\xd5\x46\x79\xc0\x03\xb5\x50\x56\xb5\x61\x3c\x75\x55\x9c\x3a\xa6\xd8\x26\x35\xb7\x32\x21\xf2\x26\x7d\x7c\xef\x13\xba\x5c\x42\x68\x74\x79\x89\x29\xd1\x5e\x08\xf5\x25\x0c\x2e\x0d\xa6\xc7\x0a\xbf\xde\x40\x1e\x0d\x3a\x3a\x3c\x5c\x8b\xcd\x5c\xdd\xba\xa0\xb3\x48\x03\xca\x26\xcd\x76\x23\xaf\x9f\x09\xdd\x98\x7b\x1a\x1f\xbb\x8a\x3c\x9b\x6d\x3c\xac\x9a\x64\xe9\x14\x81\x25\x8d\x2f\xe9\x9c\x11\x93\x9e\xcd\x6f\x38\x31\xda\xd9\x21\x5f\x16\x5c\x92\x19\x4f\x19\xb9\xa1\x92\xcc\x59\xce\x04\x28\x98\x90\x8b\x15\x51\x0b\xa6\x73\xff\x1c\x62\x56\x15\x45\x1a\xe1\xf9\xc3\x04\x32\x40\x3e\x87\xcd\xea\x5e\xc6\xe7\x0b\x45\x20\x9b\x41\x5e\x98\x95\x4a\x93\x5a\xb0\x9c\xac\x8a\x12\x74\x7c\x23\xca\xbc\x45\xa9\x62\x41\xe2\x22\xcb\x68\x9e\x8c\x46\x3c\x5b\x16\x42\x91\x00\x0c\x30\xce\x99\xda\x59\x28\xb5\x1c\xe3\xc7\x9c\xab\x45\x79\x11\xc1\xc1\x9d\x79\xf1\xc6\x12\x70\x7f\x9a\x34\xb0\xdd\x59\xa4\x7a\xc9\xd5\x4e\xd5\xc3\x3c\xe8\xd6\x76\x87\xf1\xdf\xf1\xc8\xf8\x51\xd0\x1c\x8c\x1c\x7d\x60\x33\x5a\xa6\xea\x48\xab\x28\x0d\x4e\xa1\x5c\xe7\x6a\x46\xc6\x2f\xaf\x00\x78\x15\x3a\xad\xd3\x9c\xbb\x2f\x2e\xd9\x6a\x4a\x5e\xe8\x48\x46\x2c\x46\x2d\x22\xb8\x6b\xcb\x8f\x4b\xcf\x1e\xef\x50\x0d\xb5\xab\xf1\x28\x95\x31\x6d\xf5\xae\x27\x18\x06\x12\x9c\x91\x2b\xca\x73\x49\x68\x9a\x6a\x77\x5d\x14\x25\xdc\x5d\x9a\x5d\x2c\x3c\xb8\x08\x14\x16\x25\x38\xcd\x25\x40\xb0\x8a\xe9\x0c\x8b\x3c\xa0\x9c\x71\xe0\x90\x6a\xf4\x40\x38\x42\x2f\x40\x8a\x0b\x24\x0d\x98\x9a\x89\x22\x23\x94\xa0\x4d\xa3\x53\x06\xdd\xac\x54\x23\x85\x39\x78\x9d\x64\x52\x89\x32\x56\x55\xa9\xb2\x66\xb5\x7b\x75\x19\xfa\xc0\x64\x2c\xf8\xd2\xe6\x79\xa3\x6b\x67\xb1\x63\xe3\x3e\x3f\x52\xb7\x67\xc7\x65\x9a\xd2\x8b\x14\x17\x27\x4e\x82\xb1\x15\xc3\xb1\xad\x8e\x32\x54\xfb\x3d\xe4\x11\xab\x11\x58\x0e\xca\x0f\x26\x16\x30\x26\xdc\xac\xf0\x06\x5f\x10\x0e\xfa\xc8\x94\x70\x45\xa8\x94\x65\x06\xab\x6a\x01\x8d\x10\x60\x6a\x99\xb2\x5b\x8c\xaa\x7c\x2e\x09\xc7\x2f\xdd\x95\x50\x62\x73\x0e\xca\x13\x80\x2d\x66\x99\x02\xdb\xcd\x39\xfc\x5c\x85\xa6\x0e\x62\x8b\xc2\xc4\x8c\xc6\x0c\x45\x41\x5f\x49\x4d\xc0\x14\x01\x89\xcc\x6e\x38\xb8\xb5\x04\x7f\xc0\x35\xaa\xe3\x35\x63\x6a\x51\x24\x04\x7d\x25\x47\xd8\xf8\x10\x9d\x63\x4e\x59\xcc\xa0\xc0\x8b\xca\x26\x93\x35\xae\x09\x5d\xb5\x03\x41\x26\xae\x63\xa7\x44\x14\x25\x44\xf9\x24\xe3\x49\x92\xb2\x1b\x00\x02\x3c\x8f\x54\xbc\x60\xc9\x29\x6e\x54\xb2\xa3\x5f\xb1\x79\x83\x5a\x48\xbe\xfd\xd0\x6b\x75\x53\x12\x7d\xa2\xf2\xcf\x92\x89\x55\xed\xee\x2b\xa9\x7b\xc2\xe8\xeb\xe9\xe7\x48\xef\x04\xa1\x75\x46\x95\xfb\xe1\x0a\x76\x2e\xf5\x8d\x56\x1c\xf8\x31\x54\xf3\xcb\x0b\xd5\xe9\xce\x0d\x1e\x1a\x19\x60\xb5\x5d\x1c\x3a\xf6\x8a\xd0\xef\x5e\x93\x05\x57\x32\xfa\xc8\x94\xfb\x68\x0a\xad\x8d\x22\xd3\x6a\x49\x7f\x13\x20\x9b\x22\x00\x1f\xba\xb1\x0a\x9b\x86\xa0\xd6\x1b\xba\x33\xa0\xfa\x58\x21\x8d\x3c\xc6\x32\xcf\x2c\xee\x27\x46\xa1\xf4\x3e\x5a\xe0\xc8\xd0\x79\x66\x61\x6b\x48\x69\x58\xd8\x35\xa8\x74\xcd\x5a\x7f\x2a\xe0\x9f\x15\x18\x71\xeb\xfe\x58\x68\x01\x91\x54\x4b\xfa\xc1\xee\xd7\x23\x31\x36\xc2\xc7\xec\x26\x78\xbb\xbb\x0b\xfd\xad\x00\xfa\x58\x9f\x75\x69\xfe\x3e\xf6\x89\xf0\x7d\x4c\x66\x14\xb6\x93\x3d\xf2\xf2\x7a\x6c\xb4\xd6\x6a\x1b\x8d\x0d\x2b\x9f\x1b\xfc\x69\x73\x9f\xd8\x22\x19\xa1\x1a\x77\x1f\x20\x57\xed\x79\x55\x9f\x12\xa3\xbc\x7f\xd7\xec\xdd\x77\xcc\xff\x18\x64\xa0\x65\x75\xab\xfd\xe4\xc0\xa8\x3b\x4e\xa7\xa0\x38\x68\x79\x9e\x04\xe2\x79\x86\x7b\x73\xca\xf0\x53\xfb\x09\x63\x02\x2b\x5b\x27\x2e\x9e\x50\xaf\x61\xdf\x3d\xaf\x72\x1d\xbf\x36\x85\xe8\x48\xbe\x2f\x92\xda\x83\xad\x67\xa0\xe1\x0a\xaf\x5b\x2c\xe7\xa2\xfa\x01\x2a\xe0\x8d\x69\xbb\xb2\x38\x8d\xc5\x2b\x97\xdf\x76\x91\xb6\xb5\x4a\x36\x23\x80\xb8\x92\x1d\xe2\x67\xe0\xcd\x03\x63\xff\x0b\x79\x4d\x46\x68\xc3\x1b\x3b\x8d\xbf\x7a\x8f\x34\x5f\x17\xa1\xe7\x38\xb9\x7d\x80\x6c\x97\x55\xaa\x57\xd2\xe0\x5b\xcc\x47\xaa\x7a\x9f\x05\x1b\xa1\xb0\x16\x0e\xe6\xbf\x0b\x48\xa5\x97\xf6\xeb\x7e\xd4\xfc\x7f\xdb\xd4\xe4\xd5\xeb\x41\x22\xae\x11\xb0\x11\xa5\x4a\x41\x15\x5c\x5b\x39\xa9\xfa\x0d\x92\xe2\x3c\x1f\x68\x84\xe4\xff\x64\xd7\x3b\x4c\x39\x80\x1e\xb4\x90\x5c\xb1\x66\x68\x65\xc0\x03\xb7\xa2\x28\xaa\xe2\xa4\x3d\x92\xc2\x97\x48\x9c\x42\x2f\xab\xf5\x03\x4b\x04\x1d\x9d\x43\x62\x46\x6f\xbd\xa6\xab\x15\x18\xad\xe8\x6a\x26\x52\xee\xc8\xc9\x3b\x88\xdd\xd0\xb9\x3a\xa2\x35\x4d\xeb\x9a\x92\x41\x6f\xb0\x41\x86\xf2\x39\x25\x66\x9e\xab\x9f\x1f\xbe\x96\xbb\x99\x9c\x61\x26\x0c\xac\x1a\x75\x0b\x16\x12\xdd\x07\x73\xc1\x92\x16\x4e\xea\x01\x7a\xb5\x7b\xa6\xd9\x6d\x1c\xa5\x83\x64\xdb\x8e\x88\x5c\xff\xeb\x61\xc8\xba\xd9\x5c\xf7\x80\xc9\xae\xed\x41\x9d\x21\x88\x12\xfc\xd2\x4c\x6e\xe3\x34\xce\x9d\xc3\x59\x2e\xd5\x2c\xa4\x3f\x28\x23\xfb\xe6\x55\xd3\xab\xb9\x7d\x6c\xb4\x95\xb5\xfe\x8c\x74\x52\x0c\xba\xaf\xf0\x33\xf3\x82\xaf\xcb\x49\x2d\xc9\xbf\x40\xdf\x49\xa0\x35\x89\x82\x49\xeb\x76\xe8\x4e\xf7\x06\x2f\x03\x83\x1e\x2c\xec\x33\xa9\x09\x73\xb9\x31\x97\x55\xb8\xf5\xc7\xcd\x6c\x5d\xc9\x5d\x83\xd0\x56\x2a\x31\xaa\xb8\x25\xe6\x39\xc2\xfb\xdb\x8f\x07\x04\xb8\xb4\x7f\x10\xd5\xa9\x13\x3d\x55\x9b\xaf\x1d\xdc\xfa\xdc\xfe\xfe\x40\x5e\xad\xce\x6e\x40\x47\xaf\x0f\x71\xda\x0f\x3b\x45\x82\xc5\x84\xcd\xce\xab\x81\xd0\xc0\xdf\x65\x9a\xc3\x6b\xff\xec\xa2\xb1\xdd\x48\xfe\xea\x95\x56\xb3\xa2\xef\x96\x89\x41\x70\x55\x87\xbb\xfd\xfa\x80\x3d\xc0\xcf\xed\x82\xb5\x79\x2c\x5b\x67\x32\xbf\x00\x9d\x96\xa0\x3d\x39\x38\x43\x72\xff\x34\xc8\xfb\x28\x6f\xff\x31\x10\xab\x5c\x27\x16\x07\x64\xff\x95\x58\xd8\x4a\xa3\x0d\x25\x6e\x8b\x3f\x58\x79\xa3\xb9\xf7\x37\x4b\xe7\x97\xd3\x10\x1c\xde\x2a\x41\xcf\xe2\x05\xcb\xa8\xd6\x72\x67\x32\x6a\x31\x4d\x8a\xd8\x44\xac\xe5\x63\x67\xad\x7b\x59\x91\xb0\x54\xbb\xd1\xaa\x33\x9a\xec\xb4\x6f\x4a\x4d\xd4\x5e\x6b\x78\xff\x1d\x00\x00\xff\xff\x54\x57\xd3\x01\x30\x21\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 8496, mode: os.FileMode(420), modTime: time.Unix(1446441287, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerResponsesGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4f\x53\xdb\x3e\x10\xbd\xfb\x53\xec\xcf\x03\x33\x71\x26\xc8\xfc\x0e\xbd\xb4\xc3\xa1\x03\x9d\x96\x4b\xcb\x00\x33\x3d\x0b\x6b\x6d\xab\xd8\x92\x91\xe4\xa4\x69\xc6\xdf\xbd\x2b\xd9\x0e\x31\x31\x03\x3d\x45\xd9\x7d\xfb\xf6\xed\x1f\xc9\xbb\x1d\x08\xcc\xa5\x42\x88\x2d\x9a\x35\x1a\x83\xb6\xd1\xca\x62\x0c\x5d\x97\x2e\x23\xf2\xcb\x1c\xd8\x15\xda\xcc\xc8\xc6\x49\xad\xc8\x4e\xc6\x23\x0b\x56\x16\x83\xa7\xe1\x36\xe3\x95\xfc\x83\xc0\xbe\xf3\x1a\xc9\x09\x64\x2d\xdb\x9a\xab\x43\x23\x45\x28\xd1\x75\xd1\x32\x8d\xdc\xb6\x41\x98\x8f\xb4\xce\xb4\x99\x83\x5d\x04\x1e\x60\xb8\x2a\xc8\xf9\x0d\xb9\x40\x63\x03\xc9\xb1\xb8\x34\x85\x39\x7d\x40\xe9\xe8\xd0\x13\xcd\x6b\x64\x5f\xf5\xbd\x97\x32\xa2\x0e\x23\x7c\x9e\xbb\xac\xc4\x9a\xf7\xa6\x1b\xbe\xad\x34\x17\x53\x17\xbb\xb6\x97\xba\x6e\x2a\xfc\xfd\xe3\xe1\x17\x92\xee\xae\x5b\xee\x79\x7c\x82\x01\x36\x9f\xa7\x8b\xa2\xbc\x55\x19\x2c\x3c\xf2\x16\x33\x94\x34\x8e\x51\xde\x72\x56\x75\x02\x3f\x8d\x74\x78\x3b\xcc\x6c\x61\x36\x50\x3a\xd7\xb0\xd1\x10\xbc\x66\x05\x8d\xd1\xa2\xcd\xd0\x04\xef\xa3\x74\xec\x66\x30\x24\xaf\xb6\x96\xcc\xd4\xc9\x71\x1b\xa0\x0c\x0e\x42\x86\xd4\xc1\x6d\x36\x03\x7c\x91\xb0\xcf\x42\x78\xd9\x8d\x91\xca\xe5\x10\x9f\x3e\xc5\x7b\x8d\x2b\xc8\x6b\xc7\xee\x7a\xd7\x22\x3e\x5d\xc7\x2b\x98\xa9\x90\xcd\x17\x98\xbc\x18\x05\x25\x0d\x45\x0d\x99\xfb\xf6\xe3\x13\xb0\x4b\x2d\x10\xce\xfe\x27\xd4\x87\xf3\x73\x1f\x41\xfb\x38\x74\x3d\xb8\x0e\x76\x20\x79\x39\xcf\xb7\x86\x48\x79\xc9\x3f\x27\x7a\x5c\x83\xff\x2e\x40\xc9\x0a\x76\x13\xad\x21\x8a\x6e\x14\x7c\xbc\xd8\x4f\x60\xec\x3c\x8d\x6a\xbe\x0d\x03\x63\xf2\x29\x44\x8e\xbc\x81\x0d\xa8\x41\x4a\x66\x0b\x72\x24\x7e\x38\x15\x3a\x70\x25\xd2\x90\x32\x4d\x0c\x5b\xa8\xa5\x10\x15\x6e\xb8\x41\xba\xd4\xbc\x82\x8d\x74\x25\x21\xa4\x0d\xe1\x47\x9b\x3c\x53\x29\x74\x70\xb8\xb0\xfb\xcd\xdc\x9f\x1b\x9e\x3d\xf2\x22\x5c\x57\x92\xda\x9f\x09\x11\x91\x9c\x7b\x4a\x04\xb9\xac\x10\x36\xdc\x42\x81\x0a\x0d\x77\x28\xe0\x61\x1b\x54\xda\x0d\x2f\x0a\x5a\x21\xa7\x75\xc5\x3c\xfe\x8b\x90\x4e\xaa\x22\x08\xec\xe3\x6a\x59\x94\xce\xb7\x6a\x8d\x90\xb7\x2e\x50\x95\xa8\x60\xab\x5b\x2a\xf2\xcc\xb4\x6a\xc2\x34\xa6\x80\x4c\xd7\xf4\xba\x88\x28\x8a\x64\xdd\x68\xe3\x60\x41\xa5\xc6\x0a\x5d\xea\xf7\x3d\xf6\x7f\x0a\x6a\x45\xfb\xc0\x08\x99\x16\xfa\x6c\x60\x38\x3c\x0e\x37\xe3\x7d\x60\xff\xfb\x3e\x24\xcd\x4a\x1b\xfb\x4f\x12\xd2\x35\xdd\x01\x41\x75\xbd\x2f\x2a\xab\x24\x2a\xd2\x3d\xb9\xc7\x57\x98\xf3\xb6\x72\xd7\xa1\x1d\xfd\x4b\x39\xbd\x9c\x73\x6f\x5c\x1f\x7b\xf2\x88\xdb\x15\x9c\x90\x88\x16\xfd\xe6\xb2\x09\x89\xf7\x0e\xcf\xe5\x21\xdf\x00\x7f\xc1\x9a\x44\xd1\xeb\xb4\xe3\x1b\x15\x1e\x1b\x82\x39\xa4\x55\xf4\xd3\x3c\xfa\x10\x3d\x93\x3f\x53\xef\xbf\x4b\xa1\xce\x91\xeb\x4d\xaa\x57\x02\x06\xd2\xbf\x01\x00\x00\xff\xff\xf3\xf2\x1f\x52\x0d\x07\x00\x00")

func templatesServerResponsesGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerResponsesGotmpl,
		"templates/server/responses.gotmpl",
	)
}

func templatesServerResponsesGotmpl() (*asset, error) {
	bytes, err := templatesServerResponsesGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/responses.gotmpl", size: 1805, mode: os.FileMode(420), modTime: time.Unix(1446954874, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x90\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\xca\xe5\x09\x92\x9e\x9a\x12\x28\x00\x21\xca\x58\xf6\x06\x16\xd9\x5e\x63\x6f\x24\xc2\x29\xff\xce\x26\x07\xe1\xf2\x07\xd7\x59\x33\x6f\x66\xe5\x39\x1e\xc1\xe3\x40\x09\xc1\x54\x29\xa3\x93\x81\x30\x78\x03\xf3\xdc\x1d\x40\x4d\xc1\x98\x83\x15\xb5\x3d\x3b\x25\x28\xbd\x19\x68\xd5\xde\x79\xb9\x70\xc6\x22\xd3\x8b\x0d\xe4\xad\x10\xa7\x5b\x76\x4f\x7f\xf4\x3c\xc3\xa1\x6b\x34\x90\x6d\x75\x4a\x7c\x23\xb4\x0f\x36\xa2\xea\xbb\x96\xea\xde\x31\xda\xe7\x29\xe3\xe9\x04\xf4\x1f\x95\xd3\x8d\x51\x68\xe5\xd7\xab\x34\x40\x62\x81\xf6\x11\x3f\x47\x2a\xe8\x55\xbc\xe2\x48\x4b\x8b\x4c\x4a\x62\x5a\xa4\x25\xa3\x64\xfb\x7a\x7f\xf7\x9b\x84\xaf\x18\x4e\x55\xff\x9a\xd9\xf8\xbe\xd9\x9e\xcd\xd9\x24\x32\xe6\x80\xdb\x22\xcd\xe5\x4c\x72\x6d\x7a\xe8\x3a\x70\x63\x15\x8e\x50\xb1\xd0\x5a\x52\xce\xbe\xf1\x13\x00\x00\xff\xff\x79\x1e\x8a\x65\xda\x01\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 474, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\xcc\x2f\x8a\x22\xfb\x57\xcb\x11\x3d\xa6\xa2\x52\x0f\x3d\x50\x09\x5a\x25\x6d\x2f\x08\x55\x03\x1e\x87\x8d\x96\xb5\xb5\xbb\xa6\x50\xcb\xdf\xbd\xb3\xbb\x06\x4c\x30\x6d\x73\x88\xf0\xfc\x7b\x6f\xde\xcc\x4e\xd3\x40\x4e\x85\x50\x04\x37\xb6\xae\x24\x3d\x91\x16\x28\xc5\x2f\xd2\x37\xd0\xb6\xd1\xfd\x3d\x7c\x53\x1b\xd4\x66\x8d\xf2\xd3\xd3\xe7\x19\xd4\x87\x2f\x03\x76\x2d\xf8\x9f\x4b\x02\xbb\xaf\x08\x0a\x5d\x6e\x00\xc1\x87\xa1\xd6\xb8\x8f\x8a\x5a\xad\x20\x6e\x9a\xec\x91\x56\x24\xb6\xa4\x67\xb8\xa1\xb6\x85\xff\x19\xb5\x42\xb3\xf2\x40\x90\x39\x2b\x83\x25\xe7\x50\x71\x8e\x16\x61\xbe\x58\xee\x2d\x25\x40\x5a\x97\x1a\x9a\x08\x80\x29\x19\x8b\xcf\x04\xa3\x14\x9e\xc9\x32\x0d\x0a\x70\xb0\xac\x2d\xbc\xd4\xa6\x67\xe2\xf0\x2d\xea\x10\x3f\xe2\x5a\x2f\xa6\x54\xd9\x23\xfe\x9c\x92\x31\x6c\x62\xb7\x28\x5c\x69\x78\x18\x83\xf7\x1d\x19\x78\xf4\x14\xee\x42\x6a\xf2\xce\x47\xfd\x37\x06\x25\xa4\x67\x01\xa0\xc9\xd6\x5a\x39\x3b\x7f\xb6\x7d\x62\x6f\xb9\x3d\xae\x9b\x7d\xc8\x73\x61\x45\xa9\x50\x4e\x2c\x6d\x8c\xd3\x33\xf0\x91\x68\xec\x44\xe5\xb4\x03\xa1\x2c\xdb\x38\x9e\x54\x1e\xfc\xfc\x5b\xa3\xe2\x2a\xb7\x22\xdf\xa5\x70\xbb\x45\xe9\xd8\x65\x5f\x74\x59\x91\xb6\x82\x5c\x1d\xae\x2e\x49\xc5\x1d\x39\x78\xef\xb2\x5c\x3c\xbb\x3a\x76\x57\xfb\x0a\x39\xf3\x53\xc2\x22\x85\xc0\x57\x95\xd6\xc3\x65\x13\x33\xab\xa5\xc4\xa5\x74\x53\xb9\x3b\x92\x73\x29\xce\xdd\x1f\x26\x9b\xb3\xb3\x61\xfa\x88\xc3\x40\x07\x54\x7b\xa5\x1b\x2b\x17\xc0\x6f\x87\xd5\x82\x9e\x56\xe3\x5e\x97\x4d\xc3\x9c\x7c\x44\x7b\xa9\xdf\x55\xed\x2f\x64\x3b\x16\x7f\x33\xea\xf8\x15\xbc\x65\x3f\x52\xe8\x54\x0f\x93\xe8\x24\xeb\x05\x3f\x2c\x8e\xed\xb8\x79\xda\x12\xf3\xdc\x21\x33\x54\x25\xd1\xf2\x63\x32\xab\x35\x6d\xf0\x2b\xbf\x8b\x9b\x2b\x64\xfe\x38\x25\xc6\xe7\xe5\xf3\x75\x87\x55\xbc\xd0\x31\x28\xe1\xfe\x98\x47\xf6\x1d\x65\x4d\x1f\x77\x95\xe6\x45\x67\x60\xb7\x17\x63\xc0\xaa\x62\x99\xe2\x61\x7f\x1a\xba\x48\xa2\x43\xa9\x33\x61\x3b\x30\x66\x10\xb5\x91\xbb\x0a\xd3\xde\x4d\xb8\x7a\x11\x78\xbb\xcb\x7f\xbb\x08\x57\x0e\x42\x0f\x25\x4e\x20\x0e\xc7\x20\x0d\xc7\x20\xf1\x5a\xf8\x23\xc1\xfa\xcd\x17\x0c\x46\xba\xc0\x15\x35\x6d\xd3\x7f\x47\xe7\x2f\x67\x10\x28\xed\xb7\x0a\x7f\xdb\xa2\xc3\x8a\x9c\x16\xc4\x29\xfa\x2a\x74\x68\x02\x61\x76\x9e\xf1\x71\x18\xe1\xcc\x6c\x93\x81\x4d\xee\x34\xf7\x9b\x31\xed\x5d\xa5\x84\x47\x70\x8a\xfb\x1d\x00\x00\xff\xff\x84\xe8\x32\x69\xc1\x05\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/server/responses.gotmpl": templatesServerResponsesGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{}},
			"responses.gotmpl": &bintree{templatesServerResponsesGotmpl, map[string]*bintree{}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

