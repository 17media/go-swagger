package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x55\x54\x24\x90\x20\xbd\x57\xe2\x04\x1c\xb8\x20\x24\xfa\x01\x5d\x92\x4d\x62\x1a\xdb\xc1\xde\xb4\x8a\x2c\xff\x3b\xb6\x93\xa8\x94\x0b\x37\x3b\x7e\xb3\x99\x9d\xf1\xbe\xa6\x46\x6a\x82\x42\x99\x9a\xfa\xc1\x9a\x81\x2c\x4f\x45\x08\xc2\x7b\xd9\x40\xf9\x6c\xaa\x0f\xb6\x52\xb7\x21\x78\x7f\x7d\x23\x5d\x67\xac\x7c\x5f\x54\x6f\xa8\x28\x04\x48\x1c\x32\xee\xa7\x21\xdd\x0e\x5f\xce\xe8\x5d\x91\x30\xb4\xa8\x66\xa6\x38\x88\x55\x2f\x06\xac\x8e\xd8\x12\x64\x22\x1f\xd3\xd7\xed\x16\xf6\x9d\x74\xd0\xc8\x9e\xe0\x8c\x0e\x5a\xd2\x64\x91\xa9\x86\xcf\x09\xb8\x23\x70\x67\x6c\x5b\xb2\xc0\xc6\xf4\x65\xe2\x5f\x6a\xc9\xd1\x5a\x7c\x5c\x75\x4a\xb6\x1d\x43\x5c\xea\x44\xd0\x8c\x9c\x47\x75\xa4\x61\x32\x23\x58\x7a\xb0\xa3\xbe\x9a\xb4\xfe\x02\x2a\xa3\x14\xea\x5a\x2c\x19\xbc\xaa\xc1\x58\x76\x21\xc8\xf9\x00\xb7\x02\xa2\x5d\x8b\x3a\xda\xde\x1c\x69\xba\x87\xcd\x09\xfb\x91\x60\xf7\xf8\x8b\xce\x50\x7a\xce\x99\x44\x1b\x52\x73\x03\xc5\x3c\x04\x6e\xbe\x8b\x45\xb5\x90\x73\x1c\x77\x97\x60\xfe\x29\x60\x05\x39\xe6\x9c\xc2\x7b\xea\xd1\xb9\xa5\x02\xc7\x76\xac\x18\xbc\x58\x5d\xae\x1d\x49\x72\x59\xc9\xa4\x86\x3e\xad\xfa\xa7\x77\x28\x2f\x83\x45\x10\x3f\x01\x00\x00\xff\xff\xd2\x0d\x30\x5e\x1f\x02\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 543, mode: os.FileMode(420), modTime: time.Unix(1424655514, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x09\x1d\x60\xb5\x89\xb2\x01\xc3\x1e\xd6\x75\x40\x91\x79\x68\x80\x2e\x0d\x92\x6e\xcf\x65\xe4\x93\xcc\x56\x22\x1d\x91\x4a\xe2\x09\xfa\xee\x3b\x92\xa2\x64\xfd\xb1\x63\x27\x18\xb0\x27\x53\x77\xe4\xdd\xef\x7e\xf7\x87\x74\x55\x2d\x31\xe1\x02\x21\x58\x17\x3c\xe7\x9a\xdf\xe3\x3d\xcb\xf8\x92\x69\x59\x04\x75\x3d\xab\x2a\x9e\x40\x74\x8d\x77\x25\x2f\x70\x49\x02\xfa\xc4\xa2\x80\x5f\xde\x41\xb3\x0f\x5b\xed\xbc\xaa\xa2\x2b\xa6\x57\x75\x7d\x02\x01\xad\x3f\xca\x98\x69\x2e\x45\x5d\x07\x27\x40\xdf\x7f\xb3\xac\xc4\xc5\xe3\xba\x40\xa5\xac\x38\x7c\x6b\x6d\x7d\xf7\x0e\x04\xcf\xa0\x9a\x01\x14\xa8\xcb\x42\x18\xe9\xcc\xf8\x46\xb1\x6c\x31\xfc\xc9\xc5\x47\x14\xa9\x31\x3f\x05\xa2\x55\x1f\x8d\xc2\x4a\xb7\xac\x1f\x87\x8a\x3d\xee\x45\xe5\xd5\xcf\x44\xd5\x59\x3f\x0a\x15\x79\xd2\x58\x88\x69\x4c\x8d\xf2\x19\x88\xbe\xb8\x23\xce\xf4\x97\x63\xb3\xc7\xf3\x32\xdf\x99\x3b\xa3\xdc\x8b\x28\xc9\x24\xd3\x3f\xff\x34\x9f\xac\x23\x9f\x42\xe7\xc2\x7e\x2d\x1e\xe3\xac\x54\x54\xce\xad\xf8\xd8\xbc\xee\xc1\xeb\x94\x2f\xc5\xeb\x5d\x0c\xf0\x7a\xf1\x71\x78\xcb\x4c\xf3\x75\x86\x9f\x92\x1d\x90\x5b\xfd\x4b\x51\x6f\x39\x3a\x0a\xe1\x42\xec\xa2\xd3\x68\x9e\xd7\x1f\xce\xe6\xc1\x30\xfc\xaf\x1f\x79\x71\xa9\xb4\xcc\x13\x59\xe4\x4c\xf7\xa6\xde\x04\xc8\x3f\xec\xae\x27\xe8\x33\x02\xb7\xd1\x7e\x2a\x5d\x70\x91\xee\x22\xd3\xf9\x55\x07\xa3\xf7\xa8\x55\xc6\xe3\xa9\x21\x7d\x89\xb8\x54\x37\xfc\x1f\xb4\x12\x02\x59\xb0\xfc\x92\xe5\xf4\x69\x84\x26\x18\x2e\x4c\x6e\x33\x14\xd3\x90\xc2\x71\xcf\x5e\x68\xcc\xd5\xce\xa6\xb5\xda\xa7\x32\x37\xc0\xe1\x5b\xb5\xb1\x7c\x6c\x53\xee\x03\xd4\x68\x9f\x05\xa8\xb5\x7c\x14\xa0\xbf\x04\xbf\x2b\x71\x0f\xa6\xad\x0d\xff\xed\xed\xf8\x3f\xe8\x2e\x03\xe3\x86\xea\x3d\xc3\x9b\x78\x85\x39\xbb\x31\x75\x0a\xa4\x3a\x3b\x03\x65\xe5\xa0\xac\x62\xd2\xe3\x8c\xda\x01\xb8\x41\xfe\xc3\x5b\xfa\xfd\x15\x76\x96\x29\xa9\xdf\xbc\x21\x20\x55\x55\x30\x91\x22\x44\x9e\x7f\x20\xc3\xb4\x5c\x67\x14\xb6\x79\xcf\xc8\x35\x16\x7a\xd3\x75\x0a\x44\x5b\x53\xc0\xae\x32\x85\x0e\x9f\x90\x7a\x8c\xf1\xaa\xb1\xe0\x6a\xe5\x85\xfe\x1c\x3f\xef\x97\x4b\x6e\x88\x67\x59\x67\xa4\x0d\x9c\x5c\x5a\x29\x5d\xf9\x75\x6d\x48\x20\x16\x6c\xb7\x86\x70\xda\x57\x1a\xc1\x8f\x66\x87\x25\x02\xe0\x20\x24\x00\x5b\x31\x13\x98\x9d\x04\xc3\x6f\x7d\x6f\x83\xa4\xcb\x42\x0d\xe3\xb8\x94\xfa\x7d\x96\xc9\x07\x7a\x03\x06\x53\x26\x83\x51\xd9\x85\x93\x83\x79\x38\xea\xe4\xed\x57\x8c\xfb\xa3\x99\x92\xe5\xc6\x36\x38\xa5\x81\xfa\x3b\xd3\xec\xf3\x66\x3d\x1e\x7c\xd7\xa8\x1a\x62\x47\x90\x8c\xc4\x36\xc8\xdc\xcf\x61\xc3\xc9\xe8\x78\xf4\x81\xa9\x85\x8d\x99\xb2\x30\xe6\xe1\x5c\xe6\x6b\xa9\xb8\xc6\xc6\x1a\x99\xb6\xbb\xe7\x63\x43\xce\x4a\x14\x45\xe1\xe4\x54\x1f\x27\xad\x2d\x9a\x0b\x75\xe5\xdf\xe6\x75\xdd\x4f\xf4\xe8\xc9\x6e\x32\xdd\x2f\xb9\x0b\x75\x6e\xf9\x72\xf7\x12\xbd\xdd\xfa\x36\xa6\xef\xc0\x49\x33\x52\x68\x46\x58\x07\x06\x06\xd7\xd1\xf4\x49\xda\x8c\x8f\x9f\x6c\xc2\xfa\xa7\x87\x19\xee\x1f\x77\xbf\x6b\x16\x7f\x63\xd4\x78\x96\x53\xbb\x24\xa1\x29\x84\xcf\x2b\xae\x20\xe1\xd4\xb4\x0f\x4c\x41\x8a\x84\x8d\x8c\x2e\xe1\x76\x03\x7a\x45\x9d\xfc\xc0\xd2\x14\x0b\xd0\x52\x66\x91\xd9\xbf\x30\x45\x2b\x52\x52\xfa\x73\x39\x4f\x57\x1a\x88\xfb\x7b\x84\xa4\xd4\xd6\xd4\x0a\x05\x6c\x64\x49\x99\x3e\x2d\x4a\xd1\xb3\xe4\x5d\x40\x2c\xf3\x9c\x89\xe5\x6c\xc6\x29\xff\x85\x86\x39\x55\x46\x90\x72\xbd\x2a\x6f\x23\xd2\x9d\xc5\x4c\x95\x2c\xfb\xca\xf3\xb3\x54\x9e\x36\xa7\xcf\x5c\xcd\x04\x87\x6c\xa5\x97\x43\x92\xeb\x83\xb6\xfa\x41\x1f\xcc\xec\x40\x72\x33\xea\xd5\x37\xdc\x9c\xc0\xab\x7b\x53\xf5\xa6\x03\xa2\x0b\x8b\xd3\x4f\x2d\xa3\x36\x7d\x5d\x51\xe8\xf4\x28\x48\x20\x68\xe2\xf8\xfe\x2e\x68\x4e\x35\x3b\x5d\x06\x42\x4b\xb7\xef\x98\xf6\x6e\x51\x8e\x49\xca\xcb\x87\x92\xe8\x38\xcf\x98\x52\xcd\xb0\x4c\x4a\x11\x83\xe9\x82\x6b\x8c\x91\x2a\xb4\x70\x72\x78\x4d\xa2\xad\x7d\x21\x0c\xdb\x10\x5c\xe8\x74\x2e\xe5\xb4\xdc\x84\xf0\x7a\xeb\x8f\xa6\xa2\xd7\x67\xd3\x86\xb6\xb3\x05\x3e\xcc\x07\xea\x70\x9b\x07\x3f\xc3\x39\xfa\xd0\x4d\x45\x52\x4f\x77\xfd\xea\x14\xdd\xc5\x39\xc2\x1c\x79\x07\xa3\x2b\x61\xbe\xf3\x09\x67\x01\x9a\x29\xd9\xcc\x0e\x52\x87\x76\x00\x77\x9c\x76\xab\x6e\xaa\xd0\x21\x3b\x1c\xe0\x55\xec\x39\xb2\xd9\x6b\x19\x83\xed\x7b\xa8\x17\xdb\x8e\xc8\xf6\x25\xa2\x73\x62\x12\xf1\x64\x94\x13\x99\x69\xa6\x60\xe7\xd2\x06\x7f\xc0\x5d\xd4\x85\x4c\x8c\x4d\x5c\x05\xff\x06\x00\x00\xff\xff\x00\xe5\xd8\xec\x97\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4247, mode: os.FileMode(420), modTime: time.Unix(1424655524, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xdd\x6f\xdb\x38\x12\x7f\x3e\xff\x15\x84\xd1\x02\x76\xe1\x2a\xf7\x5c\x20\x0f\xb9\xa6\x87\xe6\x0e\xdb\x2d\x92\x62\xf7\x21\x08\x16\x8c\x34\xb6\xb9\x91\x44\x95\xa4\xe2\x75\x03\xff\xef\x3b\xc3\x0f\x89\xb2\x64\x47\x6e\x5a\xac\x11\x20\x12\x39\x9c\xcf\xdf\x7c\x50\x15\x4f\x1f\xf8\x0a\xd8\xd3\x53\xf2\xd9\x3d\xee\x76\x93\xc9\xd9\x19\xfb\xb2\x16\x9a\x2d\x45\x0e\x6c\xc3\x35\x5b\x41\x09\x8a\x1b\xc8\xd8\xfd\x96\x99\x35\x30\xbd\xe1\xab\x15\x28\x66\xa4\xcc\x13\xa2\xff\x90\x09\x23\xca\x15\x6e\x86\x73\x85\x58\xad\x0d\xab\x94\x7c\x04\xb6\xac\x8d\x65\xb5\x86\x92\x6d\x65\xcd\x14\xbc\x55\x75\xd9\xe1\x14\x44\xb0\x54\x16\x05\x2f\xb3\xc9\x44\x14\x95\x54\x86\xcd\x26\x8c\x4d\xb5\x51\xc8\x5d\x4f\xe9\xb9\x04\x73\xb6\x36\xa6\xb2\x2f\x2b\x61\xd6\xf5\x7d\x82\x87\xce\x52\xae\x6b\x9e\xff\x29\x8a\xb3\x95\x7c\xeb\xd9\x8e\xa1\x39\xd3\x15\xa4\xe3\x08\x8d\x5a\x16\x66\x1c\x29\xa4\xb5\x12\x66\x3b\x8a\xb8\x10\x59\x96\xc3\x86\x2b\x98\x4e\x90\xfe\xe9\x49\xf1\x12\x83\xf2\xea\x01\xb6\x0b\xf6\xea\x91\xe7\x35\xb0\x77\xe7\x2c\xb9\xb2\x1e\xd1\x18\x22\x22\xa2\xed\xdd\x0e\x1f\xd0\xc9\xa2\x34\x4b\x36\x7d\xfd\x75\xea\xc9\x3d\x09\x94\x19\x3e\xcd\x6d\x44\x31\xc4\x17\x55\xf5\x89\x17\xb8\x79\xf1\xf9\x8a\xde\xaf\xca\xa5\x4c\x2e\x41\xa7\x4a\x54\x46\xc8\x12\x69\xcd\xb6\x82\x1e\x29\xda\x5d\xa7\x86\x3d\x21\x4f\xf2\x15\x6b\x7f\x6f\xe8\x3d\xb9\x94\x69\x5d\x40\x69\x70\x3f\x95\xa5\x81\xbf\x4c\xb3\xdf\x9a\x96\xbc\x77\x5b\x48\xb4\xc6\xf8\xe6\xa0\xb4\x27\x2a\x78\x75\xeb\x02\x7c\x47\x71\x4d\x3e\xba\x6d\x24\x5c\x4a\x55\x70\x13\xe8\x98\xf3\x7f\x72\x0d\x2b\x81\x8f\xdb\xc8\x55\xc4\x5c\xa3\x0e\xe8\x1b\x67\xea\xfb\x9c\x6b\xed\x2c\xf0\x5b\x0a\x51\x47\xe7\x48\x2e\x27\x3d\xdd\x22\x8a\xc0\xd7\x29\x1e\xf9\x05\x32\xc1\xbf\xa0\xfd\xbb\xdd\x14\xd1\x5b\x00\x23\x67\x58\x21\x83\xec\x7c\xf4\x82\x68\x15\x79\x3c\x52\xec\xb3\x92\x59\x9d\x0e\x2a\xe6\xb7\xba\x8a\x55\x61\xf1\x64\xc5\x1a\x76\x41\xb1\xb0\x30\xac\xd8\x8d\x47\xe8\x25\x2c\x45\x29\x28\xfc\x01\x58\x62\x89\x50\xd3\xff\xe1\x5a\xa4\x17\xb5\x59\x0f\x68\x4e\xcb\x1d\xad\x97\x75\x99\x12\x0b\x4c\x69\x6e\x98\xe1\x0f\xa0\x59\xad\x41\x95\x48\xce\x30\x9c\xac\xc2\xb3\x1b\xa9\x32\xfb\xa2\xc0\xd4\xaa\x74\xd6\x8a\x32\x15\x15\xcf\x51\x30\x4a\x11\x58\x30\x40\x51\xd4\x71\x13\x65\x20\xa6\x44\xca\x2d\xe3\x0d\xe6\x10\xbb\x27\x9d\xec\x4e\xcf\x7a\xab\x12\xa9\x31\x73\x50\x5a\x30\xf7\x7f\xce\x66\x54\xdc\x82\x9c\xdd\x6e\xc1\x40\x29\xa9\xe6\xad\x57\x82\xc5\x08\xf5\xff\xc3\xf6\x25\x26\x73\x2c\x88\x0f\x58\xe3\xbe\xd7\x48\xb4\x0f\x6b\xac\x24\x06\x8c\x57\x82\x61\x86\xbb\xd2\xac\x78\xe1\xd4\xb0\x05\x55\x64\x48\x25\x5c\xfd\xc4\xed\x1b\x59\xab\x34\xa4\xfc\x31\x9f\x8c\xf0\xc5\x30\x56\x7e\xad\xa8\x36\x3b\x88\xf4\x3c\xe3\xd3\x95\x69\xc0\x4c\x25\x95\x64\xa0\x0e\x89\x6e\xb1\xec\x95\xfd\x58\x63\x75\x8f\x4e\xb7\xd4\x0d\xf6\x9a\x4e\x34\x2c\x27\xee\x55\xc9\x20\x89\x33\x22\xd7\xc7\x58\x1c\x3a\xd5\x73\x02\xda\x7b\x03\xea\x11\x3e\x90\xa7\x18\x76\xb7\x94\xe7\x39\xfa\xdf\x36\x33\x8c\x13\x84\x75\x05\x29\x88\x47\xc8\x16\x64\xaa\x02\x5a\xe2\x2c\x83\x25\xaf\x73\x13\x3c\xe1\xf8\xdd\xd7\xc6\xb6\xc1\x14\x8f\xa3\xd7\xe8\x59\x31\xb9\xf1\x20\xa7\x16\x8a\x74\x91\x50\xfa\xd9\x30\xda\xf2\x78\x0d\xba\xc2\x48\xc0\xef\x98\xbd\xa0\x16\xec\x8d\x5f\xfd\x5a\x83\x36\x4d\x44\x5d\x1b\xff\xaf\x2f\xa0\x01\x8c\x14\x84\x00\x62\xb4\xc1\xc1\x22\x94\xd9\x09\xc9\xb0\x10\xb9\x76\xa6\x28\x1f\xa2\x37\x7b\x0d\x61\x1e\xf8\xce\xe6\xfb\x35\x19\x9b\xc4\xbf\x9c\x30\xd6\xe3\x93\x04\x39\x4e\xb7\x6b\xaf\x87\xe3\xd5\xad\xce\xb5\x36\xb2\xf0\x7a\x31\xec\x68\x22\xe3\x46\xaa\x13\x14\xec\x32\x9f\xd9\x3a\x14\x0a\x83\x67\xeb\x35\x77\x14\x8b\x56\x4a\xd8\xf8\x2d\x2c\xcc\x6d\xe7\x3b\x68\x4e\x72\x91\x65\x56\x40\xe0\x1c\xf1\x0a\x71\xf0\xbc\x20\xec\x40\x1c\x0a\x9f\x5a\x51\x46\xc7\xb6\x9c\x60\x74\x90\x82\x61\x71\xa8\x24\xbd\x1f\xb9\x62\x75\x19\x05\xfd\xf6\xce\x39\x62\xb8\x7d\xe2\x2a\xe6\x60\xdf\xd8\x03\x4d\xf0\xfc\x9c\x95\x22\xb7\x82\x58\x57\xcc\x39\x56\xb0\x0a\x93\x68\x16\xaf\x2e\x6c\x43\x1b\x60\x34\xa5\x1a\x74\xa0\xfa\xb4\x2d\x74\x9c\x72\x4d\x23\x7c\xa9\x72\x81\xd1\x31\xe5\x0e\xb5\xd1\x11\x7a\xda\xf2\xfc\x52\x1d\x89\xc9\x31\xfd\xe2\xd2\x3d\x4e\xad\x50\x24\x5f\xaa\x99\xe7\xd3\x53\x8e\xa6\xc8\x6f\x34\xcf\xe6\x50\x76\x38\xcc\x9d\x7e\xb8\x89\xa2\xff\xed\x05\xfb\x62\x82\x9a\x58\x36\x93\x66\x85\x52\xd4\x96\xc7\xe5\x6c\x5a\x08\xad\xa9\x90\xc5\xf9\xf4\x8e\xbd\xd6\xd3\x30\x05\xe8\xe4\x7f\x52\x94\xfb\xfa\xe2\xdf\x9c\x32\xb4\x53\xe2\xb1\x1e\xe0\x65\xc4\x50\x19\x72\x49\x14\x37\x31\xce\x56\xe8\xb7\x32\x6a\x71\x22\x3b\x21\x41\x3b\x52\x66\x0d\x93\xab\xcb\x66\x58\x39\xb1\xcc\x5b\x27\x1d\xac\xb7\xad\x38\x67\xe4\x45\x3b\x6d\x48\xa5\x1b\x43\xa9\xe8\xf0\xce\x56\xd3\xb0\x69\xbc\x17\x4b\x41\xad\xc2\xe3\x9c\xe9\x74\x0d\x58\x29\x4e\xb0\xba\x27\x76\xe6\x79\xc4\x93\xbf\xbd\x48\x84\x64\xba\xb1\xfb\xf3\xce\xbe\x1f\x6a\x3b\xcc\x7c\x61\xa6\xa1\xe1\x50\x1e\x2a\xd0\xd4\x7f\x11\x6e\x05\x8e\x68\xb3\xe7\x38\xce\xdd\xad\x83\xb9\x7a\xee\xf4\xa4\xc3\x2e\x9b\x82\xde\x0e\x9a\x1a\xdb\x75\xba\xb6\xa4\x7e\x65\x44\x5d\xa0\x1f\x5e\x02\xc1\x66\x8b\x73\xd2\xf4\xdd\x24\xdc\x70\x06\x86\x6f\x67\xc0\x2d\x49\xb9\xc3\xcc\x0b\x71\x48\x1a\x92\x7e\x0c\x06\xea\xcc\xbc\x2d\x0d\x5d\x49\xf1\xd0\x7b\x48\x54\x4b\xe3\x23\x67\x15\x0f\xee\xc1\x6b\xe4\x62\x54\xad\xdb\xd3\x21\x7e\xdb\xf9\x1a\xe1\xa1\xec\x14\x89\xc6\xb8\xc9\x5e\x21\x08\x67\x5d\x77\x0d\x4d\xa4\x0b\xe9\x70\xc5\x1b\x42\x73\x41\x57\x2a\x7b\x8d\x3a\x05\xc8\xb1\x9c\x59\x11\x6e\x65\xba\xe9\xa8\x83\x80\x6d\x5a\x65\x8b\xd5\x4e\xb7\x7d\x1e\xa0\x81\x43\xc0\xe6\x1f\x0b\x56\x98\x16\x94\x91\x22\x1d\x5c\x16\xa6\x8f\xca\x8e\xe4\xce\xce\x45\x9e\x63\xb9\x10\x38\x41\x7c\x43\x03\xfb\x50\x8d\x2f\xa1\x2d\x5e\x3d\x62\xf6\x09\x08\x3d\x63\x47\x88\x01\x34\xfc\x48\x6c\x84\x1e\xde\xc5\x46\xb8\x65\xff\x38\x6c\xc4\x72\x46\x63\xa3\x99\x54\x02\x36\xba\xb3\xce\xf3\xd0\x08\x0c\x7e\x00\x34\x3a\x92\xff\x59\x68\x44\x1f\x2e\x7e\x26\x34\xfc\x80\x12\x35\xfc\xf8\xf3\x53\x83\x8c\xe6\xc6\xfd\x9d\x4d\xbf\x15\x33\xd8\xf1\x67\xb1\xd0\x05\xbb\x97\x32\x77\x6d\x1d\x2b\x05\x4d\x48\x7d\x67\x85\xcf\x67\xf3\x78\x4e\xea\x93\x51\xdb\xf1\x6c\xdf\x73\xac\xd4\xb3\x30\x88\x0d\xce\x80\xcd\x37\xb9\xce\xd8\xd7\x7a\x0f\x2f\x37\x1c\x7d\xea\x59\xac\x17\x4c\x3e\x10\xce\x0e\x33\xba\x8d\x8c\xbd\x6b\x03\x61\x4f\x52\x00\xc6\x3b\xb0\x6f\x48\xf0\x4f\x5f\x7a\xf8\xfe\xd8\xb1\xe2\x08\x19\x8b\x3e\x50\x7e\x82\xcd\xb5\xac\x0d\xbf\xcf\xc1\x7f\xab\x1c\x70\x3e\xd5\x89\x81\x76\xb7\x20\x71\xed\xa4\x4b\x55\x7e\x6f\xf2\x3e\xe6\xf2\x5e\x7e\xc7\x98\x98\x1f\x19\xe7\xf7\x3e\x98\x1c\x15\x73\x1b\x4d\x1c\x3e\x0b\xdb\xef\x28\x68\x7b\x37\x07\x07\x4c\xf7\x4e\x7b\xbe\xd9\x77\x14\x6f\x32\x71\xbc\x66\x3f\x51\x99\x81\x6f\x5c\xa1\x24\xfc\x1d\x00\x00\xff\xff\x4d\x17\x22\x2e\x0c\x19\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 6412, mode: os.FileMode(420), modTime: time.Unix(1424655055, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdd\x6f\xe3\x44\x10\x7f\xf7\x5f\x31\x44\xc7\x91\x54\xc6\x7d\x2f\xba\x07\x28\x88\xde\x03\x47\xd5\x56\xf0\x88\xb6\xeb\x49\xbc\xd4\xde\x75\xf7\x23\x69\x88\xfc\xbf\x33\xfb\x61\x27\x6e\xdc\x80\x28\x94\x93\x4e\xba\x75\x76\xe6\x37\xbf\xf9\xcd\xc7\xb6\x65\xfc\x81\xad\x10\x76\xbb\xe2\x3a\x1e\xbb\x2e\xcb\xce\xcf\xe1\xae\x12\x06\x96\xa2\x46\xd8\x30\x03\x2b\x94\xa8\x99\xc5\x12\xee\xb7\x60\x2b\x04\xb3\x61\xab\x15\x6a\xb0\x4a\xd5\x85\xb7\xff\xa1\x14\x56\xc8\x15\x5d\xf6\x7e\x8d\x58\x55\x16\x5a\xad\xd6\x08\x4b\x67\x03\x54\x85\x12\xb6\xca\x81\xc6\xaf\xb5\x93\x23\xa4\x3e\x04\x70\xd5\x34\x4c\x96\x59\x26\x9a\x56\x69\x0b\xf3\x0c\x60\x26\xd1\x9e\x57\xd6\xb6\xb3\x8c\xbe\x76\x3b\xcd\x24\x91\x7e\xf7\x80\xdb\x1c\xde\xad\x59\xed\x10\x2e\x3e\x40\xf1\x31\x78\x18\x4a\xc1\x1b\xf9\xeb\xae\xa3\x03\x91\x10\xd2\x2e\x61\xf6\xe5\xe3\x2c\x99\x27\x13\x94\x25\x9d\x16\x21\x63\x92\xe0\xb2\x66\xc6\x7c\x62\x0d\x5d\x5f\x11\x85\x9a\x68\x91\x23\xea\x25\xe3\x94\x83\xa2\x74\x2b\x66\x81\x33\x09\x55\xb8\x06\xc2\x12\xa5\xf7\xbc\x72\xc4\xf9\xc0\x1d\x5a\xa6\x59\x63\x32\xbb\x6d\xf1\x2f\x91\x77\x81\x8b\x58\x42\xf1\xad\xb3\x95\xd2\xe2\x0f\x2c\x03\x41\x62\x15\xad\xbd\x8c\xa5\xe3\x68\x80\x91\x76\xc6\xd5\x16\x88\x0d\xf1\x40\xad\x95\x2e\xe0\x47\xb4\x26\xa8\xa9\xf1\xd1\xa1\xb1\x29\x3c\x50\xe9\x36\x58\xd7\xfe\xff\xa0\x35\x72\xa7\x85\xdd\x06\x41\xb8\x68\x59\x3d\x44\xbe\x75\x9c\xe0\xcd\x4f\xaa\xc4\xba\xe7\x38\x8f\x57\xd7\x01\xab\xeb\xc6\x69\xc4\x5f\xf3\x5e\xc4\x33\xdf\x41\x3d\x6a\xd7\x2d\x20\x39\xdf\xa0\x75\x5a\x9a\x4b\xd5\xb4\x35\x3e\xfd\x7c\xff\x3b\x72\x1b\xac\x83\x17\x39\x8d\x03\xe7\x31\xa3\x45\xac\x4e\x6d\xf0\x5f\xe1\x12\x30\x0f\x0a\xbe\x07\x7f\xad\xc2\xaf\xd5\xaf\xa7\xf4\x7f\xe8\x35\x84\x9e\x94\x27\x9c\xe2\x2e\xf8\x84\x9b\xb1\x3f\x70\x8d\x34\xaa\x5e\x2b\x89\x1b\xf0\x83\x59\xf4\x6d\x1d\xc7\x04\x27\x87\x42\xb5\x7e\xc4\x85\x92\xd9\xd2\x49\x7e\x8c\x3b\xe7\xf6\x09\xce\x1a\x51\x12\xd2\x86\x69\x2c\x2e\x15\x0d\xc9\x93\xcd\xd3\xbc\xe9\xe9\x51\x5a\xc0\xd9\x33\x7e\x7e\xa2\x74\x50\x12\xde\x8f\xaf\x76\x09\xf2\x02\x28\x56\x9e\x8a\xaf\x2f\xfa\x00\x21\xe5\x28\xdd\xf7\x8a\xdf\x5a\xea\xa2\x55\x50\x6f\xf4\x15\xc5\x99\x98\x6d\x30\x56\x3b\x6e\x43\xfc\x14\x68\x2a\x9f\xa1\x6b\xfa\xf2\xa4\x66\x80\xa9\x32\xed\xcb\x71\x75\x4a\x04\x4f\x3c\xa8\x4a\x95\xa7\x2e\xe2\x28\xd6\xa8\x13\xab\x67\xf2\x2c\xe0\x16\xf5\x1a\xaf\xee\xee\xae\xe7\x3a\x95\xef\x06\x4d\xab\xa4\xc1\x5f\x69\x3f\xa0\xce\x41\xc3\x59\xfa\x3d\xb4\xfb\x22\x4a\xaa\x9c\xc5\x1c\x7e\xf3\xcb\xf6\x28\x4a\x9f\x5c\x71\xe3\xad\x3e\xca\xa5\x9a\x53\x5f\x4e\xae\x36\x17\xf6\x4f\xe8\xdd\xd3\x50\x83\xd3\xdc\x53\xf2\xb8\xbe\xd3\x09\xce\x7b\x7e\xf1\x01\xa4\xa8\x03\x31\x38\x45\x27\x64\x56\x52\xa6\x04\x91\x50\x68\x3d\xc4\x69\xcf\xfb\x9c\x08\x70\x11\x80\x62\xdb\xd0\xd1\xcf\xc1\xb0\x27\x23\x4d\x1f\xf8\x11\xf6\xbb\x05\x66\xc3\x12\xdf\x75\xb3\x3e\xaf\x7e\x10\xe3\x57\x31\x3f\x5a\x47\x34\x52\xc2\x7e\x65\x40\x3d\xc4\xe7\x92\xfe\xd1\x3c\xd5\xf5\x96\xe6\x69\x6c\xdb\xb7\xda\x68\x38\x53\xfa\x27\x85\xfb\x4e\xc8\xf2\x17\xff\x38\xa5\xfa\x0d\xfa\xe5\xcf\x3a\xef\xfd\x31\xc6\xb0\x1d\x42\x16\x24\x71\xbf\x28\xbe\x19\xc9\xee\xd3\xb8\xa7\x30\xfb\x4d\xf8\xdf\x54\xe1\xa5\xc7\x71\x6a\xef\x6a\xdc\xbf\x02\x9e\xeb\x94\xcd\x45\xba\x9f\x92\x2f\xcd\x52\xf1\xd2\x0e\x9d\x54\x6a\x88\x38\x74\x4b\x28\x31\xe3\xd6\x85\xa2\xa6\xbf\x15\x0e\x1e\x8f\x37\xec\xe1\xec\xf5\xb0\x2f\x08\x3d\xd1\x20\x07\xaf\xd0\xdf\x2c\xd0\x64\x13\xff\xa3\x2a\x0c\xaf\xd9\x67\x23\xfd\xdb\x2b\x9f\xde\xec\x3f\x03\x00\x00\xff\xff\x6a\x9d\x7c\x9d\xd5\x0b\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3029, mode: os.FileMode(420), modTime: time.Unix(1424655055, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x5b\x6f\x1b\xbb\x11\x7e\xd7\xaf\x60\x85\x34\x90\x7c\x74\xd6\xe7\xa1\xe8\x43\x53\x17\x68\x12\x17\x11\x90\xa4\xa9\x9d\xf8\x25\x08\x10\x7a\x97\x92\xd8\xec\xcd\x24\xd7\xb6\x22\xf8\xbf\x77\x66\x48\xee\x7d\x37\x92\xec\x14\xc8\x93\xb4\xe4\x70\xf8\xcd\x7d\x86\xbb\x5d\x24\x56\x32\x15\x6c\x9a\x2b\x99\x48\x23\x6f\xc5\x2d\x8f\x65\xc4\x4d\xa6\xa6\x0f\x0f\x93\xdd\x4e\xae\x58\xf0\x4e\xa6\x6f\x45\xba\x36\x1b\x58\x81\x6f\xa1\x14\xfb\xdb\x19\x73\x84\xa2\xda\x9e\xed\x76\xc1\x07\x8e\x64\x0b\x36\x85\xff\x6f\xb3\x90\x1b\x99\xa5\x0f\x0f\xd3\x05\x83\xef\x2b\x1e\x17\xe2\xfc\x3e\x57\x42\x6b\x5a\xa6\xd5\x1a\xf7\xf9\x0b\x62\xfe\xa7\x33\x96\xca\x98\xed\x26\x8c\x29\x61\x0a\x95\xe2\xea\x04\xd1\x88\x34\xaa\x50\xf1\xfb\x51\x54\x7e\xfb\x48\x54\x15\xf7\x83\x50\xc1\x4d\x46\xa8\xb4\x1f\x93\xdb\x3c\x02\xd1\x57\x7b\xc4\xb2\xfe\x7a\x98\x9e\x64\x2a\x93\x22\x19\xb4\x1d\x6e\x8e\x22\x5a\xc5\x19\x37\x7f\xfd\xcb\xac\x0f\xd9\xdc\x9b\xd0\x5e\x41\x5f\xe7\xf7\x61\x5c\x68\x70\xa5\x72\xf9\x50\xbb\x8e\xe0\xb5\x9b\x8f\xc5\xeb\xaf\x68\xe1\xf5\xcb\x87\xe1\x2d\x62\x23\xf3\x58\xfc\x7b\x35\x00\xb9\xdc\x7f\x2c\xea\xda\x45\x07\x21\x3c\x4f\x87\xd4\x89\x3b\xc7\xc5\x87\xe5\xb9\x37\x0c\xfa\xad\xb2\x4d\x58\x68\x93\x25\xab\x4c\x25\xdc\x34\x12\x4e\x0f\xc6\x7f\x11\xd5\x0f\xb4\x87\x0b\x96\x90\x3e\xb5\x51\x32\x5d\x0f\xe9\xd2\xde\xab\xf7\x03\x5f\x81\xd6\xb1\x0c\xfb\xd2\xe3\x7b\x21\x22\x7d\x29\xbf\x0b\x5a\x01\x8c\x8a\x27\xef\x79\x02\x9f\xb8\x88\xb2\xc8\x14\x2d\x1b\x8b\xb4\x1f\xd1\xbc\x1b\xb1\x4b\x23\x12\x3d\x18\xb2\xb4\xfb\x23\xbb\xb5\x70\xf8\x40\x75\x9c\x0f\x0d\xc9\x31\x40\x6e\xf7\x28\x40\x25\xe7\x83\x00\x7d\x4a\xe5\x4d\x21\x46\x30\xd5\x08\x0e\xf6\xef\x5f\x3c\xb6\x72\x95\xe5\x42\x99\x6d\x8f\xa7\x2e\xf5\x07\x5f\xe6\xf1\x04\x68\x27\x8f\x01\x6a\x6f\xf5\x67\x01\x92\xd4\x45\x5d\xea\x57\x14\xb6\x36\xce\xa0\x14\x35\x79\xf4\xc7\x74\x2f\x9b\x2c\x35\x1c\xb0\xb6\x18\xb4\xe2\xab\x79\xb2\x25\xe4\xb5\x4c\xa3\x12\xf4\xb4\x8f\x82\xb8\x21\x99\xa8\x29\x00\x5c\x50\xa4\x06\xc9\x82\x25\xec\xdc\x5f\x71\xc0\x10\xa2\xd9\x0a\x23\xe3\xe0\x32\x8f\xa5\x79\xb9\xb5\x02\x5a\xdb\x21\x7d\x9d\xf6\x73\xdf\xea\x17\x6b\xdd\x57\x59\x1c\x8b\x10\xed\x5b\xa6\x22\x0a\xed\x58\x8b\xbe\x2b\x15\xbf\xab\xe4\xab\x6d\xea\xef\xb8\xab\x21\x44\x26\xb7\x5c\xb1\xc6\x1e\x7d\x7e\xdc\xe6\xa2\x7d\xe8\xca\xb9\xdd\x79\x2c\x12\x00\x87\x1c\x56\x45\x1a\xce\x1a\x44\x98\x88\xc8\xc3\x5e\x6d\x64\x1c\x75\xbd\xaf\xda\xb2\x57\xcc\xd9\x09\x38\x5b\xa6\x74\xe0\xd8\x03\x15\x79\x62\xd3\x77\xda\xfe\xc6\x2c\x13\x80\x58\xfa\x2c\xb8\x30\xf8\xec\x04\xbc\xa3\x29\x0f\xe2\xfc\xe3\x45\x6b\xed\xef\xac\xa5\x8f\x16\xc1\x6f\xbf\x39\x10\x60\x52\x60\xe8\x20\x77\xdc\xb3\xda\x68\x78\x3d\xfa\x81\xdd\x00\x3f\xbc\x05\xe4\xe8\x87\xb7\xa8\x8a\x85\x8f\xe1\x52\x0d\x35\x8a\xa6\x26\xc9\x0f\x6a\x0e\x30\x07\x3c\x2e\x07\xd4\x02\x16\xc5\xd7\xc1\x3f\xa3\xe8\x9c\xb4\x38\x73\xca\x5c\xa6\xa4\x2b\xd4\xf1\xac\xbc\x6a\xb4\xb4\xd5\x8d\x62\x33\xc7\x08\x94\xb9\xbb\x99\x14\x0f\x00\xe0\x13\x54\x5f\xe2\xb3\xf2\x0d\x7a\x4e\x53\xce\x31\x6f\xe9\x26\xa8\x1e\x79\x7b\xc1\x58\xba\x25\xb8\xe7\x9c\xec\xd8\x70\xf0\x33\xc6\xf3\x1c\xc2\xa2\x09\x44\x2d\x18\xd9\xc8\x1e\xb0\x21\x45\xac\x8f\x96\x6a\x44\x83\x3d\x82\x0d\x8a\xd6\x12\xce\xe9\xfa\x38\x09\xc7\x51\x95\x29\x0e\xa5\x67\x95\x1b\x37\x12\x6a\x2b\x38\xeb\x59\xb0\x1e\x96\x8f\xf6\x86\x1a\xee\xc7\xaa\xeb\x11\xda\xea\x62\xf1\x19\xb5\xac\x08\x39\x0f\xbf\xf1\xb5\xb0\x0d\x08\xfd\x85\xdd\xc9\xe9\x29\xfb\xb8\x91\x9a\xad\x64\x2c\xd8\x1d\xd7\x6c\x2d\x40\x7d\x20\x77\xc4\xae\xb7\xcc\x6c\x04\xd3\x77\x7c\xbd\x86\x24\x62\xb2\x2c\x0e\x90\xfe\x3c\x82\x14\x92\xae\x61\xd3\x9f\x4b\xe4\x7a\x63\x18\xe4\xbf\x5b\x01\xc9\xd6\x10\xab\x8d\x48\xd9\x36\x2b\x40\xa0\xdf\x55\x91\x36\x38\xf9\x2b\x58\x98\x25\x09\x4f\xa3\xc9\x44\x26\x79\xa6\x0c\x9b\x81\xd0\xd3\x54\x98\xd3\x8d\x31\xf9\x14\x3f\xd6\xd2\x6c\x8a\xeb\x00\x08\x4f\x43\xae\x0b\x1e\xff\x57\x26\xa7\xeb\xec\x77\xc7\x6a\x1f\x9a\x53\x9b\x6c\xf6\x22\x4d\x64\x14\xc5\xe2\x0e\xca\x1a\x41\x40\x51\xf6\x3b\xe8\x9b\x9d\xe9\x84\xec\xa6\x78\x0a\x9a\x7e\xf6\x4d\x6c\x17\xec\x19\x85\x2b\xfa\x57\xb0\x24\x31\xb5\x73\x4e\xdc\xa6\x52\x03\x9a\x83\x7a\xb4\x62\xd3\x3f\xdf\x4c\x1d\xb9\x23\xb1\x26\x9c\x93\x99\xd0\xca\x31\xd7\xda\x36\x8e\xd4\x43\x6a\xd0\x20\x39\xbc\x66\x3c\x8e\x49\xc7\xd7\x59\x91\x46\x2c\xb7\xbb\x58\x65\x70\x11\x8e\xbe\x29\x40\xd3\xb5\xf3\x0c\x6b\x15\xe5\x56\xe4\x6d\xb6\xb9\x0c\x81\x05\x59\x1c\x62\x0a\x14\xc0\xb2\x6b\x0a\xa5\x88\xad\x54\x96\x30\xce\x50\x21\xc1\x85\x80\x6e\x52\x9b\x09\x1c\x10\xfd\x88\x60\xe2\x28\x42\xe3\xea\x92\xd5\x83\x6d\x78\xb5\xaf\x39\xaf\x85\x0e\x95\xcc\x6d\x5e\xb7\x82\x35\x96\xbc\xd8\x14\x00\x1f\x5c\x51\x75\xa8\xab\xa2\x5f\xa9\xc7\x7a\xf1\x4b\x88\x6d\x87\x0e\x94\x60\x36\x0c\x83\x1d\xf4\x02\xda\xf0\xc6\x81\x2f\x70\x47\x22\x59\x30\x69\x18\x40\x2f\x12\x58\x35\x1b\x6e\xd0\x17\x61\xa4\xbc\x47\xaf\x4e\xd7\x9a\x49\xfc\xa2\x06\x82\x33\x97\x0a\xf8\x75\x2c\x66\xd0\x09\x94\x8d\xed\x85\xd0\x30\x89\x62\x2f\x21\xd4\x8a\x87\x02\x61\xa0\xca\x35\x1d\xb6\x69\x5a\xe3\x45\x77\x12\xac\x53\x80\x5e\x41\x39\x9c\x62\x25\x11\x66\x93\x45\x0c\x75\xae\x27\xd8\x9f\x30\x8c\xea\x0b\x11\x0a\x28\xce\xca\x09\x7b\xd2\xa7\xe0\x79\x5d\xd2\x99\x62\x27\x75\xbb\x2c\x98\xca\x0a\x08\xac\x93\xca\x91\x61\xb2\x30\xe1\x46\x44\x17\xb8\xd1\x83\xde\xf6\xd3\x1a\xfd\x33\x15\x77\xb3\xd6\xf6\xdc\xb7\x17\xc1\x1b\xae\xff\x53\x08\xb5\xf5\xb6\xbc\xa1\x23\x2a\xf8\x74\xf1\x36\xa0\x0d\x97\xb2\xac\x4d\xfa\xac\x5f\xef\x54\x7a\x7a\x94\x9e\xee\x64\x59\xbb\x12\x72\x1a\xa4\xc6\x77\x42\xad\x45\x57\x55\x01\x1a\xbb\xe3\x2d\xb3\x32\x86\x81\x9c\x47\x97\x60\xd8\x58\x50\xf5\x9e\xdd\x68\x37\x89\xd1\xbb\x96\x53\x9b\x1b\x9c\xf5\xbc\xaa\xad\xcc\x4d\x0b\x40\xf7\x13\x50\xd8\x5b\xad\x7e\x0e\xc2\xf3\x06\x18\x09\xf5\x33\x10\x05\x96\xf5\x1e\x68\xca\x18\xad\xe1\x6a\x0c\x34\x4f\x6f\xc1\x6a\xae\xe8\xb1\xe2\xf0\xe8\xf1\xff\x34\x6f\x1b\xe2\x80\x89\x1f\x01\xf6\x49\x6d\xdf\x81\xdb\xb5\xff\xc1\x50\x5d\x6f\x56\xe5\x01\x8b\xfb\x65\x16\x79\x3f\x68\xf4\xe0\x96\x07\x78\x0e\x26\x63\xe5\xff\x00\x12\x3c\xb0\x60\xcf\xbb\x82\x75\x84\xda\xab\x01\xc7\x81\xe3\xbd\xb8\x03\x08\x5a\xd0\xea\x6c\xda\x7c\x8b\x99\xf6\xcd\x1c\x53\x9a\x85\x48\xb4\x07\x46\x56\xa8\xd8\x0f\x29\xbe\x83\xcf\x4f\x8d\xde\x1d\xea\x0a\x73\x3a\xaa\x85\x53\xda\x18\x18\xb1\x3d\x04\x1a\xe8\x12\x9e\x85\xbe\x16\x50\x33\x51\x56\x06\x46\x23\x70\x3b\xd9\x92\xda\xd3\xcc\xb4\x55\x5f\x4b\xc1\x65\xbe\xed\x7d\xd2\x18\x2b\x4b\x15\x94\xaa\x2c\xf5\xbb\x1b\xcc\xf6\xee\x11\xb2\x7c\x6e\xc4\xef\x55\x62\x80\xed\x5a\xc2\xdf\xed\x11\x45\xc9\xbb\x15\x56\xf7\x99\x13\xb2\x0c\xe2\x39\xa3\x72\x28\x95\x00\x45\xf6\xbc\x47\xf9\xcd\xcb\xf2\x6d\x74\x70\xe4\x04\xf4\x4f\x37\xdc\x55\x26\xa6\x91\x65\x6c\xe6\xae\x4d\xdb\x08\xe1\x11\x33\xf5\xe8\x34\x5d\xce\xd1\x78\xc9\x7e\x03\x6a\xf7\xa9\xe4\xcc\x36\x3a\xcd\x71\x74\x80\x12\xee\xe9\x51\x05\xb4\x16\xd5\xb3\x8a\xae\xdb\xac\x1b\x5b\xde\x8a\x5d\x4f\x1b\x7c\xcc\x1e\xb0\x97\x7f\x0a\x20\x01\x2d\x00\xe8\xee\x76\x9d\x29\x6c\x24\x2a\x87\x6a\xdf\xd3\x85\xce\xe7\x2f\x4f\x1f\x3c\x8c\x9e\xd4\x70\x1b\x1f\xe2\xc9\xbf\x4a\x53\x34\x02\x87\xc8\xce\xce\xd8\x1f\x63\xfe\xe6\x4f\x8c\x38\xdb\x7e\xae\xd5\x2a\x18\xaf\xc5\x8a\x03\xdc\x2b\x3b\x0d\x45\x62\x75\xe5\xc7\xa8\xfe\x17\xca\x26\xfd\xc8\x3b\x24\x19\xbd\x12\xed\xf9\x73\x52\x83\xbf\x60\xce\xfe\x51\xca\x3b\xe0\xc4\x9e\xb4\xe6\xf1\x03\xca\xf2\xc2\xd5\x65\xaf\x5c\x69\xfc\x89\x62\x2c\x8c\x9a\x0f\x00\xf5\x38\xba\x44\x1e\xbf\x6c\x30\x55\x8f\xe3\x58\xa0\x9a\x69\x61\x40\xbc\x43\x43\xed\x87\x22\xf7\x04\xd8\x71\x4f\xbf\xdd\x57\xdf\xd6\x23\x7e\xf9\xfb\xbf\x00\x00\x00\xff\xff\x5c\xfe\x14\x13\x7d\x20\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8317, mode: os.FileMode(420), modTime: time.Unix(1424657209, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

