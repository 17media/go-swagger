package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x3f\x4f\xc3\x30\x10\xc5\xf7\x7c\x8a\x53\x54\x24\x90\x20\xdd\x2b\x31\x51\x06\x24\x40\x48\x74\x60\xac\x49\x2e\x89\xa9\xff\x04\xfb\xd2\x12\x59\xfe\xee\xd8\x4e\xd2\x3f\x2c\x6c\xb1\xfd\xbb\x77\xf7\xde\xc5\xb9\x0a\x6b\xae\x10\x72\xa9\x2b\x14\x9d\xd1\x1d\x1a\x1a\x72\xef\x33\xe7\x78\x0d\xc5\x5a\x97\xef\x64\xb8\x6a\xbc\x77\xee\xf2\x84\xaa\x4a\x58\xf1\x36\x55\xbd\x32\x89\xde\x43\xe4\x18\xb1\xcd\xd0\xc5\xd3\xf6\xcb\x6a\xb5\xca\x23\xc6\x0c\x93\x23\x93\x8f\xe2\x1f\x2f\xcf\x53\xcd\x8f\x14\x89\x39\xde\x4c\xf2\xf9\x36\x9b\x1b\x65\x1d\x2b\x77\xac\x41\x48\x52\xe9\x33\xde\x2e\x97\xb0\x69\xb9\x85\x9a\x0b\x84\x03\xb3\xd0\xa0\x42\xc3\x08\x2b\xf8\x1c\x80\x5a\x04\x7b\x60\x4d\x83\x06\x48\x6b\x51\x44\xfe\xb1\xe2\x14\x3c\x84\xc7\xb9\x4e\xf2\xa6\x25\x08\xee\xf7\x08\x75\x4f\x49\xaa\x45\x05\x83\xee\xc1\xe0\x9d\xe9\xd5\x85\xd2\xdc\x02\x4a\x2d\x25\x53\x55\x36\x85\xf5\x24\x3b\x6d\xc8\x7a\xcf\xc7\x0f\xb8\xce\x20\x8c\x6b\x98\x0a\x63\x17\x6b\xac\x59\x2f\xe8\x08\x39\xd7\x85\x28\xa9\x86\xfc\xea\x3b\x87\x22\x98\x89\xf0\x68\xf6\x54\xb6\xd8\xe1\x70\x0b\x8b\x3d\x13\x3d\xc2\xea\xfe\xac\x89\x73\xf1\x2d\x05\x0e\xe7\x4a\x23\x7b\x21\x77\x73\x4a\xf1\x9f\xb5\xce\x20\x85\xed\xc5\xa4\x1f\x04\xb3\x76\x5a\x92\x25\xd3\x97\x04\x2e\x3b\x5a\x9a\x36\xcf\xd1\xa6\x4a\x42\xd9\x89\x98\xcb\x9f\xbf\x29\x99\x9b\x27\xf0\xd9\x6f\x00\x00\x00\xff\xff\x35\x7f\x74\xf7\x75\x02\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 629, mode: os.FileMode(420), modTime: time.Unix(1431834998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdd\x6e\xdb\x36\x14\xbe\xf7\x53\x9c\x09\x19\x10\xaf\x89\xd2\x01\xc3\x2e\xd6\x65\x40\xd1\x66\x68\x80\x2e\x0d\x9a\xae\x37\xc3\x80\x32\xf2\x91\xcc\x56\x22\x15\x92\x4a\xe2\x09\x7a\xf7\x1d\x92\xa2\x2c\xc9\xb2\x13\x27\x18\xb0\x2b\x89\xe7\x8f\x1f\xcf\xcf\x47\xd6\xf5\x02\x53\x2e\x10\xa2\x52\xf1\x82\x1b\x7e\x8b\xb7\x2c\xe7\x0b\x66\xa4\x8a\x9a\x66\x56\xd7\x3c\x85\xf8\x23\xde\x54\x5c\xe1\x82\x04\xb4\x44\xa5\xe0\x97\x53\x68\xed\xb8\x14\x9d\xfe\xb0\xae\xe3\x4b\x66\x96\x4d\x73\x04\x11\xfd\xbf\x97\x89\x33\x68\x9a\xe8\x08\x68\xfd\x99\xe5\x15\x9e\xdd\x97\x0a\xb5\x76\xe2\xf9\x2b\x17\xed\xbb\x53\x10\x3c\x87\x7a\x06\xa0\xd0\x54\x4a\x58\xe9\xcc\xee\x8e\x62\xd1\xa1\xf8\x83\x8b\xf7\x28\x32\x1b\x7e\x1a\x46\x67\xb0\x37\x0e\x27\xed\xc5\xdf\x0f\x17\xbb\x7f\x00\x57\x30\x78\x22\xae\x75\xfc\xbd\x70\xd1\x4e\x06\x95\xd8\x86\xaa\x55\x3f\x01\xd3\x17\xef\xe2\x83\x7f\xd9\xb7\x86\xbc\xa8\x8a\x1d\x15\xb4\xea\x9d\x98\xd2\x5c\x32\xf3\xf3\x4f\x87\x93\xfd\x14\x0a\xe9\x37\x71\xab\xb3\xfb\x24\xaf\x34\x35\x76\x27\xde\xb7\xba\x3b\x11\x7b\xf5\x73\x11\x87\x4d\x46\x88\x83\x78\x3f\xc4\x55\x6e\x78\x99\xe3\x87\x74\x2b\xe8\xce\xe2\xb9\xb8\x7b\x5b\xed\x85\xf1\x4c\x6c\x4f\xa9\xd5\x3d\x6d\x52\x7c\xd4\x47\x03\x09\xdf\x40\x81\x49\xa5\x8d\x2c\x52\xa9\x0a\x66\x06\x2c\x38\x09\xf3\x77\x67\xf7\x40\x0a\xad\xc0\x1b\xba\xa5\x36\x8a\x8b\x6c\x5b\x42\xfd\xce\xfa\xd1\xf8\x03\x6e\x9d\xf3\x64\x8a\xb6\x2f\x10\x17\xfa\x8a\xff\x83\x4e\x42\x20\x15\x2b\x2e\x58\x41\x4b\x2b\xb4\xc7\xe1\xc2\xd6\x37\x47\x31\x0d\x69\xbe\x39\xbd\xe7\x06\x0b\xbd\x63\x7c\x9d\xfe\xa1\xea\x8d\x90\x84\xa1\x6d\x63\xef\x3b\x9e\xbb\x21\xb5\xfa\x27\x41\xea\x62\xef\x05\xe9\x4f\xc1\x6f\x2a\xdc\x89\xaa\x67\xf2\xdf\xde\x99\xff\x8b\x39\xb3\x40\xae\xa8\xef\x73\xbc\x4a\x96\x58\xb0\x2b\xdb\xaf\x40\xaa\x93\x13\xd0\x4e\x0e\xda\x29\x26\x77\x9c\xd1\x58\x00\xb7\xd8\x5f\xbe\xa2\xef\xaf\xb0\xb5\x5d\x49\xfd\xe2\x05\x01\xa9\x6b\xc5\x44\x86\x10\x87\x1a\x00\x05\xa6\xdf\x32\x67\xc6\xbd\x74\x64\x89\xca\xac\xd6\x13\x03\x71\x8f\x0f\xdc\x5f\xae\xd1\xe3\x13\xd2\x6c\x62\xbc\x6c\x23\xf8\x7e\x79\xe6\x7e\x3e\x3f\xaf\x17\x0b\x6e\x13\xcf\xf2\x75\x90\xee\xe0\xb4\xa5\x93\xd2\x33\xa0\x69\x6c\x12\x28\x0b\x6e\x6a\xe7\x70\x3c\x54\x5a\xc1\x8f\xd6\xc2\x25\x02\xe0\x51\x48\x00\x7a\x67\x26\x30\x5b\x13\x0c\xbf\x0d\x77\x1b\x15\x5d\x2a\x3d\x3e\xc7\x85\x34\xaf\xf3\x5c\xde\xd1\xdb\x30\x9a\x0a\x19\x6d\xb4\xdd\x7c\x92\xa2\xc7\x94\x27\xaf\xbf\x62\x32\x24\x69\x2a\x96\x27\x70\xf0\x4a\x0b\xf5\x2d\x33\xec\xd3\xaa\xc4\xc1\x08\x4c\xe1\xb0\x12\x1b\x0a\x0f\x9f\x4a\xc2\x9b\xb9\xed\x6a\x7b\xae\x2f\xc3\xe3\xba\x69\x86\xf5\xd8\x78\x73\x87\xd6\xa0\x62\x80\xf7\x7d\xe3\x0e\xe5\x2f\x11\x7a\x72\x0d\x23\x4c\x5f\x59\x13\x41\xa4\x30\x8c\x70\x8e\xdc\x47\x37\xc7\x94\x1f\x99\xe2\xfd\x07\x97\xd1\xa1\xef\xb8\x04\xd6\x79\x5c\xb0\x92\x25\xdf\x18\x4d\x86\x63\x19\xf7\x4b\x42\x5b\xa9\x4f\x4b\xae\x21\xe5\x34\x55\x77\x4c\x43\x86\x84\x8c\x82\x2e\xe0\x7a\x05\x66\x49\xa3\x76\xc7\xb2\x0c\x15\x18\x29\xf3\xd8\xda\x9f\xd9\xae\x12\x19\x29\x83\x5f\xc1\xb3\xa5\x01\xca\xfa\x2d\x42\x5a\x19\x17\x6a\x89\x02\x56\xb2\xa2\x52\x1d\xab\x4a\x0c\x22\x85\x2d\x20\x91\x45\xc1\xc4\x62\x36\xe3\x45\x29\x95\x81\x43\x2a\x6d\x94\x71\xb3\xac\xae\x63\xd2\x9d\x24\x4c\x57\x2c\xff\xca\x8b\x93\x4c\x1e\xb7\xde\x27\xbe\xb9\xa3\xc7\x98\xd2\x15\x9f\x16\xe6\x51\xa6\x6b\x2e\x8e\x66\x8e\x33\x5a\x1a\x79\x8b\x29\xa3\x87\xd5\xb9\x03\xa8\x6d\x56\xa9\x51\x84\x49\x21\xfa\xfe\x26\x4c\x6c\xc8\xf0\xda\xed\xe0\x1b\xae\x8e\xe0\xe0\xd6\xb6\xb6\x6d\xf3\xb8\xe7\x6f\x75\x76\x5c\x6b\xe8\x47\xf2\xb6\x83\x70\x73\x57\x9d\x30\x0c\xe1\xb6\x40\xed\x13\x4f\x65\x7c\x57\x51\xf6\xde\xe4\x4c\xeb\x96\xfc\xd2\x4a\x24\x60\xe9\xe2\x23\x26\x48\xad\xac\xbc\x1c\x7e\x20\x51\xcf\x6e\x0e\xe3\x09\x03\x9f\x29\xf2\xcb\x38\xfd\xae\xe6\x9e\x42\xdc\xac\xf9\xb9\x79\xc7\xf4\xe7\x2e\x45\x9e\x12\x6f\x99\xa2\xea\x6a\xf8\xeb\x6f\x67\x3c\x48\x5b\xcb\xca\x1c\x03\x05\x6f\x89\x31\x60\x82\x21\xea\x38\x1c\x78\x83\xe4\xb7\xf3\x02\x38\x40\xa7\xc0\xca\x92\x72\x78\x48\x8b\x23\x6b\x32\x77\xb4\x3a\x2c\x94\xff\xf3\x10\x2c\xc9\x92\xad\xe5\xd4\x97\x5d\x9c\x3e\x93\xda\xd1\x93\x9a\x1b\x5c\xe3\x3f\xb3\x1a\xeb\x15\xc7\xf1\x66\xfc\xd6\x9d\x70\x39\x82\x82\x83\x24\xa4\xdf\xb5\x43\x57\x0c\xe8\x5f\x59\x83\xa4\x6d\x49\xd9\xae\x1a\xaf\x37\xb1\x35\x7e\x30\x7d\xbb\x8b\xfe\xe0\x4d\xb5\x79\xca\x21\xdf\xfc\x1b\x00\x00\xff\xff\x6d\xdc\x69\x47\xcf\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4303, mode: os.FileMode(420), modTime: time.Unix(1431834998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_configureapi_gotmpl_swp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4d\x6f\xe4\x44\x13\xee\x7d\xa5\x37\xa0\x85\x05\x44\x90\x38\x21\x15\xc3\x22\x66\xa2\xc4\x0e\xcb\xc2\x22\xa4\x1c\x42\x58\x44\x84\xb2\x19\x6d\x58\x50\x10\x1c\x3a\x76\xd9\xd3\x1b\xdb\x6d\xba\xdb\xc9\x86\x91\xe1\x06\x57\x24\xe0\xc4\x81\x33\x07\x38\x70\xe1\x80\xe0\x0f\xf0\x17\xb8\x21\x0e\x5c\x16\x69\xf9\x03\x54\xfb\x63\x9c\x0c\x09\xc9\x12\xc4\xf2\xd1\x8f\xf4\x8c\xc7\xdd\x55\xe5\xaa\xa7\xdc\xad\x8c\xd2\x5b\x8b\xaf\xae\xae\xc1\x25\xef\x22\x23\x3c\xc0\xd8\x4d\xb6\x79\xed\xcb\x72\x96\x9d\x9d\x65\x4c\xec\xf0\x8c\x9d\x00\x5c\x05\x23\x81\x0b\x21\x26\xc9\xef\xda\xbd\x63\x03\xfa\xb1\xf4\xb5\x0a\xfc\x58\x98\x51\xb1\xe5\x05\x32\xf5\x03\xae\x0b\x9e\x5c\x17\x29\xcd\x2d\xe8\x5d\x1e\xc7\xa8\xfc\x18\x33\x54\xdc\x48\xe5\x1b\x4c\xf3\x84\x1b\xd4\xbe\x46\xb5\x43\x53\x81\xcc\x22\x11\x17\x0a\x79\x2e\xbc\x58\x1a\x9a\x3e\x49\x9a\x0e\x0e\xff\x5d\x14\x26\x5a\x78\xf6\x1c\x7b\xea\xc2\x93\x8b\xf6\xf6\xb1\xde\xa3\x30\xfb\xe0\xb5\x3b\x9d\x95\x83\x83\x83\x83\x83\x83\x83\x83\x83\x83\xc3\x5f\x08\x93\x9f\x61\xef\xd2\xf5\x7f\xcd\xbd\xdf\x5c\xcf\x4c\x5d\x1d\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\x1c\xfe\xb9\xe0\x21\x63\x5f\xff\x9f\xb1\x0f\x67\x58\xf5\xff\xff\xf6\xf7\xff\x2f\xf7\x33\x76\x8b\xf8\x13\xf1\x5b\xe2\x37\xc4\x0f\x88\xef\x11\x97\x89\x97\x88\x4f\x13\x2f\x12\x7f\xbe\x8f\xb1\x9b\xc4\xaf\x88\x9f\x10\x77\x88\x05\xf1\x61\xe2\xe7\xe7\x18\xdb\x24\xae\x11\x57\x88\x3f\xde\xcb\x58\x49\x1c\x10\x1f\x21\xce\x12\x6f\xdd\xc3\xd8\xf7\xc4\xf7\x89\xcf\x10\x2f\x10\x1f\x22\x7e\x77\x96\xb1\x37\x89\x9b\xc4\x75\xe2\x65\xe2\x0f\x77\x53\xce\xc4\x37\x88\x8b\x77\x31\xf6\x05\xe5\xfd\x19\xf1\x53\xe2\xc7\x33\x75\x1d\x1f\xcd\xdc\x49\x45\x1d\x1c\x1c\x1c\x1c\xfe\x20\x4a\x06\x30\x1e\x63\x16\x96\x07\xbf\x95\x03\xfa\x00\x50\x68\x0a\x95\xd1\xb8\x88\xc0\xdb\x28\x82\x00\xb5\x5e\x93\x21\x26\x65\x39\x1e\xb7\x03\xaf\xa3\x92\x65\x39\xdf\x7a\xa3\x52\x52\x69\xef\x8a\x34\xab\x69\x9e\x60\x8a\x99\xc1\xb0\xdf\x93\xb9\x3d\x62\x26\xa4\x8d\xe6\x5d\xe1\x29\x96\x25\x8c\xb8\x86\x4c\x1a\xd8\x43\x03\x5b\x88\x19\x88\xce\xa3\x37\xa8\x13\x4a\x34\x59\xda\xc3\x67\xe4\xb6\x92\x70\xad\x6b\xdf\x97\x78\x16\x26\xa8\x60\x09\x0e\x1d\x7f\xb1\xc8\x82\x7e\x64\x3f\xea\xdc\x87\x5c\xf1\x54\x97\x65\x5e\x5d\xa7\x7c\xea\xc9\x26\xfd\xca\x9e\x82\x80\xb7\x5c\x98\x91\x54\xe2\x6d\x0c\x3b\xff\x49\x95\x75\xd8\xce\x84\x42\x2b\x91\x05\x22\xe7\x09\xcc\x51\xf8\x61\x7b\x67\x4d\x2b\x8f\x01\xf4\x0f\xd7\xd1\x8e\x5d\xad\x84\xd6\x2b\xd2\x0a\x70\x63\x7d\xeb\x3a\x06\xa6\x2c\xe7\x26\x0f\x9b\x72\x3a\x28\xf6\x00\xc6\x7f\xa7\x96\x29\x9e\xc5\x08\xde\x7a\xeb\xad\xdb\x22\x87\x3c\xd8\xe6\xf1\xf1\xed\x9c\xd8\x1d\x6e\x74\x7c\x6f\x8f\x0a\xf0\xef\x68\xf4\xa1\xeb\x75\x7f\xef\x33\x91\xcc\xc3\x11\x3d\x25\xe9\x61\x1b\xf7\x80\x53\x41\xfb\xda\x1a\x29\x99\xda\xdb\x0d\x59\xa8\xe0\x44\x7d\xfe\x6d\x0f\xad\x46\xd4\xc0\xaa\x33\x46\x6e\x93\x8f\x36\x24\x4e\x4c\x7a\x4c\x09\xd5\x64\x77\xa0\x9c\x5a\x9e\x55\xbd\x3c\x5c\x7d\x19\xf7\x6c\xac\xdb\x2b\x6c\x8b\x6b\x11\xd4\x65\x9d\x32\xf7\x42\xd3\x8b\x58\xa7\x3e\x0f\x39\x99\x9c\xb4\x8e\xba\x80\xe7\x6d\x22\x93\xfc\x27\xcb\x61\x03\x83\x42\x09\xb3\xf7\x02\x46\x22\x13\xcd\xba\x98\xda\x73\xbb\xef\x93\x92\x8f\xa8\xb6\xeb\x5c\xae\x64\x58\x04\x94\xf1\x29\x36\xd3\x61\x1b\x63\x09\x9a\x23\xc1\x5e\x3b\xd4\x2d\xb6\x5d\x10\xd2\x7b\x8d\x4a\x40\x35\x0f\x21\x37\x1c\x04\x85\x56\x11\x0f\x70\x4c\xef\x7c\x95\x68\x23\x44\x53\x72\x13\x63\xb2\xfe\x27\x15\x54\xdb\xc2\x31\x89\xd0\xc4\xb4\x7d\x7f\xf0\x27\xe8\x15\x90\xf0\x45\x7a\x3a\xbd\x56\xda\x18\x9d\x5e\xed\x50\xa7\x97\xb2\x7a\x5d\x45\x1e\x5a\xbd\x0c\x57\x31\x3d\xe7\x38\xc5\x9a\x28\xb7\xa1\xd8\xbe\x54\x0e\x57\xac\x79\xdd\x37\xec\x71\xee\xcb\xd5\x13\x97\x5a\x91\xba\x31\x32\xf2\x7d\x98\x9c\xf5\x06\x33\x42\xeb\x05\x23\x54\xc8\x6c\x35\xdd\x1c\xad\xcf\xbe\x9d\x9a\x9b\xde\x67\x97\xf3\xbc\x59\x4b\xc3\x55\xbb\x22\x18\x45\x7c\x65\x24\x34\x44\x22\x41\xa0\xab\xe6\x11\x45\x96\x80\xa1\x30\x1e\xac\x67\x01\x8d\x1a\xc0\x1b\x42\x1b\x6d\xbf\xed\xca\xec\x09\xdb\x0a\x90\x3b\xa8\x76\xe9\x45\x33\x98\xd1\x8f\xd7\xa9\x1d\xaf\x56\xea\x3c\xed\x61\xf3\x70\x7e\x87\x27\x05\xc2\x73\x4b\x95\x52\x52\x99\x4a\x38\x3b\x47\x8d\x1e\x8f\xc1\xee\xd4\x26\x82\xde\xe3\x6f\xf5\x1a\xdb\x72\xfa\x0f\x9e\x46\x78\x5a\x95\xbc\x48\xcc\xbe\x28\xfb\x7d\x3d\x32\x26\xeb\xde\x71\xe7\xe8\x6b\x5d\x7b\x4c\x54\x61\xa0\xcf\x58\x5e\x2b\x04\x29\x17\x19\xfb\x35\x00\x00\xff\xff\xae\xe5\x14\xb1\x00\x30\x00\x00")

func templates_server_configureapi_gotmpl_swp_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_configureapi_gotmpl_swp,
		"templates/server/.configureapi.gotmpl.swp",
	)
}

func templates_server_configureapi_gotmpl_swp() (*asset, error) {
	bytes, err := templates_server_configureapi_gotmpl_swp_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/.configureapi.gotmpl.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1431896308, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_main_gotmpl_swp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9a\xbd\x6f\x1c\x45\x18\xc6\x27\x50\x80\x0d\x01\x14\x57\x41\x29\x5e\x2f\x09\x3a\x0b\xdf\xac\x81\x48\x20\x23\x17\x96\x10\xf8\x10\xfe\x90\x2f\x26\x42\x02\xa4\xf1\xde\xdc\xde\xc4\x73\x3b\xcb\xce\xac\x0f\xeb\xb4\x81\x82\x3f\x03\x0a\xa0\x00\x89\x86\x96\x86\x82\x1a\x44\x4f\x01\x42\x34\x84\x82\x02\x1a\x0a\x0a\x9e\xd9\xdb\x3b\x5f\x12\x01\xa9\x12\x21\xcd\x23\xfd\xbc\x3b\x1f\xfb\xcc\x3b\xef\xbe\x6b\xc9\xf2\x1c\xae\xbd\xd6\xd9\xa6\xe7\xf8\x65\x06\x3d\xc6\xd8\xf9\x33\xaf\x1f\x7c\x59\x2d\xb1\xc5\x25\xc6\xd4\xb1\xc8\xd8\x1d\x48\x14\xc9\x40\xc9\x76\x4f\x6a\xfd\xaf\xf3\xae\x7b\xc3\x38\x35\xb1\x2d\x92\x38\x55\x6e\x50\x1e\xf2\xc4\x0c\xe3\x44\xd8\x52\xe8\x6b\x6a\x88\xb1\xb6\x1d\x89\x34\x95\x45\x9c\xca\x4c\x16\xc2\x99\x22\x76\x72\x98\x6b\xe1\xa4\x8d\xad\x2c\x8e\x31\x34\x14\x2a\xe3\xa9\x71\xe8\xbe\x93\xf0\x82\x82\x82\x4a\xd7\x6f\x3f\x7f\x96\x3d\xfb\xcc\xd3\x6b\xbe\xf9\x44\xb4\x4c\x4b\xe7\x0e\xee\x75\x54\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x41\x77\x51\x2e\x3f\xc3\xde\xc5\xf5\xbe\xa6\x7d\xb9\xb9\x9e\xb9\xe5\x1a\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\x14\xf4\xff\x95\xe8\x31\xf6\xd7\x02\x63\xbf\x2c\xb2\xfa\xff\xff\xd3\xbf\xff\xff\x78\x94\xb1\xdf\xc1\x0d\xf0\x13\xf8\x1e\x7c\x0b\xbe\x01\x9f\x80\x8f\x41\x09\x8e\xc0\x93\xe0\x02\x78\x1c\x9c\xf7\xcf\x3c\xc2\xd8\xfb\xe0\x1c\xb8\x7e\x96\xb1\x0a\x74\xc0\x16\x58\x07\x8b\xe0\xcf\x87\x19\xfb\x19\xfc\x08\x7e\x00\x5f\x83\x2f\xc0\x47\xe0\x43\xf0\x01\x78\x0f\x64\xe0\x2a\xe8\x82\x7d\x70\x01\x3c\x08\x1e\x00\xdf\x3d\xc4\xd8\x57\xe0\x73\xf0\x19\xf8\x14\xbc\x05\xde\x04\xf7\x83\xdf\xb0\xa7\x5f\x17\x27\x7b\xbb\xb1\x78\x2f\xb3\x1c\x14\x14\x14\x14\x14\x14\x14\x14\x74\xb7\x55\x31\x22\x0f\x91\x36\x29\x7f\x49\x38\xa1\x75\xd6\x92\x45\xb1\x82\x4e\xd5\x27\xdc\xd1\xfa\x06\x0d\x9c\xcb\x79\xd7\x1f\x33\x6d\x69\x65\x9d\x3f\x83\xba\x4a\x22\x57\x93\xbe\xf1\x18\x33\x79\x27\x4b\x74\xd9\x93\x07\x9d\xaa\xba\xaa\xdc\xe0\xa0\x33\x1e\xcb\xac\x57\x55\xad\x95\x95\x17\x6a\x9f\xe5\x0d\xca\x94\xa6\x31\x63\x0b\xfd\xa1\xe3\x7b\x85\xca\x5c\xbf\x15\xf9\xd3\xab\x2a\x4b\x69\x3c\xe6\x5b\xe5\x50\x64\x9b\x79\xbe\x23\x86\xb2\xaa\x48\xb8\x7a\xe1\xf5\x38\xbe\x64\xdf\xc8\xa2\x55\x9a\xae\xcd\x37\x7b\xbd\x02\xbe\x70\xaa\xd8\xc2\xc2\x6d\xa1\x2f\x34\x91\xcf\x56\x24\x3a\x0d\xbb\xd9\x52\x26\x1d\x7f\xb5\xee\x6c\x45\x2e\xc9\xe1\x3e\x30\xd6\xd1\x53\x14\xad\x47\xf8\x99\x9b\xc2\xc1\x9f\x28\x31\x59\x5f\xa5\x65\x21\x37\xf7\x3a\x2d\x6c\xd9\x27\x06\x17\x6f\x81\x88\xf7\x44\x72\x24\x52\x04\xcb\x77\xe4\x08\xed\x59\xf0\x7e\x76\x73\x66\xb7\x9b\xcb\xa4\xb6\x9a\x24\xba\x5e\x66\x83\x22\x6d\x12\xa1\x7d\x23\x9a\xa4\x7a\xd2\x8f\x81\xa8\x0e\xb8\x6e\x62\x11\x63\xf9\xcb\x12\x51\x1e\xb7\xa2\xad\xdd\xee\x95\x68\xce\xc9\xc7\xe8\x9d\xd6\x1a\x87\x49\x7b\xe6\x50\x37\x6f\x76\xd8\xdb\xdd\xbf\xc9\xe1\x9f\x5f\xfa\x5c\xea\xe6\xb6\x31\xcb\x9e\x45\xc3\x6f\x79\xba\xc7\x57\xba\xbb\x3b\xab\x58\x78\x85\xf5\xcb\x2c\x21\x7f\x14\xb9\xb5\xe2\x5f\xf5\xb1\x28\x68\x6e\x0e\xc2\xbd\x66\x4d\xc6\xf7\xc5\x68\x5b\x5a\x8b\xd4\xb5\x90\xb5\xee\xe9\x84\xaa\x42\x78\x71\x9c\x9a\xf5\xe6\xa4\xb3\x9c\x3e\x4e\xa7\x1d\xf5\x79\x67\x6a\x3b\xe2\x3c\xe6\x9c\xda\x9b\x34\x9f\xfa\x49\x39\xfa\xf2\x4a\x54\x2e\x34\x0a\xa9\xdd\xce\xa7\xad\xfa\xa5\x9d\x0e\x35\x35\x7a\x5b\x05\xe3\x91\x11\x8a\xb8\x5d\xaa\x66\x06\x62\xa2\x8e\xa3\x91\x29\x75\x8f\x4c\xa6\x4f\xe8\x50\x92\x41\x18\xa3\x42\x39\x24\xd7\xe7\xed\xc4\x94\x24\xdf\xc9\xb5\x4a\x94\xc3\x04\x9f\x23\xd5\x3f\x81\x95\x9a\x18\xb7\x7d\x5a\xa8\x6f\x0a\x72\x03\x79\xba\x1d\x64\x9f\xd0\x67\xcb\xbc\x7e\x63\x89\x19\xe2\x2b\xe8\x59\xbf\xe2\xb6\x38\xc2\x76\x51\x7c\x94\x19\x47\xce\xcc\x56\x94\xb0\x50\x96\xfa\x4a\xe3\xf9\xbe\x43\x36\xfc\xe2\x53\xcb\x1e\x29\x87\xf8\x12\x51\xda\x89\x3d\x06\x0b\x92\x3d\xe5\x6c\xb3\x03\x04\xaf\x51\x60\xcb\x7e\x91\x2b\x33\xa7\x91\xb0\x73\x1e\x87\x27\x75\x9c\xd3\xf4\x3b\x63\x34\x67\xcc\xd7\xc8\x34\x27\xfe\xae\x10\x59\x2a\xe9\xe2\x91\x3c\x59\xa5\x8b\xc7\x42\x97\xd2\xd7\x07\xef\x0c\xfd\x66\xac\x4f\xad\x1f\x43\x46\xc7\x63\xca\xeb\x4f\x9e\xa2\x4b\x6f\x47\xcd\xdc\xc6\xe4\x56\x3b\xfe\xa2\xec\x8b\x52\xbb\x39\x97\xf9\x67\x39\x26\x63\x76\xf4\x5f\x87\xe5\xfd\x1b\x88\xea\x99\xf8\xda\x63\xff\xbb\xc4\x7f\x29\x91\xb1\xf5\x05\xc5\x1f\x31\x55\xaf\x40\x2d\xc6\xf2\xc9\xa7\x5c\xd7\x2e\xfb\x3b\x00\x00\xff\xff\x84\x50\xd8\x6a\x00\x30\x00\x00")

func templates_server_main_gotmpl_swp_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_main_gotmpl_swp,
		"templates/server/.main.gotmpl.swp",
	)
}

func templates_server_main_gotmpl_swp() (*asset, error) {
	bytes, err := templates_server_main_gotmpl_swp_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/.main.gotmpl.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1431896349, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xeb\x6f\xdb\xc8\x11\xff\x5c\xfd\x15\x03\xe1\xae\x20\x03\x85\xf6\xc7\xc2\x80\x0b\xb8\xf1\x15\x71\xdb\x4b\x0d\x3b\xd7\xfb\x60\x04\xc5\x9a\x5c\x49\xdb\xf0\x75\xbb\x4b\xab\xaa\xa0\xff\xbd\x33\xfb\x20\x97\x0f\x29\x52\x9c\xa0\x35\x82\x40\xe4\xce\xce\xfc\xe6\x3d\xbb\xac\x59\xfa\x99\xad\x38\xec\x76\xc9\xbd\xfd\xb9\xdf\xcf\x66\x17\x17\xf0\x71\x2d\x14\x2c\x45\xce\x61\xc3\x14\xac\x78\xc9\x25\xd3\x3c\x83\xe7\x2d\xe8\x35\x07\xb5\x61\xab\x15\x97\xa0\xab\x2a\x4f\x88\xfe\xa7\x4c\x68\x51\xae\x70\xd1\xef\x2b\xc4\x6a\xad\xa1\x96\xd5\x0b\x87\x65\xa3\x0d\xab\x35\x2f\x61\x5b\x35\x20\xf9\x5b\xd9\x94\x3d\x4e\x5e\x04\xa4\x55\x51\xb0\x32\x9b\xcd\x44\x51\x57\x52\x43\x34\x03\x98\x2b\x2d\x91\xbb\x9a\xd3\xef\x92\xeb\x8b\xb5\xd6\xb5\x79\x58\x09\xbd\x6e\x9e\x13\xdc\x74\x91\x32\xd5\xb0\xfc\x5f\xa2\xb8\x58\x55\x6f\x1d\xdb\x53\x68\x2e\x54\xcd\xd3\xd3\x08\xb5\x5c\x16\xfa\x24\xd2\x42\x64\x59\xce\x37\x4c\xf2\x33\xc9\x2f\x14\x4f\x1b\x29\xf4\x76\x3e\xc3\x8d\xbb\x9d\x64\x25\xfa\x27\xb9\xe5\x4b\xd6\xe4\xfa\xce\xd8\x44\xed\xf7\xbb\x5d\x8d\x16\xd1\x4b\x98\xff\xf8\xdb\x1c\x12\xf4\x1a\x11\xf3\x32\x73\xbf\xec\xb6\x1f\x3e\xf3\xed\x02\x7e\x78\x61\x79\xc3\xe1\xea\x1a\x92\x60\x3f\xad\xed\xf7\x48\x0a\x21\x27\x4b\xdb\x63\x17\x9b\x80\xf8\xc0\x37\x18\x24\x37\x75\xfd\x81\x15\xb8\x7e\x73\x7f\x07\xa9\xe4\xe8\x30\x05\x0c\x4a\xbe\x81\x70\x15\x44\xa9\x34\x2b\x53\x3e\x5b\x36\x65\x3a\xb1\x37\x22\x9b\xc3\x1b\xfa\x3f\xb9\xad\xd2\xa6\xe0\xa5\x8e\xe1\xcd\x50\xc2\xce\xc0\x48\x1e\x78\xca\xc5\x0b\x97\x8e\x39\x2a\xf2\xfb\x01\x25\x11\x02\x10\xbb\x2b\xf0\xbf\x16\xe6\xdd\x1a\x63\x29\xe7\x52\x5d\x41\xc1\x3e\xf3\xa8\x60\xf5\x93\x0d\xa6\x4f\x14\x43\xc9\x7b\xbb\x1c\x5b\xe2\x65\x25\x0b\xa6\x91\x16\xac\xab\xbd\xd9\xed\x6a\x66\x1f\xde\x55\xa5\x42\xc0\x48\x35\x47\x14\xb7\xfd\x97\xfb\xfd\xbc\x47\x7c\x2f\xab\xac\x49\x07\xc4\xfe\xa5\x23\xde\x93\xa7\x25\xd7\x8d\x2c\xc7\xda\xce\x6c\x3e\x8e\x2c\xb3\x4b\xee\xca\x65\x85\x1c\x55\x2a\x45\xad\x45\x55\x22\xad\xde\xd6\x7c\x44\x8a\xaa\x34\xa9\x36\xb6\x34\x56\x0f\xfe\xfa\x0e\x40\x82\xb4\x2a\x35\xff\xb7\xee\x08\xba\xc0\x4c\xde\xd9\xb5\x59\x67\x53\x4f\x75\xc0\xa8\xb3\xd6\xa0\x2d\x3f\x67\xd6\x07\xbe\x12\xf8\x73\x3b\x1b\x19\x15\x2c\x9f\xd9\xc8\x80\xdd\x42\x9b\x13\x9d\xcd\xad\x81\xde\xe5\x4c\x29\xab\xb7\x5b\x92\x68\x56\x92\x44\x58\x19\x29\x67\x5f\x22\x2a\x7c\x24\x87\xfc\xcc\x33\xc1\x3e\xa2\xd5\xd0\x15\x58\xb1\x0a\x0e\x64\x42\x1b\x75\x53\xec\x5c\xbe\x7a\xd1\x72\x32\xeb\x92\xce\xbf\x23\x60\x6e\xa9\x0f\xac\xf6\x2f\xcf\x06\xd6\xb2\xf3\xc0\xfc\x8b\x69\x60\x8f\xae\xb6\x60\x1c\x8a\x52\x50\xd0\x28\x47\x20\x96\x58\x1c\xd4\x9f\x98\x12\xe9\x4d\xa3\xd7\x13\xc8\xe9\x75\x0f\x35\xa5\x36\xb1\xc0\x32\xce\x34\x68\xcc\x2e\x05\x8d\xe2\xb2\x44\x72\xc0\x08\x80\x1a\xf7\x6e\x2a\x99\x99\x07\x1b\xdf\x56\x5b\x51\xa6\xa2\x66\x39\x0a\x46\x29\x02\x9b\x04\x97\x14\x28\xb8\x88\x32\x30\x10\x45\xca\x0c\xe3\x0d\x56\x4d\x78\x26\x4c\x66\x65\xa4\xbd\x81\x44\x30\x22\x1b\x1c\x0b\x17\x24\x31\x44\x54\x4a\xee\xbd\xa0\xfd\x7e\x01\x5c\xca\x4a\xc6\x9d\x59\xbc\xca\x98\x21\x7f\xe5\xdb\xd7\xe8\xcc\xb0\x0b\x7e\xc6\xc6\xf6\xb5\x5a\xa2\x82\xd8\x58\x2b\x62\x00\xac\x16\x80\x75\x99\x60\xb8\x62\x47\x0d\x54\x64\x48\x20\x6c\xbf\xc4\x95\xc7\xaa\x91\xa9\xaf\xd1\xc7\xec\x71\x8a\x1d\xa6\x03\xe5\xef\x35\x35\x63\x1b\x1f\x23\xab\xb8\xf4\x06\xc5\x31\xb3\x09\x53\xe5\xa9\x7d\x65\x30\x81\xec\xd0\xbe\x6f\xb0\x9d\x07\xbb\x3b\xea\x36\xf0\xda\xd1\x63\x5a\x4e\x38\x9c\x24\x93\x24\x56\x89\x5c\x1d\x63\x71\x68\xd7\xc8\x08\xa8\xef\x23\x97\x2f\xfc\x27\xb2\x14\xe0\x38\x93\xb2\x3c\x47\x07\x98\xe9\x05\x7d\xc4\xfd\x7b\x69\x0b\x75\xb6\x20\x55\x25\xa7\x57\xcc\x97\x2d\x6f\x09\xcb\xef\xb9\xd1\x66\xee\x49\x71\x3b\x5a\x8d\x7e\x4b\xa8\x36\x2e\xc2\x69\x66\x42\xba\x40\xa8\xe9\x45\xe4\x47\x53\x4e\x1f\xb8\xaa\xd1\x13\xfc\x57\x4c\x5d\x2e\x17\xf0\xc6\xbd\xfd\xad\xe1\x4a\xb7\x1e\xb5\x7d\xe2\x91\xeb\xdb\x61\xe1\xf4\x6e\xf2\xd0\x6a\xbf\x52\x50\x91\xb1\x85\xc5\xf4\xe9\x68\xdc\x6b\x87\x2d\x39\x9e\x90\x10\x15\xbe\x58\xb5\xf9\xb7\x9b\xfd\x6e\xc4\x2b\x19\x56\xf4\x6b\x68\x37\x8e\xd0\xb7\xfd\xc0\x67\x54\xa8\x40\xea\x17\x5f\xa9\x80\x17\x72\xa6\x02\x2d\xb6\xb1\x02\x43\xdb\x4f\xa1\x7f\x9d\xf9\x87\xb6\x8f\x1d\x64\x42\x7c\x68\x86\x18\x5a\xbe\x0f\xf6\x3b\x9a\x7a\x68\xe7\x73\xc0\xfa\x4d\x0e\xec\x9f\xdd\x24\x11\x82\xf4\x95\x19\x93\xd3\xf1\x75\xf3\xc6\x19\x10\x1d\x5f\x0b\x2d\x9c\x4d\x8e\x62\xf4\x72\x2c\xb6\x07\x87\xc3\xf2\xea\xcf\x1c\x8d\xd2\x55\xe1\x70\x01\x0e\xd7\x22\x63\xba\x92\x67\x00\xec\x33\x8f\x4c\x77\xf5\xed\xce\xb1\x75\xc8\x2d\xc5\xa2\x93\xe2\x17\xfe\xe1\x5f\xc4\xd3\x13\xb5\x57\x27\xb9\xc9\x32\x23\xc0\x73\x0e\x78\xf9\x02\xe3\x78\x71\xbf\xc2\x43\x57\xb8\x9e\x11\xf4\xaa\x50\x97\x33\x94\xf6\x52\xd0\x2d\xb6\xdc\x12\xee\x17\x26\xa1\x29\x03\xa7\x3f\x7d\x3a\x36\x14\xe2\x5b\x6c\x2e\x63\x65\x0f\x8c\x76\xd7\xd7\x50\x8a\x1c\xec\x49\xa2\x27\xe6\x1a\xdb\x72\x8d\xdd\x21\x0a\xdf\x2e\xcc\x98\x36\xc1\x68\x1e\x9b\x91\xfe\x0b\x83\xe1\x69\xe0\xda\xf1\xee\xb5\xe0\x3c\xa3\x63\xe0\x0e\x0d\x87\x27\xe0\x34\x83\xc7\x6b\x31\x12\x93\x63\xf8\xc2\x99\xe4\x34\x58\xbe\xfb\xbf\x16\x99\xe3\x33\x02\x67\x51\xe4\xbc\xec\x6d\x8f\xe1\x8f\x70\xe9\x84\xb9\x02\x42\x49\x68\x3a\xfb\x32\x9a\x17\x42\x29\x2a\x55\x61\xc6\x5c\xc1\x8f\x6a\xee\xa7\x57\x95\xfc\xa5\x12\xe5\x10\x11\xfe\x8b\xe3\xc1\x61\x11\x95\xc2\xac\xec\xcd\x2b\x58\x03\x60\x45\x0d\x9f\xb9\xc4\x09\x27\x32\x06\x2b\xb4\x55\x19\xcc\x6b\x22\x3b\xab\x71\x06\x52\xa2\x96\xc9\xdd\x6d\xdb\x35\xcf\x9c\x59\x8c\x91\x0e\xd6\xd8\x4e\x9c\x55\xf2\xa6\x1b\x9b\x2b\xa9\x5a\x45\xa9\xd0\xb0\xde\x52\x3b\x7d\xd2\xe9\x56\x2c\x05\xb5\x07\x17\xdb\xa0\xd2\x35\xa7\xa6\x72\xba\xd6\x23\xb1\x91\xe3\x11\x1e\x7b\xcd\x39\xda\x27\xd0\xa3\x59\x8f\x7b\xeb\xee\x78\xd6\x63\xe6\x8a\x31\x4d\xc0\x87\x72\x4f\x72\x45\x5d\xf8\xea\x7a\x74\x7b\x31\xc9\x31\xb6\x47\x6e\xb0\x35\xdc\xe2\xa4\xcd\x36\x83\x3c\x6e\x77\x59\x82\xb3\x67\xba\x36\xa4\xee\xcd\x09\xb5\x80\xfe\x52\x3c\xaf\x98\x0c\xb1\x46\x9a\x5f\xcd\xfc\xe9\x7e\xe2\x18\x69\x15\x78\x22\x29\x9f\x30\xdb\xbc\x1f\x92\x96\x24\xb2\x9e\x68\x16\x50\x77\xa7\x37\x51\x62\xd0\x2c\x59\xca\x77\xfb\x2e\x56\x0e\x47\xca\xb8\x8e\x18\x7e\xf1\x3e\xee\xca\x48\x1f\x61\x78\xea\x3b\x04\xb1\xa3\x71\x1e\x37\x0a\x7b\xb3\x26\x77\xe5\xc2\xc6\x3b\x9e\xfe\xbe\x25\x72\x64\x17\xc3\x10\x79\xf8\xb4\x77\x55\xc8\x31\xb5\xf0\x83\x13\x50\xbf\x3e\x74\x7b\x6d\xff\xf6\x6d\xaa\x9f\x40\xfe\x6a\x64\x2a\x77\xba\xc9\xef\x9c\xb4\x09\xe5\x74\xf3\xb5\x6a\x7b\xf6\x64\x7a\xb4\xcd\xb8\xcb\x8c\x5e\x3f\xff\x72\x3a\x78\x0e\x3e\x13\xfe\xb9\x80\x42\x77\x29\x10\x00\xe9\x65\x41\xa1\xc7\x39\xd0\x93\xdc\x5b\xb9\xc9\x73\x2c\x4e\x02\x67\x94\xff\xa0\x82\xe3\xc4\x08\x2f\x6f\xba\xec\x70\x71\x36\x24\xa0\x98\x3b\x75\x48\x99\x88\x86\x6f\x19\x1b\x7e\x4a\xe8\xc7\x86\xbf\x9d\xfa\x76\xb1\x11\xca\x39\x39\x36\xda\x59\xc8\xc7\x46\x7f\x9a\xfa\x72\x68\x78\x06\xdf\x20\x34\x7a\x92\xff\xb7\xa1\x11\x5c\xf8\x7d\xcf\xd0\x70\x23\x50\x30\x5e\x84\x37\xbd\x6d\x64\xb4\xb7\x55\x5f\x39\x62\x74\x62\x26\xe7\x8b\x28\x14\xba\x80\xe7\xaa\xca\xed\x10\x31\x39\x0c\xb6\xd7\xd4\xbd\xf9\xaf\x53\x12\xeb\x37\x43\xd5\x9d\x5d\xd6\x0b\xc0\x42\x7e\x35\x65\x71\xcf\xe8\x29\xc0\xf4\xa9\xb3\x97\xd9\x49\x76\x3a\x5d\x4f\x6a\xaa\x4e\x8d\x77\x0c\xfb\x49\x74\x44\x0d\x7f\x27\xdf\xd3\xe2\x08\x19\x04\x77\xf6\x1f\xf8\xe6\xa1\x6a\x34\x7b\xce\xb9\xbb\xbe\x1f\xc3\x4b\xcc\xc7\x92\x31\xc7\x05\x89\xeb\x46\x5e\x2a\xc6\x83\x11\xfc\x98\xc9\x8f\x7f\x6e\x39\x32\xd7\x0f\xae\x04\x8f\x8a\x79\x0a\xc6\x10\x97\x2c\xdd\x4d\xa1\xfd\xea\x14\xa4\xca\x84\xea\xce\x68\x13\xda\x4f\x1f\x25\xe2\x7e\xc2\x9c\x8e\xec\x3b\x82\x99\xb8\xc5\x0d\x33\xd7\x8c\xd1\xc1\xb7\x3a\xf2\x43\x7b\x2a\xd0\x15\xce\x3b\xb4\x4e\xc9\x4b\x1f\x8b\x2a\x94\x09\xef\x3f\x7e\xbc\xa7\xad\x74\x5d\xf9\xcc\xe9\x52\x3f\x83\x4c\x48\x9e\xea\x7c\x4b\x67\x7b\xe3\xca\xbf\xd1\xd9\xa4\xbc\x29\x33\x23\x20\x9a\x5f\xfd\xe1\xf2\xf2\x12\x8f\x29\xac\x16\x76\x74\x8f\xf0\xbc\x72\xe6\xe1\x02\xd3\xa0\x57\x56\x76\xdd\x09\xeb\xb0\xa9\x63\xca\x8c\xcb\x83\x79\x31\x4e\xb5\x2f\x7d\x72\xf3\x8e\xa0\x09\xd0\xed\x8c\xe2\xd0\x9a\xbf\x0a\xbd\xfe\xe5\xee\xeb\x6c\x2a\xca\x34\x6f\x32\xb3\xab\xcb\x53\xfb\x39\xc1\xec\xa2\x05\xff\x4d\xbc\x11\xf4\x59\xe0\xc2\x3d\xbe\x6d\xc4\xeb\x9d\x62\xa1\x7f\x85\x6b\xfc\xc6\xff\x2b\x07\xfd\x72\xf7\x73\x6b\xc3\xc3\x09\xd5\xf3\x23\x39\xf2\xbf\x01\x00\x00\xff\xff\xa3\x47\x00\x90\xf6\x20\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 8438, mode: os.FileMode(420), modTime: time.Unix(1431834998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_configureapi_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x0c\x8c\x2c\xd6\x0e\xbc\xf2\x7d\x81\x1c\xb2\xd9\x16\x0d\x8a\x26\x41\x5c\xa0\x40\x6f\x34\x35\x92\x99\x48\xa4\xca\x8f\x38\xae\xc0\xff\xde\xa1\x28\x59\xb2\x9d\xe6\xb3\xbd\xf5\x24\x91\x9c\x79\x33\xef\x3d\x0e\x2b\xc6\x6f\x59\x8e\x50\x32\x21\x47\x23\x51\x56\x4a\x5b\x98\x8c\x00\xc6\xb9\xb0\x2b\xb7\x4c\xb8\x2a\xe7\x9c\x19\xc7\x8a\x1b\x51\xce\x73\xf5\x8f\x59\xb3\x3c\x47\x3d\x47\xad\x95\x36\xe3\x11\xc5\xd6\xb5\x66\x92\x40\x92\xff\x31\x63\xae\xb0\xe7\x0d\x8c\xf1\xbe\xae\x2b\x2d\xa4\xcd\x60\xfc\xd7\xb7\x31\x24\xde\x37\xc1\x28\xd3\xf6\x2f\xa6\x1d\xdd\xe2\x66\x06\x47\x77\xac\x70\x08\xff\x9e\x40\x32\xc8\x0f\x67\xde\x53\x28\x0c\x91\x62\xec\x0e\xdc\x74\x34\x9a\xcf\xe1\xf3\x4a\x18\xc8\x44\x81\x40\x5f\xc3\x32\x04\xab\x00\x53\x61\x13\xb8\x94\x9c\x76\x2d\xe0\xbd\x30\xd6\x84\xbf\xb5\x92\x7f\x5b\x58\x22\xa8\x3b\xd4\x6b\x2d\xac\x45\xd2\x20\x73\x92\x03\x57\x32\x13\xb9\xd3\x78\x7a\x75\x3e\x61\x95\x80\xe3\xba\x4e\xae\xa2\x56\xde\x27\xb4\x38\xad\xaa\x0b\x56\xd2\x82\x22\xa6\x50\x53\x27\x54\x7e\x9b\x06\x76\x85\x10\xf2\x56\xa8\x91\xce\xe8\x37\x59\xa0\xbe\xc3\x77\x41\x35\x38\x81\xa8\xde\x60\x6f\x47\xc7\x33\x25\x8d\x2b\xb1\x51\x40\x64\x8d\x20\x05\x96\x28\x2d\xb3\x42\x49\xef\x03\x1c\xf5\x70\x56\x30\x63\x62\x17\x6d\x46\x80\xa6\x83\xfd\xf8\xc9\x34\x2a\x55\x18\x7c\x22\xb9\x75\xb7\xeb\x40\xbf\x27\x35\x26\x41\x92\x89\x06\xa1\x92\x6b\x64\x29\xea\x19\x58\xa6\x73\xb4\x40\x8e\xa0\xce\x18\xc7\xda\x4f\x23\xa5\x46\x09\x00\x8d\xd6\x69\xd9\xb1\xbc\x50\x76\xdb\x11\xa6\x93\x31\x55\x8f\x85\x83\x60\xb1\xf2\x8a\x19\x90\xca\xc2\x06\x83\x23\x28\x41\xf4\x09\xe3\xd0\xbd\x9f\x0e\x2f\xce\xfe\x15\x4a\xae\xb4\x4a\x1d\x7f\x89\x62\x6d\xc6\xeb\x14\x1b\x24\x77\x8a\x75\x5b\xbd\x62\xeb\xa0\xd8\x17\xba\x57\x41\xb1\x94\x59\xf6\x76\xbd\xaa\xae\xee\x5b\xf5\x5a\x20\x77\xd4\xd9\x86\x26\x56\x48\x11\x38\x9b\x36\xa0\x51\xcf\xfc\xc7\x8c\xe0\xa7\xce\xae\x9a\xdd\x43\x01\xc2\x11\x91\x6f\x78\x3a\x43\x0d\x19\x4b\xf3\x99\xcf\xa0\xa2\x90\x76\x31\x85\x49\x33\x36\xf4\xcf\x45\xc5\x0a\xef\x67\x91\xe1\x74\x97\xb5\x14\xc5\xec\x67\xd4\x97\xa1\x0f\x60\xa1\xda\xd3\x94\x7b\xaa\x1d\x0d\x1a\xce\x8f\xb8\x79\x26\x0f\xab\x6e\x09\xf5\xd7\xf5\x1e\xe6\x9f\x9e\xaf\xd8\x7d\xef\x61\xa6\x55\x19\x96\x0b\xe5\x34\x0f\x1b\x2f\x21\xf6\xb0\x9b\x97\x15\x6a\xd6\x9a\x18\xa9\x6f\xdf\xaa\x43\xca\x1f\x98\x4c\x8b\xee\xde\xef\xbc\x69\x87\x41\xfd\x65\xee\x60\x35\x2b\xa9\x48\xd5\x7c\x1f\x03\x88\x91\x43\x3b\x08\x11\x92\xa0\xb7\xd2\xe2\x3b\xa6\x3d\xd8\x6c\xd7\xb5\x3e\x84\xea\x74\xfa\xc3\x9e\x1b\x6d\x06\xd9\x14\x93\x16\x8e\xd3\xf4\x9b\x4f\x2a\xc5\xa2\x03\xba\x6e\x2c\x32\x67\x2a\xc8\x79\x7f\xb9\xbc\x41\x6e\xbd\x3f\xde\x16\xdb\x4b\xda\xb6\xf1\x90\xcf\x0f\x57\xe9\x36\xbe\xa2\x56\xfb\x00\x87\xf7\x41\x75\x2e\x0d\x2e\xc3\x33\xe6\xf8\xd1\x87\x68\xc7\xcc\xd7\xf8\xf7\xc7\xb2\xdf\x66\xd9\xde\xbc\xfa\xd1\x8f\x00\x00\x00\xff\xff\xc1\x71\xc5\xd1\x6d\x09\x00\x00")

func templates_server_configureapi_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_configureapi_gotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templates_server_configureapi_gotmpl() (*asset, error) {
	bytes, err := templates_server_configureapi_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/configureapi.gotmpl", size: 2413, mode: os.FileMode(420), modTime: time.Unix(1431896302, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_main_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcd\x6e\xdb\x3c\x10\x3c\x5b\x4f\xb1\x21\x12\x40\xc6\x67\x51\xdf\xd9\x85\x0f\x06\x8a\x36\x2e\x9a\x1f\xc4\x09\x7a\xe9\x85\x91\x29\x99\x09\x4d\xaa\x24\x65\xd7\x30\xf4\xee\xdd\xa5\x24\x47\x4d\x2e\xbd\x44\xd1\xee\x70\x76\x38\x3b\x72\x2d\x8a\x57\x51\x49\xd8\x09\x65\x92\x44\xed\x6a\xeb\x02\xa4\x09\x00\xd3\xb6\x62\xf4\xb4\x3e\x3e\x8c\x0c\xf9\x36\x84\x9a\x25\xf4\x56\xa9\xb0\x6d\x9e\x79\x61\x77\x79\x21\x7c\x23\xf4\x8b\xda\xe5\x95\xcd\xfc\x41\x54\x95\x74\xb9\xaf\x65\x11\x91\xa7\x93\x13\x06\xf9\xf9\x67\x59\x8a\x46\x87\x55\x9c\xe0\xdb\xf6\x74\xaa\x9d\x32\xa1\x04\x76\xf5\x8b\x01\x6f\xdb\x08\x96\x66\xd3\xff\xd7\x1d\xbb\x7c\x95\xc7\x19\x5c\xee\x85\x6e\x24\xcc\x17\xc0\x47\xe7\xa9\xd7\xb6\x08\x85\x31\x53\x87\xfd\x8b\x6e\x9a\x24\x79\x0e\x8f\x5b\xe5\xa1\x54\x5a\xc2\x41\x78\xa8\xa4\x91\x4e\x04\xb9\x81\xe7\x23\x84\xad\x84\x5e\x39\x04\x6b\x35\x27\xfc\x8d\x78\xc5\x6a\xe3\x24\x18\x1b\xb0\x0c\x76\x2f\xdd\xc1\xa9\x20\x11\x3f\x50\x89\x32\xe0\x99\xa3\x6d\x46\x84\x2a\xc0\xb3\x2c\x44\xe3\xb1\xad\x35\x35\x1d\xc8\x8d\x0a\x1e\x0e\xb6\xd1\x38\x50\x82\xb6\x3e\x5c\xd0\x90\x55\xe8\x8b\xd6\xe8\x23\x75\x86\x21\x41\x1a\x50\x65\x64\x96\xbf\x6b\xad\x0a\x15\x10\x40\xb6\xaa\xf2\x08\x59\xa6\x4c\xa1\x9b\x8d\xcc\x68\x6f\x50\x5a\x17\xef\x30\x68\x88\x73\xb1\xe6\x9b\x3a\xee\x13\xd7\xb4\x13\x66\xe3\x71\x62\x65\xe7\x67\xd4\x70\xe5\xb7\x82\x74\x38\x1e\xb2\x00\x9c\xe7\x9c\x43\xb6\x44\x0f\xf9\xb2\xae\x6f\xc5\x4e\x92\xe5\xa8\x88\xdf\xa3\xd9\x85\xaa\x85\x46\xef\xb3\xac\x1e\xde\x08\x39\x6a\xf5\xde\x77\x47\x56\x9d\xd8\xa7\x55\x3c\x72\xc0\xec\x64\x8d\x1a\xb6\x93\xec\x85\x1b\xa4\x7c\x5b\xdf\xdd\xc2\x02\x5e\xbc\x35\xfc\x41\x1c\x6e\xa4\xf7\x18\xce\x14\xa9\xd7\x6f\x80\xb6\xc5\x85\x96\x8d\x29\x62\x68\xd3\x29\x9c\x70\xd7\x3d\xc1\x1a\x0d\x9a\x81\x74\x8e\xc2\x42\x6e\xf1\x5b\x79\x48\x47\xec\x33\x60\x6c\x8a\x78\x94\x45\xa8\x8b\x05\x18\xa5\x23\x03\xe0\x56\x2a\xfe\x45\x04\x34\xcf\xa4\xd8\x24\x58\x4b\x19\x8e\x1e\x22\x9f\xf5\xfc\xab\xc4\xc5\xec\x53\x76\x7f\xf7\xf0\x38\xf0\xc4\xf6\x62\x81\xc4\x3d\x4f\x57\x00\xf6\x3f\x1b\x18\xb6\xb8\xef\x77\x0c\xd7\x77\xeb\x33\x43\x6c\x8f\x19\xba\x02\x7d\x83\x85\xd0\xf4\x72\x66\x12\xb5\x22\x22\x32\xbb\xfb\x72\xdb\x96\xae\x38\x5e\xd3\xf2\x7e\x95\x8e\xec\xa0\x19\x85\x35\xa5\xaa\x30\xcb\xd4\x43\x8a\x29\x51\x69\xe5\x03\x6d\xfe\xec\x17\x7e\xe2\xfc\x7b\x2c\xa6\x2c\x14\x35\x9b\x75\x3a\xfe\x03\x36\x67\xf8\x97\xae\x35\x4d\x26\xef\x9d\x9b\x4c\x3e\xf8\x36\x41\xa9\x93\x72\x17\x62\x20\x42\x99\x32\x0a\x96\x32\x15\xc9\xbe\x6e\x30\x8a\x67\xad\x20\x02\xd0\xaf\xca\x3c\xcf\xaf\xfc\x4f\x83\x23\x07\x55\x7c\xb9\xd9\xb8\x74\x1a\x95\xf6\x23\x51\x22\x61\xf9\x9a\x62\x9a\xbe\xc9\xc7\x0b\x75\xb5\x0f\x69\xfb\x81\x51\x7b\x5a\xf5\x49\x43\xb2\x4f\xff\xb8\xf4\x36\xf9\x13\x00\x00\xff\xff\xca\x1e\x12\x47\x18\x05\x00\x00")

func templates_server_main_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_main_gotmpl,
		"templates/server/main.gotmpl",
	)
}

func templates_server_main_gotmpl() (*asset, error) {
	bytes, err := templates_server_main_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/main.gotmpl", size: 1304, mode: os.FileMode(420), modTime: time.Unix(1431896345, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\xdf\x6f\xe4\x34\x10\x7e\xcf\x5f\x31\xac\x8e\x63\x53\x85\xf4\xbd\xa8\x0f\xd0\x03\xf5\x1e\x38\x4e\x6d\x05\x8f\xc8\x4d\x26\x1b\xd3\xc4\x4e\x1d\x7b\xb7\x4b\x94\xff\x9d\xf1\x8f\x64\x93\x6d\xba\x42\x40\x2b\x74\x52\xa5\x6e\xe2\xf1\x37\xfe\xbe\x99\xf9\x9c\x86\x65\x0f\x6c\x83\xd0\x75\xe9\x67\xff\xb3\xef\xa3\xe8\xfc\x1c\xee\x4a\xde\x42\xc1\x2b\x84\x1d\x6b\x61\x83\x02\x15\xd3\x98\xc3\xfd\x1e\x74\x89\xd0\xee\xd8\x66\x83\x0a\xb4\x94\x55\x6a\xe3\x7f\xcc\xb9\xe6\x62\x43\x8b\xc3\xbe\x9a\x6f\x4a\x0d\x8d\x92\x5b\x84\xc2\x68\x07\x55\xa2\x80\xbd\x34\xa0\xf0\x5b\x65\x84\x43\x1a\xa0\x21\x93\x75\xcd\x44\x1e\x45\xbc\x6e\xa4\xd2\xb0\x8e\x00\x56\x02\xf5\x79\xa9\x75\xb3\x8a\xe8\xa9\xeb\x14\x13\x74\xd8\xf4\x03\x16\xcc\x54\xfa\xa3\x0b\x6c\xfb\xbe\xeb\x1a\xc5\x85\x2e\x60\xf5\xf5\xe3\x0a\x52\xa2\x60\x83\x51\xe4\xe1\x97\xdf\xf6\xee\x01\xf7\x09\xbc\xdb\xb2\xca\x20\x5c\x5c\x42\x3a\xd9\x6f\xd7\xfa\x9e\x42\x61\x8a\xe4\x63\x67\x70\xb1\x53\x87\xe4\xba\xaa\x58\xdb\x7e\x62\x35\x2d\x5f\xd3\xb1\x2b\x54\x3f\x19\x91\x81\x36\x4a\xb4\xc0\x88\xb1\xc8\x34\x97\x02\x76\x5c\x97\x8e\xa8\x72\x7a\xb4\x7c\x23\x18\x05\x21\x50\x1a\x49\x81\x04\x75\x6d\x88\xf8\x04\x0f\x4a\x0f\x18\xe9\x7d\x83\x27\x72\xd9\x1c\xeb\xae\xe3\x05\x50\xf1\x14\xab\x1d\x93\x69\xb0\x7f\x1b\x8e\xee\x02\x69\x37\xa4\xdf\x1b\x5d\x4a\xc5\xff\xa4\x72\x8e\x1b\x13\x98\x86\x4d\x42\xfa\xfe\xcc\x36\x07\xa9\x92\xf1\x86\x55\x36\xc0\xc5\xc5\x10\x52\xdf\x9a\x2c\xc3\xb6\xfd\x59\xe6\x58\x0d\xdb\x6f\xd0\xe9\x70\x25\xeb\xa6\xc2\xa7\x5f\xee\xff\xc0\x4c\x3b\xa0\x90\xe2\x68\xd3\x98\x1c\x95\x92\x8a\x24\xb6\xcc\x60\x5d\x88\x97\xc9\xc7\xe0\x1f\x8e\xf8\x37\xee\x3f\xbc\x86\x0c\xcd\x20\x01\xbc\xb9\x20\xd0\x51\x07\x2a\x07\x01\x85\x58\xa4\xfc\x9f\xb1\x1b\xd8\x44\xfd\xcb\x9d\x6e\x7b\x17\x55\xc1\x32\x9a\x6c\x49\x26\x50\x32\x0d\x19\x13\xa1\x6f\x81\xa6\x86\xe7\x8b\x8d\xed\xcf\x7a\xa2\xaf\x27\xc8\x96\xf3\x62\x8d\xbf\x8c\x1e\xf7\xf2\x7e\xc2\xdd\x9c\x0e\x64\x0a\xc9\x0d\xad\x85\x08\xdc\x81\xf5\xbe\x74\xd0\xc6\x6b\x8d\x8b\xca\xca\xc6\xba\x28\x19\x8e\x9f\x9d\x67\xb8\xeb\x4c\x3f\xc1\x59\xcd\x73\x42\xda\x31\x85\xe9\x95\x24\xa5\x9f\x74\x32\x98\xcd\x72\x3d\x62\xd7\xec\xd3\x44\x93\x56\x7c\x3f\x5f\xea\x02\xe4\x05\x50\xae\x24\xd4\x4e\x5d\x0c\x09\x7a\x4b\xd9\x4b\xf7\x41\x66\xb7\x9a\xd4\xde\x38\x9d\x66\x4f\xde\x65\x17\x1a\x04\x5a\xad\x4c\xa6\x5d\xfe\x90\x68\x89\x8f\xb3\xea\x69\xb7\xf8\xff\xb0\x68\x09\x07\x5f\xbf\x3e\x25\x82\x3d\xb8\x77\x24\x5a\xbe\xc1\x0c\xf9\x16\x55\x38\xd5\x91\x3c\x31\xdc\xa2\xda\xe2\xf5\xdd\xdd\xe7\xb5\x0a\xe5\xbb\xc1\xb6\x91\xa2\xc5\xdf\x14\xa7\xde\x4e\x40\xc1\x59\x78\xff\x68\xb0\xd5\x61\xba\xa5\xd1\x98\xc0\xef\xf6\x62\x7a\x96\x65\x20\x97\xde\xd8\xa8\x8f\xa2\x90\x6b\xeb\x92\x03\xd5\x69\x23\x1b\x37\xc8\x09\x50\x97\x9d\x86\x1a\x37\xad\xed\x91\x2c\x6e\x4c\x80\x04\x67\x77\x7e\x75\x09\x82\x57\xee\x60\x70\xea\x38\x8e\x59\x4e\x4c\x09\x22\xa0\xd0\x18\xc9\xdc\x50\xe3\x27\x03\x27\x02\x8c\x1d\x90\x6f\x1b\xfa\x69\x2f\xd4\x2d\x53\x70\xb0\x54\x47\x44\x48\xba\xf5\xf1\x11\x0e\x93\x08\xab\xd1\x0f\xba\x7e\x15\xcf\xc6\x6b\x32\xae\xe0\x4f\xee\xb9\xcf\x0f\x7f\x48\x71\xe9\x93\x9c\xc0\x1f\xd4\xa3\x1c\x55\x8b\xc3\x53\xba\x3e\x32\x87\x18\x68\x70\xb9\xfe\xa6\x05\xf9\xe0\xbf\x77\xe8\x8f\xa6\xb6\xaa\xf6\xfe\x3e\x7f\x6e\x24\x8e\xf3\xec\xa3\x24\x08\x7d\xb2\x44\x3f\x70\x91\xff\x6a\xbd\x34\x74\xca\x58\xa9\xe4\xa8\xc7\xdf\x3f\xc7\x18\x6d\xd1\x31\x21\x3d\x06\x4b\xfb\x6e\x56\x60\x4b\xe5\x9e\xd2\x0c\xce\xfc\x5a\xf5\x5e\xec\xd5\xf1\xe5\xdc\x29\x95\xc5\x3a\x98\xe5\x62\xcc\x45\x58\x5f\x92\x2f\x4c\x6d\xfa\xd2\xe5\xb1\xa8\xd4\x98\x71\x6c\x18\x57\x66\x96\x69\xe3\x0a\x1b\xae\x36\xf7\x21\xe7\xab\xf1\x86\xd3\x12\xfd\x7b\xd8\x17\x84\x5e\x68\x10\xdf\xa6\xee\xed\xdf\x2c\xd0\x62\x13\xff\xa3\x2a\x8c\xf7\xee\xff\x46\xfa\xb7\x57\xde\x19\x44\x1f\xfd\x15\x00\x00\xff\xff\x9f\x00\x11\xa3\x9a\x0d\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3482, mode: os.FileMode(420), modTime: time.Unix(1431834998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\x5f\x73\xdb\xb8\x11\x7f\xd7\xa7\xd8\x6a\x72\x19\xc9\xa7\xa3\xfd\x70\xd3\x87\x5c\xdd\x87\x38\xbe\xc6\x33\x69\x9a\xda\x17\xbf\x24\x99\x06\x26\x21\x09\x0d\xff\x19\x00\x6d\x2b\x1a\x7d\xf7\xee\x02\x20\x09\x52\x24\x2d\x29\xf6\x74\xee\x1e\x2e\x22\xb0\x58\xfc\xb0\xfb\xdb\x3f\x80\xd7\xeb\x88\xcf\x45\xca\x61\x9c\x4b\x91\x08\x2d\xee\xf8\x1d\x8b\x45\xc4\x74\x26\xc7\x9b\xcd\x68\xbd\x16\x73\x08\xfe\x29\xd2\x77\x3c\x5d\xe8\x25\x8e\xe0\x37\x97\x12\x5e\x9d\x82\x13\x14\x59\x5a\x0b\x4c\xd6\xeb\xe0\x03\x23\xc1\x19\x8c\xf1\xf7\xbb\x2c\x34\x12\x9b\xcd\x78\x06\xf8\x7d\xcd\xe2\x82\x9f\x3f\xe4\x92\x2b\x65\x86\xcd\xa8\xa7\x7f\xfa\x9b\x51\xff\x97\x53\x48\x45\x0c\xeb\x11\x80\xe4\xba\x90\x29\x8d\x8e\x08\x0f\x4f\xa3\x1a\x17\x7b\x78\x04\x57\x29\x70\x20\xae\x5a\xff\x5e\xb8\x70\x27\xcd\x65\xda\x87\xca\x4d\x1f\x80\xe9\xab\x5d\x62\x95\x7f\xdd\xcf\x56\x22\x15\x49\x91\x0c\x78\x90\xa6\x07\x31\xcd\xe3\x8c\xe9\xbf\xfe\x3a\xe9\xc2\x36\x2d\x1d\x69\x37\x31\x5f\xe7\x0f\x61\x5c\x28\xa4\x54\x35\xbc\xaf\x77\x07\x11\xdb\xe9\x1f\x45\x5c\x6e\xd2\x42\x5c\x0e\xef\x87\xb8\x88\xb5\xc8\x63\xfe\xaf\x79\x2f\xe8\x4a\xe2\x47\x71\x7b\x5b\xed\x85\xf1\x3c\xed\x37\x29\xcd\x1d\x16\x29\x56\xeb\xce\x40\xcc\xbf\x75\xee\x09\x0b\xa5\xb3\x64\x9e\xc9\x84\xe9\x46\xfa\xe9\x44\xf9\xbb\x91\x7b\xc4\x82\x34\x60\x05\xcd\xa7\xd2\x52\xa4\x8b\x3e\x7b\xda\x9d\xd5\x6e\xf0\x6b\xd8\x2a\x16\x61\x57\xba\x7c\xcf\x79\xa4\xae\xc4\x77\x6e\x46\x10\xa3\x64\xc9\x7b\x96\xe0\x27\x0d\xd2\x69\x44\x4a\xde\x8d\x79\xda\x8d\x68\xba\x1d\xbb\x17\x9a\x27\x6a\x20\x78\xcd\xfc\x63\xbe\x6b\x21\x29\x43\xd6\xe9\xde\x37\x38\x87\x21\xb9\xf9\x83\x20\x55\xba\xf7\x82\xf4\x31\x15\xb7\x05\x1f\x44\xe5\x89\xec\xcd\xf3\x3f\x7d\x94\xe5\x32\xcb\xb9\xd4\xab\x0e\xc6\x5e\xa8\x0f\x65\xf9\xa7\x15\x68\x9f\x3c\x66\xba\xbb\x2b\x80\x80\x44\xfc\xc3\x5e\xa8\x33\x13\xc0\x36\xde\xb0\x38\x35\x75\x74\x47\x77\xa7\x9a\x2c\xd5\x0c\xb1\xb6\x14\xb4\xe2\xac\xb9\xb2\x75\xc8\x1b\x91\x46\x15\xe8\x71\x97\x84\xd1\x46\x62\xdc\x33\x00\xd2\x90\xa7\x9a\xc4\x82\x0b\x9c\x79\xb8\x66\x88\x21\x24\xc7\x15\x5a\xc4\xc1\x55\x1e\x0b\xfd\x7a\x65\x0f\x68\x7d\x47\xf2\xbe\xec\xa7\xae\xd1\x2f\xd6\xbb\x67\x59\x1c\xf3\x90\xfc\x5b\xa5\x24\x13\xe2\xb1\xe2\x5d\x5b\x4a\x76\x5f\x9f\xcf\x9b\x54\xdf\x69\x56\x61\x98\x8c\xee\x98\x84\xc6\x9c\xf9\xfc\x63\x95\xf3\xf6\xa2\x6b\x6b\x37\x7e\x1e\xf3\x04\xc1\x91\x86\x79\x91\x86\x93\x86\x10\x25\x24\xc3\xb0\xb3\xa5\x88\xa3\x6d\xf6\xd5\x53\x76\x8b\x29\x1c\x21\xd9\x32\xa9\x82\xeb\x8a\xd7\x86\x89\x4d\xee\xb4\xf9\x06\x56\x09\x42\xac\x38\x8b\x14\x46\xce\x8e\x90\x1d\xcd\xf3\x10\xce\x93\xdf\x5a\x63\x7f\x83\x96\x3d\x5a\x02\x3f\xff\xec\x40\xa0\x4b\x51\xa1\x83\xbc\x45\xcf\x7a\xa2\xc1\x7a\xe2\x81\x9d\x40\x1e\xde\x21\x72\xe2\xe1\x1d\x99\x62\x56\x46\x71\x65\x06\x4f\xa2\x69\x49\xc3\x03\x8f\x00\x53\xc4\xe3\xb2\x80\x17\xb0\x7e\xc8\x92\x15\x2f\x52\x63\x24\x32\xee\xa4\xda\x63\xb0\xb6\xf9\xde\xb0\x29\x63\x18\x03\xda\xb8\x02\x62\x0f\xd2\x4b\x91\xe6\x81\x86\x68\xb1\x9d\x89\x1a\xb9\x88\x76\x85\x36\x4d\x4f\x81\xe5\x39\x92\xbb\xb9\x8b\x9c\x81\xb1\xf4\xd4\x2c\xb0\x81\x61\xd4\x1d\x0c\x79\xc0\x1c\x1d\xa8\x5b\xb8\xf7\x43\x3e\xbc\x5b\x95\x80\xe8\x54\x50\x93\xac\x91\xee\x5a\xa1\xe3\xe7\x28\x3f\x68\x7e\xd8\x85\x1e\xee\xe7\x30\xc3\xf6\x26\x65\x22\xab\x12\x71\xce\xc2\x6f\x6c\xc1\x6d\xed\x37\x3f\x71\x76\x74\x7c\x0c\x7f\x2c\x85\x82\xb9\x88\x39\xdc\x33\x05\x0b\x8e\x76\xc1\x03\x45\x70\xb3\x02\xbd\xe4\xa0\xee\xd9\x62\x81\xb1\xab\xb3\x2c\x0e\x48\xfe\x3c\xc2\xc8\x4d\x17\x38\x59\xae\x4b\xc4\x62\xa9\x01\xd3\xce\x1d\xc7\x1c\xa7\x8d\xaa\x25\x4f\x61\x95\x15\x78\xae\x5f\x64\x91\x36\x34\x95\x5b\x40\x98\x25\x09\x4b\xa3\xd1\x48\x24\x79\x26\x35\x4c\xf0\xd0\xe3\x94\xeb\xe3\xa5\xd6\xf9\x98\x3e\x16\x42\x2f\x8b\x9b\x00\x05\x8f\x43\xa6\x0a\x16\xff\x57\x24\xc7\x8b\xec\x17\xa7\x6a\x17\x99\x63\x1b\xea\x3b\x89\xd6\xcd\xc2\x4e\xe2\x89\x88\xa2\x98\xdf\x63\xf1\x31\x88\xe9\xe4\xb8\x8f\xf1\x9c\x64\x29\xda\x3a\x78\xc3\xe7\x0c\x2f\x0c\x17\xe6\x7c\x8a\xc8\x88\x35\x32\xd5\x73\x18\xff\x74\x6b\xea\xa9\x0d\xbb\x34\x72\xbf\xec\xb2\x17\xdf\xf8\x6a\x06\x2f\x4c\x60\x12\xe3\x02\x6f\x3d\xcd\x99\xba\x00\xbe\x26\x2b\xdb\x50\x37\x35\xce\x25\x6e\xc4\x4c\x29\xdb\xe9\x99\xa6\x4f\xa1\xdd\x0d\xff\x15\xb0\x38\x36\x9e\xb9\xc9\x8a\x34\x82\xdc\xce\x52\x49\xa0\x41\x5c\xfa\xb6\x40\xff\x78\xeb\x81\x0a\x8b\xb1\x0f\xe9\xd6\xab\x5c\x84\xa8\xc2\xf0\x04\x43\x0c\xed\x00\xd9\x8d\x89\xac\x08\xe6\x32\x4b\x80\x01\xd9\x25\xb8\xe4\xd8\xfc\x29\x3d\xc2\x05\xbc\x1b\x11\x5e\x13\x8a\x50\xbb\x22\xe2\x6c\x67\xa7\xca\x02\xf1\x86\xab\x50\x8a\xdc\xe6\x62\x7b\xb0\xc6\x90\x6f\xc5\xe0\x83\xab\x80\x0e\x75\x5d\xa1\x6b\xf3\x58\xee\xbf\xc6\x50\x77\xe8\xd0\x08\x7a\x09\x14\xfb\x68\x17\xb4\x86\xe3\x02\xc7\x2f\x24\xb1\x11\x99\x81\xd0\x80\xd0\x8b\x04\x47\xf5\x92\x69\x62\x30\xde\x05\x1f\x28\x16\xd2\x85\x02\x41\x5f\xa6\xda\x33\x70\x99\x81\xdd\xc4\x7c\x82\xc7\x9b\x27\x1a\xed\xb0\x10\xf8\x73\x35\xb5\xe5\x87\x8a\x3f\x97\x73\x16\x72\x82\x42\x66\x57\x46\x81\xcd\xc8\x8a\x36\xbb\x17\xe8\xa1\x02\x6d\x8b\xcb\x98\x89\xb2\x84\xeb\x65\x16\x01\xd9\x5d\x8d\xa8\xa1\x00\xca\x07\x97\x3c\xe4\x58\x4d\xa5\x3b\xf0\x51\x97\x91\xa7\xfe\x69\x27\x12\x8e\x7c\xdf\xcc\x40\x66\x05\x86\xe4\x51\xcd\x69\xbc\x0e\xe8\x70\xc9\xa3\x4b\x9a\x28\x21\x93\x87\xa8\x07\xc2\x52\x04\x9f\xbe\x98\xb1\xb2\xf0\x07\x6f\x99\xfa\x77\xc1\xe5\xaa\x74\xdc\xad\x32\x4d\x55\xf0\xf1\xf2\x5d\x60\x26\x26\x75\x95\x01\xb7\x80\x7a\x83\x52\xde\xf3\x4e\x17\x0f\xca\x7d\xd2\x4c\x6f\xf5\xac\xb6\x8d\xad\x77\xdf\x6c\x1a\xf9\xba\x69\x9e\x80\x9c\xbc\xc5\x92\xc9\xad\x0a\xfe\xc1\x75\x7d\x41\x98\x3a\x9b\xb8\xeb\x6c\xc7\x2d\x15\x8c\x19\xaa\xbc\x8c\x1f\xa6\x61\x99\x56\x05\xb8\x3a\x29\x76\x3c\xa8\xf3\x60\x68\x16\x87\x35\xc4\x73\x82\x7c\xcb\x19\x56\xbe\xc3\x61\x06\x56\xc1\x73\x42\xac\x08\x53\xbb\xfd\x77\x2c\x38\xd5\x90\x7f\xb1\x6d\x5f\x74\x2d\xba\xaa\xa9\x94\x06\x11\xad\xf6\xc0\xf6\xb6\x8d\x1d\x00\xa9\x83\x7c\xcf\xef\x27\xbf\x9e\x9c\x60\x73\x28\x51\x3b\xd5\x45\x53\x12\x3f\x8f\x9b\x5b\x7f\x1e\xc3\x9c\xe1\x44\xf4\x0a\x7e\xba\x1b\xdb\xe3\x99\xf3\x81\x39\x9b\xdd\x64\xdb\xce\xdb\xb9\xec\xb4\x2c\xa3\x01\x01\x5f\xbf\xc1\x0c\xf3\x0a\xda\xc7\xb6\x07\x6d\x8f\xdb\xd1\x4d\xc3\xaa\x87\xb9\x99\xec\x66\x9a\xd2\xa7\xf5\xb2\x6b\xd7\xaa\x3c\xee\xb9\xfd\xc9\xa3\xbd\xe3\x7a\xd9\x91\x00\xfa\x2e\x91\x4f\x47\x69\x2a\x35\x4d\x5a\x3f\xc9\x59\xfa\x7c\xf4\x8c\x07\xf2\xbd\x57\xd5\x84\x0b\xf5\x3a\x8b\x4a\x2f\x35\x6e\x42\x76\x3f\xf4\x2b\x95\x53\x59\xfe\x40\xe0\xb4\x60\x06\x2f\x77\x08\x86\x9d\x51\xba\x40\x45\x18\x8a\x9f\xd3\xe7\xa4\x15\x9e\xe3\xae\xdb\x5e\x7f\x98\x6e\x71\x92\x8a\xf7\x7f\x5a\x17\x92\xed\xb2\x6c\x9e\x18\x52\xdb\x83\x3f\x1a\xe8\xe5\xc5\xa0\xe7\xe2\xb1\xad\xa2\xbc\x8a\x4c\x1e\xf5\xe4\xa0\x37\xed\x7f\x37\x98\xcd\xbe\xb9\xaf\xcd\xa8\xfe\xff\x2e\x59\x63\xeb\x2c\x7b\x41\x1b\x00\x56\x41\x70\x19\xc2\xf1\xcc\x4b\x18\xee\x17\xa2\xa3\x37\x5e\x5c\x3d\x85\xbf\xc3\x49\xe7\xd5\xff\x0c\x5b\xb7\x4c\x09\xcd\xeb\x97\x14\x4b\x0d\x5c\x15\x04\x41\x49\xec\xe6\x73\x09\xb6\xdd\x2f\xc2\xb2\xb1\x32\xad\x79\xd5\x66\x81\x79\x00\x6a\xf7\x2c\x7e\xc7\xe2\x47\x42\xf5\x54\xe2\xbd\x85\x74\x3e\xe8\x0d\xf5\x78\x35\x94\xba\xc7\xeb\x49\xd9\xec\xde\x3d\xc5\x57\x8f\xee\xd0\xd3\x94\x56\x0f\x39\x94\x99\x26\x0e\x7a\xd5\xbd\x4c\xc1\x74\x8c\x42\xf2\xc8\x27\x81\xf7\xca\x5a\x4e\x5f\x55\x2f\xff\xbd\xef\x29\x88\x6a\xc7\x97\x8c\xda\xc5\xe6\x1e\x3f\xf4\x4c\xe4\x3d\x10\x91\xfe\x43\x9e\x81\x06\x1f\x80\xaa\xa7\x1f\xa7\xdd\x5d\x39\xb6\x9f\xee\x4e\x6d\x1f\xef\x95\xda\x1e\x31\x54\xd4\x71\x48\x6c\x8e\x6b\x66\xaa\xe1\x88\x2b\xef\x2a\xdb\x8e\xef\xfd\x0b\xcb\xa0\x99\x1b\xa4\xef\xab\xc3\x4f\xc7\xcc\x4f\x5f\xf6\xe0\xa6\x72\x7f\xca\x31\x01\x4e\x2e\xa8\x2c\xd6\x20\xa6\x11\x3b\x3d\xed\x09\xfe\x52\x74\xc0\xdb\xad\xca\x56\x6f\xe3\xee\xf4\xd7\xf6\xc6\x1d\xf1\xf9\x75\x79\x4f\xef\x7e\xb2\x6e\xca\x0f\x3c\x4c\x1b\xa6\xd6\xb8\x5f\xbe\x34\x67\x2c\x37\xf0\x33\x59\x0f\x91\x4a\xd1\x66\x77\xd7\x63\x09\x74\xae\x9f\x49\x87\xde\xc1\x36\x03\x1c\x6f\x3e\x46\xf9\xec\xbd\x22\x1d\xff\x27\x0a\x77\x70\xb8\xfe\x83\x07\xa5\xdd\x66\x74\xf5\xe0\xdd\x97\xe1\x8f\x9e\x61\x38\xe7\x0e\xbf\xe0\x77\x06\xa6\xff\xb7\x98\xea\xdf\xff\x05\x00\x00\xff\xff\x92\x76\xba\xd5\x5c\x22\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8796, mode: os.FileMode(420), modTime: time.Unix(1431834998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/.configureapi.gotmpl.swp": templates_server_configureapi_gotmpl_swp,
	"templates/server/.main.gotmpl.swp": templates_server_main_gotmpl_swp,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/configureapi.gotmpl": templates_server_configureapi_gotmpl,
	"templates/server/main.gotmpl": templates_server_main_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			".configureapi.gotmpl.swp": &_bintree_t{templates_server_configureapi_gotmpl_swp, map[string]*_bintree_t{
			}},
			".main.gotmpl.swp": &_bintree_t{templates_server_main_gotmpl_swp, map[string]*_bintree_t{
			}},
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"configureapi.gotmpl": &_bintree_t{templates_server_configureapi_gotmpl, map[string]*_bintree_t{
			}},
			"main.gotmpl": &_bintree_t{templates_server_main_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

