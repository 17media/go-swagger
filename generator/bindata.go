package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x4e\xc4\x20\x10\x86\xef\x3c\xc5\xa4\x59\x13\x4d\xb4\x7b\xdf\xc4\x93\x7a\xf0\x62\x4c\xdc\x07\xd8\xb1\x9d\xb6\xb8\x05\x2a\x4c\x77\xd3\x10\xde\x5d\xa0\x6d\xd6\xf5\xe2\x0d\xca\xf7\x4f\x7f\x3e\xbc\xaf\xa9\x91\x9a\xa0\x50\xa6\xa6\x7e\xb0\x66\x20\xcb\x53\x11\x82\xf0\x5e\x36\x50\x3e\x9b\xea\x83\xad\xd4\x6d\x08\xde\x5f\xef\x48\xd7\x19\x2b\xdf\x97\xd4\x1b\x2a\x0a\x01\x12\x87\x8c\xfb\x69\x48\xbb\xc3\x97\x33\x7a\x57\x24\x0c\x2d\xaa\x99\x29\x0e\x62\xcd\x8b\x01\xab\x23\xb6\x04\x99\xc8\xcb\xf4\x75\xbb\x85\x7d\x27\x1d\x34\xb2\x27\x38\xa3\x83\x96\x34\x59\x64\xaa\xe1\x73\x02\xee\x08\xdc\x19\xdb\x96\x2c\xb0\x31\x7d\x99\xf8\x97\x5a\x72\xac\x16\x0f\xd7\x9c\x92\x6d\xc7\x10\x2f\x75\x22\x68\x46\xce\xa3\x3a\xd2\x30\x99\x11\x2c\x3d\xd8\x51\x5f\x4d\x5a\x7f\x01\x95\x51\x0a\x75\x2d\x16\x07\xaf\x6a\x30\x96\x5d\x08\x72\x5e\xc0\xad\x80\x58\xd7\xa2\x8e\xb5\x37\x47\x9a\xee\x61\x73\xc2\x7e\x24\xd8\x3d\xfe\xa2\x33\x94\x8e\xb3\x93\x58\x43\x6a\x6e\xa0\xb8\xf9\x2e\x16\x7c\x41\x66\x0f\x77\x17\x23\xff\x98\x5f\x41\x8e\x82\x93\xb5\xa7\x1e\x9d\x5b\xdc\x3b\xb6\x63\xc5\xe0\xc5\x5a\x6f\x7d\x1c\x49\x2e\x27\x99\xd4\xd0\xa7\x3b\xfe\x79\x70\x28\x2f\x83\x45\x10\x3f\x01\x00\x00\xff\xff\x80\x30\xad\xe3\x18\x02\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 536, mode: os.FileMode(420), modTime: time.Unix(1424678182, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x09\x19\x10\xaf\x89\xd2\x01\xc3\x1e\xd6\x65\x40\xd1\x65\x68\x80\x2e\x0d\x9a\xae\x2f\xc3\x80\x32\xf2\x49\x66\x2b\x91\x0a\x49\x25\xf1\x04\x7d\xf7\x1d\x49\x51\xb6\x64\xd9\xb1\x1d\x0c\xe8\x93\xa4\xbb\xe3\xdd\xef\xfe\xfd\xa8\xba\x9e\x61\xca\x05\x42\x54\x2a\x5e\x70\xc3\xef\xf1\x9e\xe5\x7c\xc6\x8c\x54\x51\xd3\x4c\xea\x9a\xa7\x10\x7f\xc0\xbb\x8a\x2b\x9c\x91\x80\x3e\x51\x29\xf8\xe5\x1c\x5a\x3b\x2e\x45\xa7\x3f\xae\xeb\xf8\x9a\x99\x79\xd3\x9c\x40\x44\xef\xef\x64\xe2\x0c\x9a\x26\x3a\x01\xfa\xfe\xc4\xf2\x0a\x2f\x1e\x4b\x85\x5a\x3b\xf1\xf4\x95\xf3\xf6\xdd\x39\x08\x9e\x43\x3d\x01\x50\x68\x2a\x25\xac\x74\x62\xa3\xa3\x98\x75\x28\xfe\xe4\xe2\x1d\x8a\xcc\xba\x1f\x87\xd1\x19\xec\x8d\xc3\x49\x57\xfc\xef\x87\x8b\x3d\x3e\x81\x2b\x18\x1c\x88\x6b\xe9\x7f\x2f\x5c\x14\xc9\xa0\x12\x9b\x50\xb5\xea\x03\x30\x7d\xf6\x47\xbc\xf3\xcf\xfb\xf6\x90\x17\x55\xb1\xa5\x83\x56\xbd\x15\x53\x9a\x4b\x66\x7e\xfe\xe9\x78\x74\x9e\x42\x23\x7d\x10\xf7\x75\xf1\x98\xe4\x95\xa6\xc1\xee\xc4\xfb\x76\x77\x2b\x62\xaf\x7e\x2e\xe2\x10\x64\x80\x38\x88\xf7\x43\x5c\xe5\x86\x97\x39\xbe\x4f\x37\x82\xee\x2c\x9e\x8b\x7b\x25\xd4\x5e\x18\x2f\xc4\xe6\x92\x5a\xdd\x61\x9b\xe2\xbd\xee\x0c\x24\x3c\x03\x05\x26\x95\x36\xb2\x48\xa5\x2a\x98\xe9\xb1\xe0\x28\xcc\x3f\x9c\xdd\x13\x25\xb4\x02\x6f\xe8\x3e\xb5\x51\x5c\x64\x9b\x0a\xea\x23\xeb\x9d\xf1\x07\xdc\x3a\xe7\xc9\x18\x6d\x5f\x21\xce\xf4\x0d\xff\x17\x9d\x84\x40\x2a\x56\x5c\xb1\x82\x3e\xad\xd0\xa6\xc3\x85\xed\x6f\x8e\x62\x1c\xd2\x74\x7d\x7b\x2f\x0d\x16\x7a\xcb\xfa\x3a\xfd\x53\xdd\x1b\x20\x09\x4b\xdb\xfa\xde\x77\x3d\xb7\x43\x6a\xf5\x07\x41\xea\x7c\xef\x05\xe9\x2f\xc1\xef\x2a\xdc\x8a\x6a\xc5\xe4\xff\xbd\x33\xbf\x89\x3d\xb3\x40\x6e\x68\xee\x73\xbc\x49\xe6\x58\xb0\x1b\x3b\xaf\x40\xaa\xb3\x33\xd0\x4e\x0e\xda\x29\x46\x23\x4e\x68\x2d\x80\x5b\xec\x2f\x5f\xd1\xf3\x57\xd8\x38\xae\xa4\x7e\xf1\x82\x80\xd4\xb5\x62\x22\x43\x88\x43\x0f\x80\x1c\xd3\x6b\x99\x33\xe3\xfe\x74\x64\x89\xca\x2c\x96\x1b\x03\xf1\x0a\x1f\xb8\xb7\x5c\xa3\xc7\x27\xa4\x59\xc7\x78\xdd\x7a\xf0\xf3\xf2\xcc\x78\xbe\x3e\xaf\x67\x33\x6e\x0b\xcf\xf2\xa5\x93\x2e\x71\x0a\xe9\xa4\xf4\x1b\xd0\x34\xb6\x08\x54\x05\xb7\xb5\x53\x38\xed\x2b\xad\xe0\x47\x6b\xe1\x0a\x01\xb0\x13\x12\x80\x95\x9c\x09\xcc\xc6\x02\xc3\x6f\xfd\x68\x83\xa6\x4b\xa5\x87\x79\x5c\x49\xf3\x3a\xcf\xe5\x03\xfd\x1b\x46\x63\x2e\xa3\xb5\xb1\x9b\x8e\x52\xf4\x90\xf2\xe4\xed\x17\x4c\xfa\x24\x4d\xcd\xf2\x04\x0e\x5e\x69\xa1\xfe\xce\x0c\xfb\xb8\x28\xb1\xb7\x02\x63\x38\xac\xc4\xba\xc2\xe3\x43\x49\x78\xbd\xb6\x5d\x6f\x2f\xf5\x75\xf8\xb9\x6e\x9a\x7e\x3f\xd6\xfe\xb9\xc3\x68\x50\x33\xc0\x9f\x7d\xe3\x92\xf2\x97\x08\xfd\x72\xf5\x3d\x8c\x5f\x59\x23\x4e\xa4\x30\x8c\x70\x0e\x8e\x0f\x6e\x8e\xb1\x73\x64\x8a\x8f\xef\x5d\x45\xfb\x67\x87\x2d\xb0\x87\x87\x0d\x2b\x59\xf2\x95\xd1\x66\x38\x96\x71\xaf\x24\xb4\x9d\xfa\x38\xe7\x1a\x52\x4e\x5b\xf5\xc0\x34\x64\x48\xc8\xc8\xe9\x0c\x6e\x17\x60\xe6\xb4\x6a\x0f\x2c\xcb\x50\x81\x91\x32\x8f\xad\xfd\x85\x9d\x2a\x91\x91\x32\x9c\x2b\x78\x36\x37\x40\x55\xbf\x47\x48\x2b\xe3\x5c\xcd\x51\xc0\x42\x56\xd4\xaa\x53\x55\x89\x9e\xa7\x10\x02\x12\x59\x14\x4c\xcc\x26\x13\x5e\x94\x52\x19\x38\xa6\xd6\x46\x19\x37\xf3\xea\x36\x26\xdd\x59\xc2\x74\xc5\xf2\x2f\xbc\x38\xcb\xe4\x69\x7b\xfa\xcc\x0f\x77\xb4\x8b\x29\x5d\xf1\x69\x61\x76\x32\x5d\x72\x71\x34\x71\x9c\xe1\x69\xe4\xe8\x2b\x2e\x4e\xe0\xe8\xde\xce\xa8\x9d\xd7\xf8\xd2\x21\x0d\xc4\x62\xd5\x76\xf5\x6a\x4a\x9e\xee\xef\x14\xa2\xef\xef\xa2\xd6\xbc\x35\xf1\xc5\x9f\xba\x4a\x87\xc1\x0e\xcc\x8f\xda\x17\x91\x5a\xf2\xb6\xa2\x4a\xbc\xc9\x99\xd6\x2d\x91\xa5\x95\x48\xc0\xae\xfe\x07\x4c\x90\xc6\x52\x79\x39\xfc\x40\xa2\x15\xbb\x29\x0c\xb7\x05\x7c\xd6\x74\x2e\xe3\xf4\xba\x98\x7a\x3a\x70\x7b\xe3\x77\xe0\x2d\xd3\x9f\xba\x74\x7d\x2a\xf7\x4c\x51\xa7\x34\xfc\xfd\x8f\x33\x5e\x2d\x41\x60\x58\x8e\x21\xeb\x0d\x3e\x7a\x5b\xdd\x47\x1d\x87\x84\xd7\x08\x7b\xf3\x8e\x83\x03\x74\x0e\xac\x2c\xa9\x86\xc7\xf4\x71\x62\x4d\xa6\x8e\x22\x97\x95\x5d\xbe\x79\x08\x96\x30\xc9\xd6\xf2\xe3\xcb\xce\xcf\x2a\x2b\xda\x35\x92\x9a\x1b\x5c\xe2\xbf\xb0\x1a\x7b\x2a\x8e\xe3\x75\xff\xed\x71\xc2\xe5\xc8\x06\x8e\x92\x50\x7e\x37\x11\x5d\x33\x60\xf5\xfa\xe9\x15\x6d\x43\xc9\xb6\xf5\x78\x19\xc4\xf6\xf8\xc9\xf2\x6d\x6f\xfa\x93\xb7\xce\x7a\x96\x7d\xee\xf8\x2f\x00\x00\xff\xff\xab\xf0\x81\xc3\x9b\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4251, mode: os.FileMode(420), modTime: time.Unix(1425183236, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\x5b\x6f\x1b\xbb\x11\x7e\xae\x7e\xc5\x40\x48\x8a\xdd\x40\x91\xfc\x58\x18\x70\x01\x37\x49\x11\xb7\x4d\x6a\xd8\x4e\xf3\x60\x18\x05\xbd\x4b\x49\xac\xf7\x16\x92\x6b\x55\x35\xf4\xdf\x3b\xc3\xcb\x2e\x57\xbb\x52\x24\xdb\xc1\x39\xc1\xc1\xc9\x8a\x1c\xce\x7c\x73\x1f\x32\x15\x4b\x1e\xd8\x82\xc3\xd3\xd3\xf4\xd2\x7e\x6e\x36\xa3\xd1\x6c\x06\x37\x4b\xa1\x60\x2e\x32\x0e\x2b\xa6\x60\xc1\x0b\x2e\x99\xe6\x29\xdc\xaf\x41\x2f\x39\xa8\x15\x5b\x2c\xb8\x04\x5d\x96\xd9\x94\xe8\x3f\xa5\x42\x8b\x62\x81\x9b\xfe\x5c\x2e\x16\x4b\x0d\x95\x2c\x1f\x39\xcc\x6b\x6d\x58\x2d\x79\x01\xeb\xb2\x06\xc9\xdf\xcb\xba\xe8\x70\xf2\x22\x20\x29\xf3\x9c\x15\xe9\x68\x24\xf2\xaa\x94\x1a\xa2\x11\xc0\x58\x69\x89\xdc\xd5\x98\xbe\x0b\xae\x67\x4b\xad\x2b\xf3\x63\x21\xf4\xb2\xbe\x9f\xe2\xa1\x59\xc2\x54\xcd\xb2\xff\x88\x7c\xb6\x28\xdf\x3b\xb6\x87\xd0\xcc\x54\xc5\x93\xc3\x08\xb5\x9c\xe7\xfa\x20\xd2\x5c\xa4\x69\xc6\x57\x4c\xf2\x23\xc9\x67\x8a\x27\xb5\x14\x7a\x3d\x1e\xe1\xc1\xa7\x27\xc9\x0a\xf4\xcf\x9b\x07\xbe\x9e\xc0\x9b\x47\x96\xd5\x1c\x4e\xcf\x60\x7a\x61\x8c\xa3\xd0\x5b\x44\x44\xdb\x9b\x0d\x7e\xa0\xbd\x45\xa1\xe7\x30\x7e\xfb\x63\xec\xc8\x1d\x09\x2f\x52\xfc\x8a\x8d\x73\xbf\xf2\x15\x3a\xfc\xbc\xaa\xbe\xb2\x1c\xf7\xcf\x2f\x2f\x20\x91\x1c\x8d\xaf\x80\x41\xc1\x57\x10\xee\x82\x28\x94\x66\x45\xc2\x47\xf3\xba\x48\x06\xce\x46\x64\x3f\x78\x47\xff\x9f\x7e\x2c\x93\x3a\xe7\x85\x8e\xe1\xdd\xb6\x84\x27\x03\x63\x7a\xc5\x13\x2e\x1e\xb9\x74\xcc\x51\x97\x3f\x6e\x51\x12\x21\x00\xb1\x3b\x05\xff\x35\x31\x6b\x4b\x8c\x8b\x8c\x4b\x75\x0a\x39\x7b\xe0\x51\xce\xaa\x5b\x1b\x18\x77\x14\x0f\xd3\xcf\x76\x3b\xb6\xc4\xf3\x52\xe6\x4c\x23\x2d\x58\xb7\x4d\x3f\xf2\x39\xab\x33\x4d\xbb\x9b\xd1\x10\x18\x74\x4f\xa1\xf9\x7f\x35\x9c\x01\xb4\x0e\x99\xa2\xc6\x57\x65\xad\xd9\x7d\xc6\x3f\x58\x02\xa3\xf1\xa4\xcf\x60\x02\x85\xc8\x62\xe2\x2d\xb9\xae\x65\xd1\xa7\x18\xd9\xec\xea\xd9\xe6\x69\x7a\x51\xcc\x4b\x84\xa8\x12\x29\x2a\x2d\xca\x02\x69\xf5\xba\xe2\x3d\x52\x54\xa6\x4e\xb4\xb1\xa6\xb1\x7b\xfb\xa7\xeb\x01\xdc\xf7\xea\xf8\xfd\x40\x27\xa7\xc8\xa8\xb5\xa9\x23\xda\x61\xd3\x51\x63\x4f\xcf\xcd\x19\xf5\x8a\x2f\x04\x7e\xae\x83\x58\x25\xe6\x0a\x31\x60\x70\x5a\x55\x3f\x64\x4c\x29\xab\x81\xdb\x92\x68\x20\x3a\x47\x72\x19\xe1\xb4\x8b\x28\x02\x7f\x8e\xf1\xc8\x17\x9e\x0a\x76\x83\xfa\x6f\x36\x63\xf4\x45\xce\x81\x8c\x61\x9d\x36\xc4\xce\xe5\x91\x17\x2d\x83\x90\x0f\x80\x5d\xca\x32\xad\x93\x41\x60\x6e\xab\x0b\xac\xf2\x8b\x47\x03\x6b\xd8\x79\x60\x7e\x61\x18\xd8\xb5\xcb\x79\x0c\x51\x51\x08\x72\xbf\xcf\x6c\x31\xc7\x5c\x57\x7f\x61\x4a\x24\xe7\xb5\x5e\x0e\x20\xa7\xe5\x0e\x6a\x4a\x53\x62\x81\xe5\x95\x69\xd0\x98\x29\x0a\x6a\xc5\x65\x81\xe4\x80\xee\x84\x0a\xcf\xae\x4a\x99\x9a\x1f\x36\x52\xad\xb6\xa2\x48\x44\xc5\x32\x14\x8c\x52\x04\x16\x6f\x2e\xc9\xeb\xb8\x89\x32\x30\xa6\x44\xc2\x0c\xe3\x15\x56\x33\xb8\x27\x4c\x66\xa7\xa7\xbd\x81\x44\x30\x22\x1b\x4a\x13\xb0\x7f\xc7\x10\x51\xa3\xf1\x72\x28\x61\xb8\x94\xa5\x8c\x5b\xab\x78\x8d\x31\xd4\xff\xce\xd7\x2f\x51\x99\x61\x73\x7a\xc0\x7e\xf3\x5c\x25\x51\x3f\xec\x77\x25\x31\x00\x56\x09\xc0\x12\x4b\x30\x5c\xdd\xa2\xbe\x26\x52\x24\x10\xb6\x8d\xe1\xce\x75\x59\xcb\xc4\x97\xdb\x7d\xe6\x38\xc0\x0c\xc3\x61\xf2\xcf\x8a\x5a\xa4\x8d\x8e\x9e\x51\x5c\xa6\x82\xe2\x98\xa4\x04\xa9\xf4\xd4\x3e\xc7\x4d\x18\x3b\xb0\x9f\x6b\x6c\xb2\xc1\xe9\x96\xba\x09\xbb\x66\x20\x18\x96\x13\x8e\x0c\xd3\x41\x12\xab\x44\xa6\xf6\xb1\xd8\x75\xaa\x67\x04\xd4\xf7\x9a\xcb\x47\xfe\x89\x2c\x05\x38\x64\x24\x2c\xcb\xd0\xfe\x66\xa6\x40\x17\x71\xbf\x2e\x6d\xc1\x4d\x27\xa4\xaa\xe4\xb4\xc4\x20\xb5\xb5\xdf\x5b\xc2\xf2\xbb\xaf\xb5\x99\x46\x12\x3c\x8e\x56\xa3\x6f\x09\xe5\xca\xc5\x37\x4d\x32\x48\x17\x08\x35\x5d\x85\xdc\x68\x2a\xe3\x15\x57\x15\x7a\x82\x7f\xc7\xc4\xe5\x72\x02\xef\xdc\xea\x8f\x9a\x2b\xdd\x78\xd4\xd6\xfb\xbf\xba\xda\xe9\xe3\x90\x9c\xe0\xe3\x17\x75\xb0\x61\xe1\x2b\xac\xed\xb3\x51\xbf\x57\x6e\xb7\xd4\xd8\xf3\x8d\xe2\xed\x72\x8c\xfd\xe1\x0f\xbb\x7a\xd0\xd4\xcb\xb1\xd8\xae\x1c\x0e\xcb\xab\x5b\x98\x6b\xa5\xcb\xdc\xe1\x02\x9c\x26\x44\xca\x74\x29\x8f\x00\xd8\x65\x1e\x99\x12\xe4\x6b\x82\x63\xeb\x90\x5b\x8a\x49\x2b\xc5\x6f\xfc\xcb\x2f\xc4\xc3\x23\x84\x57\x67\x7a\x9e\xa6\x46\x80\xe7\x1c\xf0\xf2\x7e\x70\xbc\xb8\xdf\xe1\xa1\x2b\x5c\x6a\x05\x19\x1d\xea\x72\x84\xd2\x5e\x0a\xba\xc5\x46\x25\xe1\x7e\x64\x12\xea\x22\x70\xfa\xed\x9d\x35\xc4\x70\xe7\xc4\x55\xcc\xc1\xbe\xb2\x3b\xfa\xdf\xd9\x19\x8d\x1e\x60\x47\xa7\x8e\x98\x33\x2c\x5e\x15\x26\x51\x14\xae\x4e\x4c\x2f\x1b\x60\x34\x8e\xcd\x74\xf4\x93\xee\x79\x18\xb8\xa6\x07\xbe\x14\x9c\x67\xb4\x0f\xdc\xae\x0e\x7a\x00\x4e\x53\x9e\x5f\x8a\x91\x98\xec\xc3\x17\x96\xee\xc3\x60\xf9\x22\xf9\x52\x64\x8e\x4f\x0f\x9c\x45\x91\xf1\xa2\x73\x3c\x86\x3f\xc3\x89\x13\xe6\x0a\x08\x25\xa1\x29\x80\xf3\x68\x9c\x0b\xa5\xa8\x54\x85\x19\x73\x0a\x6f\xd5\xd8\xb7\x78\x35\xfd\x5b\x29\x8a\x6d\x44\xf8\x5f\x1c\xfb\xb9\xdb\xb1\x45\xa5\x30\x2b\x3b\x65\x1d\x6b\x00\xde\x03\x35\x95\x1e\x9b\x38\x61\xe3\x62\xb0\x40\x5b\x15\x41\x5b\x13\xe9\x11\x49\xd9\x91\x12\x35\x4c\x2e\x3e\x36\xb3\xc9\x91\xa5\xdd\x18\x69\x67\x8d\x6d\xc5\x59\x25\xcf\xdb\xe1\xa2\x94\xaa\x51\x94\x0a\x0d\xeb\x6c\x35\x4d\x9a\xa6\x79\x31\x17\xd4\x1e\x5c\x6c\x83\x4a\x96\x1c\xab\xc3\x11\x5a\xf7\xc4\x46\x8e\x47\x38\xe8\x9b\x7b\x83\x4f\xa0\x6b\xb3\x1f\x77\xf6\xdd\x0c\xdb\x61\xe6\x8a\x31\x0d\x0a\xbb\x72\x4f\x72\x45\x3d\x17\xaf\x78\xdb\xd7\xb5\x41\x8e\xb1\xbd\x64\x80\xad\xe1\x16\x27\x1d\xb6\x19\xe4\x71\xbb\xdb\x21\xb6\xe8\x64\x69\x48\xdd\xca\x01\xb5\x80\xfe\xe0\xed\x9b\x9b\x0c\xb1\x46\x1a\x9f\x8e\xfc\x85\x66\x60\xd6\xb6\x0a\xdc\x92\x94\x3b\xcc\x36\xef\x87\x69\x43\x12\x59\x4f\xd4\x13\xa8\xda\x11\x17\x2f\xe0\x38\x52\xb2\x84\x3f\x6d\xda\x58\xd9\x1d\x29\xfd\x3a\x62\xf8\xc5\x9b\xb8\x2d\x23\x5d\x84\xe1\x6c\xbc\x0b\x62\x4b\xe3\x3c\x6e\x14\xf6\x66\xc5\xdb\xe6\xc4\xc6\x3b\xce\xc8\xaf\x89\x1c\xd9\xc5\xb0\x8d\x3c\xfc\xb5\x71\x55\xc8\x31\xb5\xf0\x83\x41\xb1\x5b\x1f\xda\xb3\xb6\x7f\xfb\x36\xd5\x4d\x20\x7f\x7f\x1c\xca\x9d\x9c\xee\x6b\xe6\x8e\x76\x4c\xda\x84\x72\xa2\xdc\x5f\xf9\x54\xd3\xb3\x07\xd3\xa3\x69\xc6\x6d\x66\x74\xfa\xf9\xcf\xd3\xc1\x73\xf0\x99\xf0\xef\x09\xe4\xba\x4d\x81\x00\x48\x27\x0b\x72\xdd\xcf\x81\x8e\xe4\xce\xce\x79\x96\x61\x71\x12\x38\xa3\xfc\x0f\x15\xec\x27\x46\x78\xc3\x6d\xb3\xc3\xc5\xd9\x36\x01\xc5\xdc\xa1\x43\xca\x40\x34\xbc\x66\x6c\xf8\x29\xa1\x1b\x1b\xfe\x0a\xff\x7a\xb1\x11\xca\x39\x38\x36\x9a\x59\xc8\xc7\x46\x77\x9a\xfa\x79\x68\x78\x06\xaf\x10\x1a\x1d\xc9\xbf\x6d\x68\x04\xaf\x22\xbf\x32\x34\xdc\x08\x14\x8c\x17\xe1\xdb\x56\x13\x19\xcd\x9d\xfe\x99\x23\x46\x2b\x66\x70\xbe\x88\x42\xa1\x13\xb8\x2f\xcb\xcc\x0e\x11\x6e\x0c\xeb\x1b\xcb\xbf\xcd\xc5\x34\x04\xfa\xa9\xac\x4f\x46\x4d\xce\xb1\xfd\xc0\xb0\xbe\x47\x7e\xd4\x1b\x9c\x32\x9b\x07\xbf\xce\x60\xd9\x5a\x0f\x1b\x03\x43\x9b\x3a\x16\xcb\x09\x60\x87\x38\x1d\x72\xa5\x67\x74\x1b\x28\x7b\xd7\x3a\xc2\x9c\x24\x07\x1c\x6e\xc0\xbe\x22\xde\x3e\x7b\xde\x6a\x43\x2d\xf6\x3d\xe9\xee\x7f\xd1\xed\x9f\xdc\xff\xc6\xeb\x67\x69\xaa\xf2\x5b\xb3\xfd\x3e\x93\xef\x7f\xb8\xde\x73\x61\xd8\x7a\x92\xd9\x2b\xe6\x36\x98\x6f\x5c\x16\xb6\x2f\x35\xf6\xfd\x3e\xc8\xc1\x01\xd5\x9d\xd1\x06\xb4\x1f\xbe\xa3\xc4\xdd\x4c\x3c\x1c\xd9\x2f\x04\x33\xf0\x8a\x16\x96\x04\x33\x9f\x07\xff\xea\x41\x7e\x68\xae\x1b\xba\xc4\x41\x8a\xf6\xa9\x2a\xd0\xa3\x7b\x89\x32\xe1\xf3\xcd\xcd\x25\x1d\xa5\xe7\xa2\x7b\x4e\x4f\xaa\x29\xa4\x42\xf2\x44\x67\x6b\x7a\x34\x30\xae\xfc\x07\x5d\x7a\x8a\xf3\x22\x35\x02\xa2\xf1\xe9\x9f\x4e\x4e\x4e\xf0\xfe\xc3\x2a\x61\xef\x04\x11\x5e\x84\x8e\xbc\xb5\x60\x1a\x74\xea\xd5\x2f\xac\x19\xfb\xae\x34\xce\x11\x34\x5a\xba\x93\x51\x1c\x5a\xf3\xbb\xd0\xcb\x6f\x17\xcf\xb3\xa9\x28\x92\xac\x4e\xcd\xa9\x36\x4f\xed\x6b\xae\x39\x45\x1b\xfe\x5f\x0a\x6b\x41\xaf\xb2\x33\xf7\xf3\x7d\x2d\x5e\xee\x14\x0b\xfd\x19\xae\xf1\x07\x7f\x57\x0e\xfa\x76\xf1\xa5\xb1\xe1\xee\x84\xea\xf8\x91\x1c\xf9\xff\x00\x00\x00\xff\xff\x55\xd4\x7d\x1e\x0c\x1e\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 7692, mode: os.FileMode(420), modTime: time.Unix(1425184622, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_main_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\x3d\x6f\xdb\x30\x10\x9d\xad\x5f\x71\x21\x50\x40\x6a\x63\xaa\x73\x0a\x0f\x59\xda\xba\x68\x3e\x10\x27\xe8\xd2\x85\x91\x4e\x12\x13\x8a\x14\x48\xca\xaa\x21\xe8\xbf\xf7\x48\x4b\x89\xe1\x2e\x9d\x04\xdf\x3d\xbe\x7b\xef\xdd\xb9\x13\xc5\xab\xa8\x11\x5a\x21\x75\x92\xc8\xb6\x33\xd6\x43\x9a\x00\x30\x65\x6a\x16\xbe\xc6\xc5\x8f\x46\x9f\x37\xde\x77\x2c\x09\xbf\x6a\xe9\x9b\xfe\x99\x17\xa6\xcd\x0b\xe1\x7a\xa1\x5e\x64\x9b\xd7\x66\xed\x06\x51\xd7\x68\x73\xd7\x61\xc1\x92\x2c\x49\xf2\x1c\x1e\x1b\xe9\xa0\x92\x0a\x61\x10\x0e\x6a\xd4\x68\x85\xc7\x12\x9e\x0f\xe0\x1b\x84\xf9\x09\x78\x63\x14\x0f\xf8\x1b\xf1\x4a\xd5\xde\x22\x68\xe3\xa9\x0c\x66\x8f\x76\xb0\xd2\x23\xe1\x17\x2a\x51\x79\x7a\x73\x30\xfd\x09\xa1\xf4\xf0\x8c\x85\xe8\x1d\xb5\x95\x0a\x4d\x0b\x58\x4a\xef\x60\x30\xbd\xa2\x81\x08\xca\x38\x7f\x11\x86\x6c\xfd\x5c\x34\x5a\x1d\x42\x67\x19\xe2\x51\x83\xac\x22\x33\xfe\xe9\x94\x2c\xa4\x27\x40\xf0\x23\xab\x03\xac\xd7\x52\x17\xaa\x2f\x71\x1d\x02\x83\xca\xd8\xe8\x61\xd1\x10\xe7\x52\xcd\xf5\x5d\x0c\x92\xf2\x69\x85\x2e\x5d\x92\xec\x85\x5d\x9c\xfe\xd8\xdd\xdd\xc2\x06\x5e\x9c\xd1\xfc\x41\x0c\x37\xe8\x1c\x6d\x20\x1d\x47\xbe\x7b\x07\x4c\x13\x85\x57\xf5\xba\x88\x9b\x49\x33\x18\x29\xf6\x99\x60\x47\x62\x2e\x01\xad\x85\xab\x4d\x54\xc6\x6f\x71\x48\x4f\xd8\x2f\x81\xb1\x8c\xf0\xe4\x23\xa0\x2e\x36\xa0\xa5\x8a\x0c\x40\x09\xd4\xfc\xab\xf0\x24\x54\xa7\xd4\x0c\xb0\x29\xac\x34\xea\x25\x3e\xe3\xf8\x37\xa4\x10\xf6\x29\xbb\xbf\x7b\x78\x5c\x78\x62\x7b\xb3\x21\xe2\x99\xe7\x58\x00\xf6\x99\x2d\x0c\xa2\x93\x91\xa0\x0b\x51\x48\xa3\x5d\x90\x45\xae\xae\xbb\xee\x56\xb4\x38\x4d\xd7\xf7\xdb\xf4\xc4\x42\x60\x2e\x8c\xae\x64\x4d\xbb\x0e\x3d\x22\xc8\x02\x91\x92\xce\x87\x40\xdf\x3c\xd2\xed\xf1\x9f\xb1\x98\x32\x5f\x74\xec\x32\x5c\x67\x21\x54\x43\xdb\xbc\x62\xf0\x29\x8a\xc9\x92\xd5\xb9\xdf\xd5\xea\x1f\xb7\x2b\x92\xba\xaa\x5a\xcf\xef\xad\xd4\xbe\x4a\x99\x43\xbb\x97\xba\x06\x12\xfa\xbd\xa7\x65\xbd\xa9\x05\xe1\x21\x1c\xfc\x55\x9e\x7f\x70\xbf\x35\x0d\x5d\x74\xf1\xeb\xb2\xb4\x69\x16\xb5\xce\x23\x49\x64\xc0\xf2\x1d\xb1\x61\xfa\x6e\x80\x2c\x1d\x6b\xe3\x48\x48\xbe\x3d\x1e\xcf\xd3\x76\x9a\x7e\xd1\x3f\xe8\x69\x3b\x8e\xa8\xcb\x69\x22\xb2\x2f\xff\xb9\xaa\x69\x3e\x8b\xf3\xe4\xe0\xe3\x49\xf0\x67\xa9\x1f\xaf\x87\xae\xfe\xed\x51\xbc\xda\xf0\xaa\x41\x8b\xc4\xf9\x37\x00\x00\xff\xff\xe1\xa4\x2d\x0b\x07\x04\x00\x00")

func templates_server_main_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_main_gotmpl,
		"templates/server/main.gotmpl",
	)
}

func templates_server_main_gotmpl() (*asset, error) {
	bytes, err := templates_server_main_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/main.gotmpl", size: 1031, mode: os.FileMode(420), modTime: time.Unix(1425186604, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdd\x6f\xe3\x44\x10\x7f\xf7\x5f\x31\x44\xc7\x91\x54\xc6\x7d\x2f\xba\x07\x28\x88\xde\x03\x47\xd5\x56\xf0\x88\xb6\xeb\x49\xbc\xd4\xde\x75\xf7\x23\x69\x88\xfc\xbf\x33\xfb\x61\x27\x6e\xdc\x80\x28\x94\x93\x4e\xba\x75\x76\xe6\x37\xbf\xf9\xcd\xc7\xb6\x65\xfc\x81\xad\x10\x76\xbb\xe2\x3a\x1e\xbb\x2e\xcb\xce\xcf\xe1\xae\x12\x06\x96\xa2\x46\xd8\x30\x03\x2b\x94\xa8\x99\xc5\x12\xee\xb7\x60\x2b\x04\xb3\x61\xab\x15\x6a\xb0\x4a\xd5\x85\xb7\xff\xa1\x14\x56\xc8\x15\x5d\xf6\x7e\x8d\x58\x55\x16\x5a\xad\xd6\x08\x4b\x67\x03\x54\x85\x12\xb6\xca\x81\xc6\xaf\xb5\x93\x23\xa4\x3e\x04\x70\xd5\x34\x4c\x96\x59\x26\x9a\x56\x69\x0b\xf3\x0c\x60\x26\xd1\x9e\x57\xd6\xb6\xb3\x8c\xbe\x76\x3b\xcd\x24\x91\x7e\xf7\x80\xdb\x1c\xde\xad\x59\xed\x10\x2e\x3e\x40\xf1\x31\x78\x18\x4a\xc1\x1b\xf9\xeb\xae\xa3\x03\x91\x10\xd2\x2e\x61\xf6\xe5\xe3\x2c\x99\x27\x13\x94\x25\x9d\x16\x21\x63\x92\xe0\xb2\x66\xc6\x7c\x62\x0d\x5d\x5f\x11\x85\x9a\x68\x91\x23\xea\x25\xe3\x94\x83\xa2\x74\x2b\x66\x81\x33\x09\x55\xb8\x06\xc2\x12\xa5\xf7\xbc\x72\xc4\xf9\xc0\x1d\x5a\xa6\x59\x63\x32\xbb\x6d\xf1\x2f\x91\x77\x81\x8b\x58\x42\xf1\xad\xb3\x95\xd2\xe2\x0f\x2c\x03\x41\x62\x15\xad\xbd\x8c\xa5\xe3\x68\x80\x91\x76\xc6\xd5\x16\x88\x0d\xf1\x40\xad\x95\x2e\xe0\x47\xb4\x26\xa8\xa9\xf1\xd1\xa1\xb1\x29\x3c\x50\xe9\x36\x58\xd7\xfe\xff\xa0\x35\x72\xa7\x85\xdd\x06\x41\xb8\x68\x59\x3d\x44\xbe\x75\x9c\xe0\xcd\x4f\xaa\xc4\xba\xe7\x38\x8f\x57\xd7\x01\xab\xeb\xc6\x69\xc4\x5f\xf3\x5e\xc4\x33\xdf\x41\x3d\x6a\xd7\x2d\x20\x39\xdf\xa0\x75\x5a\x9a\x4b\xd5\xb4\x35\x3e\xfd\x7c\xff\x3b\x72\x1b\xac\x83\x17\x39\x8d\x03\xe7\x31\xa3\x45\xac\x4e\x6d\xf0\x5f\xe1\x12\x30\x0f\x0a\xbe\x07\x7f\xad\xc2\xaf\xd5\xaf\xa7\xf4\x7f\xe8\x35\x84\x9e\x94\x27\x9c\xe2\x2e\xf8\x84\x9b\xb1\x3f\x70\x8d\x34\xaa\x5e\x2b\x89\x1b\xf0\x83\x59\xf4\x6d\x1d\xc7\x04\x27\x87\x42\xb5\x7e\xc4\x85\x92\xd9\xd2\x49\x7e\x8c\x3b\xe7\xf6\x09\xce\x1a\x51\x12\xd2\x86\x69\x2c\x2e\x15\x0d\xc9\x93\xcd\xd3\xbc\xe9\xe9\x51\x5a\xc0\xd9\x33\x7e\x7e\xa2\x74\x50\x12\xde\x8f\xaf\x76\x09\xf2\x02\x28\x56\x9e\x8a\xaf\x2f\xfa\x00\x21\xe5\x28\xdd\xf7\x8a\xdf\x5a\xea\xa2\x55\x50\x6f\xf4\x15\xc5\x99\x98\x6d\x30\x56\x3b\x6e\x43\xfc\x14\x68\x2a\x9f\xa1\x6b\xfa\xf2\xa4\x66\x80\xa9\x32\xed\xcb\x71\x75\x4a\x04\x4f\x3c\xa8\x4a\x95\xa7\x2e\xe2\x28\xd6\xa8\x13\xab\x67\xf2\x2c\xe0\x16\xf5\x1a\xaf\xee\xee\xae\xe7\x3a\x95\xef\x06\x4d\xab\xa4\xc1\x5f\x69\x3f\xa0\xce\x41\xc3\x59\xfa\x3d\xb4\xfb\x22\x4a\xaa\x9c\xc5\x1c\x7e\xf3\xcb\xf6\x28\x4a\x9f\x5c\x71\xe3\xad\x3e\xca\xa5\x9a\x53\x5f\x4e\xae\x36\x17\xf6\x4f\xe8\xdd\xd3\x50\x83\xd3\xdc\x53\xf2\xb8\xbe\xd3\x09\xce\x7b\x7e\xf1\x01\xa4\xa8\x03\x31\x38\x45\x27\x64\x56\x52\xa6\x04\x91\x50\x68\x3d\xc4\x69\xcf\xfb\x9c\x08\x70\x11\x80\x62\xdb\xd0\xd1\xcf\xc1\xb0\x27\x23\x4d\x1f\xf8\x11\xf6\xbb\x05\x66\xc3\x12\xdf\x75\xb3\x3e\xaf\x7e\x10\xe3\x57\x31\x3f\x5a\x47\x34\x52\xc2\x7e\x65\x40\x3d\xc4\xe7\x92\xfe\xd1\x3c\xd5\xf5\x96\xe6\x69\x6c\xdb\xb7\xda\x68\x38\x53\xfa\x27\x85\xfb\x4e\xc8\xf2\x17\xff\x38\xa5\xfa\x0d\xfa\xe5\xcf\x3a\xef\xfd\x31\xc6\xb0\x1d\x42\x16\x24\x71\xbf\x28\xbe\x19\xc9\xee\xd3\xb8\xa7\x30\xfb\x4d\xf8\xdf\x54\xe1\xa5\xc7\x71\x6a\xef\x6a\xdc\xbf\x02\x9e\xeb\x94\xcd\x45\xba\x9f\x92\x2f\xcd\x52\xf1\xd2\x0e\x9d\x54\x6a\x88\x38\x74\x4b\x28\x31\xe3\xd6\x85\xa2\xa6\xbf\x15\x0e\x1e\x8f\x37\xec\xe1\xec\xf5\xb0\x2f\x08\x3d\xd1\x20\x07\xaf\xd0\xdf\x2c\xd0\x64\x13\xff\xa3\x2a\x0c\xaf\xd9\x67\x23\xfd\xdb\x2b\x9f\xde\xec\x3f\x03\x00\x00\xff\xff\x6a\x9d\x7c\x9d\xd5\x0b\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3029, mode: os.FileMode(420), modTime: time.Unix(1424678182, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\x5f\x73\xdb\xb8\x11\x7f\xd7\xa7\xd8\x6a\x72\x19\xc9\xa7\xa3\xfd\x70\xd3\x87\x5c\xdd\x87\x38\xbe\xc6\x33\x69\x9a\xda\x17\xbf\x24\x99\x06\x26\x21\x09\x0d\xff\x19\x00\x6d\x2b\x1a\x7d\xf7\xee\x02\x20\x09\x52\x24\x2d\x29\xf6\x74\xee\x1e\x2e\x22\xb0\x00\x7e\xbb\xfb\xdb\x3f\x80\xd7\xeb\x88\xcf\x45\xca\x61\x9c\x4b\x91\x08\x2d\xee\xf8\x1d\x8b\x45\xc4\x74\x26\xc7\x9b\xcd\x68\xbd\x16\x73\x08\xfe\x29\xd2\x77\x3c\x5d\xe8\x25\x8e\xe0\x37\x97\x12\x5e\x9d\x82\x13\x14\x59\x5a\x0b\x4c\xd6\xeb\xe0\x03\x23\xc1\x19\x8c\xf1\xf7\xbb\x2c\x34\x12\x9b\xcd\x78\x06\xf8\x7d\xcd\xe2\x82\x9f\x3f\xe4\x92\x2b\x65\x86\xcd\xa8\xb7\xff\xf4\x37\xb3\xfd\x5f\x4e\x21\x15\x31\xac\x47\x00\x92\xeb\x42\xa6\x34\x3a\x22\x3c\x3c\x8d\x6a\x5c\xec\xe1\x11\x5c\xa5\xc0\x81\xb8\xea\xfd\xf7\xc2\x85\x27\x69\x2e\xd3\x3e\x54\x6e\xfa\x00\x4c\x5f\xed\x12\xbb\xf9\xd7\xfd\x6c\x25\x52\x91\x14\xc9\x80\x07\x69\x7a\x10\xd3\x3c\xce\x98\xfe\xeb\xaf\x93\x2e\x6c\xd3\xd2\x91\xf6\x10\xf3\x75\xfe\x10\xc6\x85\x42\x4a\x55\xc3\xfb\x7a\x77\x10\xb1\x9d\xfe\x51\xc4\xe5\x21\x2d\xc4\xe5\xf0\x7e\x88\x8b\x58\x8b\x3c\xe6\xff\x9a\xf7\x82\xae\x24\x7e\x14\xb7\x77\xd4\x5e\x18\xcf\xd3\x7e\x93\xd2\xdc\x61\x91\x62\x77\xdd\x19\x88\xf9\xb7\xce\x3d\x61\xa1\x74\x96\xcc\x33\x99\x30\xdd\x48\x3f\x9d\x28\x7f\x37\x72\x8f\x58\x90\x06\xac\xa0\xf9\x54\x5a\x8a\x74\xd1\x67\x4f\x7b\xb2\xda\x0d\x7e\x0d\x5b\xc5\x22\xec\x4a\x97\xef\x39\x8f\xd4\x95\xf8\xce\xcd\x08\x62\x94\x2c\x79\xcf\x12\xfc\xa4\x41\xd2\x46\xa4\xe4\xdd\x98\xa7\xdd\x88\xa6\xdb\xb1\x7b\xa1\x79\xa2\x06\x82\xd7\xcc\x3f\xe6\xbb\x16\x92\x32\x64\xdd\xde\xfb\x06\xe7\x30\x24\x37\x7f\x10\xa4\x6a\xef\xbd\x20\x7d\x4c\xc5\x6d\xc1\x07\x51\x79\x22\x7b\xf3\xfc\x4f\x1f\x65\xb9\xcc\x72\x2e\xf5\xaa\x83\xb1\x17\xea\x43\x59\xfe\x69\x05\xda\x27\x8f\x99\xee\xee\x0a\x20\x20\x11\x5f\xd9\x0b\x75\x66\x02\xd8\xc6\x1b\x16\xa7\xe6\x1e\xdd\xd1\xdd\xb9\x4d\x96\x6a\x86\x58\x5b\x1b\xb4\xe2\xac\xb9\xb2\xa5\xe4\x8d\x48\xa3\x0a\xf4\xb8\x4b\xc2\xec\x46\x62\xdc\x33\x00\xd2\x90\xa7\x9a\xc4\x82\x0b\x9c\x79\xb8\x66\x88\x21\x24\xc7\x15\x5a\xc4\xc1\x55\x1e\x0b\xfd\x7a\x65\x15\xb4\xbe\x23\x79\x5f\xf6\x53\xd7\xe8\x17\xeb\xdd\xb3\x2c\x8e\x79\x48\xfe\xad\x52\x92\x09\xf1\x58\xf1\xae\x23\x25\xbb\xaf\xf5\xf3\x26\xd5\x77\x9a\x55\x18\x26\xa3\x3b\x26\xa1\x31\x67\x3e\xff\x58\xe5\xbc\xbd\xe8\xda\xda\x8d\x9f\xc7\x3c\x41\x70\xb4\xc3\xbc\x48\xc3\x49\x43\x88\x12\x92\x61\xd8\xd9\x52\xc4\xd1\x36\xfb\xea\x29\x7b\xc4\x14\x8e\x90\x6c\x99\x54\xc1\x75\xc5\x6b\xc3\xc4\x26\x77\xda\x7c\x03\xbb\x09\x42\xac\x38\x8b\x14\x46\xce\x8e\x90\x1d\x4d\x7d\x08\xe7\xc9\x6f\xad\xb1\xbf\x41\xcb\x1e\x2d\x81\x9f\x7f\x76\x20\xd0\xa5\xb8\xa1\x83\xbc\x45\xcf\x7a\xa2\xc1\x7a\xe2\x81\x9d\x40\x1e\xde\x21\x72\xe2\xe1\x1d\x99\x62\x56\x46\x71\x65\x06\x4f\xa2\x69\x49\xc3\x03\x8f\x00\x53\xc4\xe3\xb2\x80\x17\xb0\x7e\xc8\x92\x15\x2f\x52\x63\x24\x32\xee\xa4\x3a\x63\xb0\xb6\xf9\xde\xb0\x29\x63\x18\x03\xda\xb8\x02\x62\x15\xe9\xa5\x48\x53\xa1\x21\x5a\x6c\x67\xa2\x46\x2e\xa2\x53\xa1\x4d\xd3\x53\x60\x79\x8e\xe4\x6e\x9e\x22\x67\x60\x2c\x3d\x35\x0b\x6c\x60\x98\xed\x0e\x86\x3c\x60\x8e\x0e\xd4\x2d\xdc\xfb\x21\x1f\x3e\xad\x4a\x40\xa4\x15\xd4\x24\x6b\xa4\xbb\x56\xe8\xf8\x39\xca\x0f\x9a\x1f\x76\xa1\x87\xfb\x39\xcc\xb0\x7d\x48\x99\xc8\xaa\x44\x9c\xb3\xf0\x1b\x5b\x70\x5b\xfb\xcd\x4f\x9c\x1d\x1d\x1f\xc3\x1f\x4b\xa1\x60\x2e\x62\x0e\xf7\x4c\xc1\x82\xa3\x5d\x50\xa1\x08\x6e\x56\xa0\x97\x1c\xd4\x3d\x5b\x2c\x30\x76\x75\x96\xc5\x01\xc9\x9f\x47\x18\xb9\xe9\x02\x27\xcb\x75\x89\x58\x2c\x35\x60\xda\xb9\xe3\x98\xe3\xb4\xd9\x6a\xc9\x53\x58\x65\x05\xea\xf5\x8b\x2c\xd2\xc6\x4e\xe5\x11\x10\x66\x49\xc2\xd2\x68\x34\x12\x49\x9e\x49\x0d\x13\x54\x7a\x9c\x72\x7d\xbc\xd4\x3a\x1f\xd3\xc7\x42\xe8\x65\x71\x13\xa0\xe0\x71\xc8\x54\xc1\xe2\xff\x8a\xe4\x78\x91\xfd\xe2\xb6\xda\x45\xe6\xd8\x86\xfa\x4e\xa2\x75\xb3\xb0\x93\x78\x22\xa2\x28\xe6\xf7\x58\x7c\x0c\x62\xd2\x1c\xcf\x31\x9e\x93\x2c\x45\x5b\xbf\xf8\xc6\x57\x33\x78\x61\x22\x8c\xa8\x13\x5c\x18\x45\x95\xe3\x1d\x4d\x9b\x1c\x8f\xb6\xc3\x42\x30\x87\xf1\x4f\xb7\x63\x27\xee\x44\xac\x13\xa7\xc6\x51\xe4\xe7\x98\x29\x65\xbb\x36\xd3\xc0\x29\xb4\xa1\xe1\xb2\x02\x16\xc7\xc6\xca\x37\x59\x91\x46\x90\xdb\x59\x4a\xef\x34\x88\x4b\xdf\x16\x68\x6b\x6f\x3d\x50\x91\x30\xba\xd2\xde\x7a\x95\x8b\x10\xb7\x30\x3e\xc7\x70\x41\x9d\x20\xbb\x31\x51\x12\xc1\x5c\x66\x09\x30\x20\x1d\x83\x4b\x8e\x8d\x9c\xd2\x23\x5c\xc0\xbb\x11\x61\xcb\x5f\x84\xda\x15\x04\x6b\x07\xdb\x6d\xaa\x32\xd9\xbf\xe1\x2a\x94\x22\xb7\x79\xd5\x2a\xd6\x18\x2a\xd5\x36\x21\xf0\xc1\x55\x33\x87\xba\xae\xb6\xb5\x79\x2c\x8f\x5f\x63\xd8\x3a\x74\x68\x04\xbd\x04\x8a\x63\xb4\x0b\x5a\xc3\xf9\x95\xe3\x17\x12\xd2\x88\xcc\x40\x68\x40\xe8\x45\x82\xa3\x7a\xc9\x34\xb1\x11\xef\x75\x0f\xc4\xeb\x74\xa1\x40\xd0\x97\xa9\xdc\x0c\x5c\x94\xb3\x9b\x98\x4f\x50\xbd\x79\xa2\xd1\x0e\x0b\x81\x3f\x57\x53\x5b\x4a\xa8\x90\x73\x39\x67\x21\x27\x28\x64\x76\x65\x36\xb0\xd9\x55\xd1\x61\xf7\x02\x3d\x54\xa0\x6d\x71\x19\x33\x11\x93\x70\xbd\xcc\x22\x20\xbb\xab\x11\x35\x07\x40\xb1\x7d\xc9\x43\x8e\x95\x51\x3a\x85\x8f\xba\x8c\x3c\xf5\xb5\x9d\x48\x38\xf2\x7d\x33\x03\x99\x15\x18\x5e\x47\x35\x3f\xb1\xb5\xd7\xe1\x92\x47\x97\x34\x51\x42\x26\x0f\x51\x3f\x83\x65\x05\x3e\x7d\x31\x63\x65\x11\x0f\xde\x32\xf5\xef\x82\xcb\x55\xe9\xb8\x5b\x65\x1a\xa4\xe0\xe3\xe5\xbb\xc0\x4c\x4c\xea\x8a\x01\x6e\x01\xd5\xf9\x52\xde\xf3\x4e\x17\x0f\xca\x73\xd2\x4c\x6f\xf5\x9f\xb6\x25\xad\x4f\xdf\x6c\x1a\xb9\xb7\x69\x9e\x80\x9c\xbc\xc5\x92\xc9\xad\x0a\xfe\xc1\x75\xdd\xec\x4f\x9d\x4d\xdc\xd5\xb4\xe3\xc6\x09\xc6\x0c\x55\x8e\xc5\x0f\xd3\x7c\x4c\xab\x62\x5a\x69\x8a\xdd\x0b\xee\x79\x30\x34\x8b\xc3\x1a\xe2\x39\x41\xbe\xe5\x0c\xab\xd8\xe1\x30\x03\xbb\xc1\x73\x42\xac\x08\x53\xbb\xfd\x77\x2c\x1e\xd5\x90\x7f\x49\x6d\x5f\x5a\x2d\xba\xaa\x41\x94\x06\x11\xad\xf6\xc0\xf6\xb6\x80\x1d\x00\xa9\x1b\x7c\xcf\xef\x27\xbf\x9e\x9c\x60\xa3\x27\x71\x77\xaa\x71\xa6\xbc\x7d\x1e\x37\x8f\xfe\x3c\x86\x39\xc3\x89\xe8\x15\xfc\x74\x37\xb6\xea\x19\xfd\xc0\xe8\x66\x0f\xd9\xb6\xf3\x76\x2e\x3b\x2d\x4b\x62\x40\xc0\xd7\x6f\x30\xc3\xbc\x82\xb6\xda\x56\xd1\xf6\xb8\x1d\xdd\x34\xac\x7a\x98\x9b\xc9\x6e\xa6\xc1\x7c\x5a\x2f\xbb\xd6\xab\xca\xe3\x9e\xdb\x9f\x3c\xda\x3b\xae\x8a\x1d\x09\xa0\xef\x42\xf8\x74\x94\xa6\x52\xd3\xa4\xf5\x93\xe8\xd2\xe7\xa3\x67\x54\xc8\xf7\x5e\x55\x13\x2e\xd4\xeb\x2c\x2a\xbd\xd4\xb8\xd5\xd8\xf3\xd0\xaf\x54\x4e\x65\xf9\x03\x81\xd3\x82\x19\xbc\xdc\x21\x18\x76\x46\xe9\x02\x15\x61\x28\x7e\x4e\x9f\x93\x56\x78\x8e\xbb\x6e\x6e\xfd\x61\xba\xc5\x49\x2a\xde\xff\x69\x5d\x2e\xb6\xcb\xb2\x79\x2e\x48\x6d\x3f\xfd\x68\xa0\x97\x4d\x7e\xcf\x25\x62\x7b\x8b\xf2\x5a\x31\x79\xd4\x93\x83\xde\xb4\xff\xdd\x60\x36\xfb\xe6\xbe\x36\xa3\xfa\xff\xbb\x64\x8d\x2d\x5d\xf6\x82\x36\x00\xac\x82\xe0\x32\x84\xe3\x99\x97\x30\xdc\x2f\x44\x47\xef\xb5\xb8\x7a\x0a\x7f\x87\x93\xce\x6b\xfc\x19\xb6\x6e\x99\x12\x9a\xd7\xaf\x22\x96\x1a\xb8\x2a\x08\x82\x92\xd8\xcd\xa7\x0f\x6c\xbb\x5f\x84\x65\x63\x65\xba\xf3\xaa\xcd\x02\xf3\x98\xd3\xee\x59\xfc\x8e\xc5\x8f\x84\xea\xd9\xc3\x7b\xd7\xe8\x7c\x9c\x1b\xea\xf1\x6a\x28\x75\x8f\xd7\x93\xb2\xd9\xbd\x7b\x56\xaf\x1e\xd0\xa1\xa7\x29\xad\x1e\x65\x28\x33\x4d\x1c\xf4\xaa\x7b\x99\x82\xe9\x18\x85\xe4\x91\x4f\x02\xef\xc5\xb4\x9c\xbe\xaa\x5e\xf1\x7b\xdf\x46\x10\xd5\x8e\xaf\x12\xb5\x8b\xcd\x9d\x7c\xe8\xc9\xc7\x7b\xec\xa1\xfd\x0f\x79\xd2\x19\x7c\xcc\xa9\x9e\x71\xdc\xee\xee\xca\xb1\xfd\x0c\x77\x6a\xfb\x78\xaf\xd4\xf6\x88\xe1\x46\x1d\x4a\x62\x73\x5c\x33\x53\x0d\x47\x5c\x79\x57\xd9\x76\x7c\xef\x5f\x4b\x06\xcd\xdc\x20\x7d\x5f\x1d\x7e\x3a\x66\x7e\xfa\xb2\x07\x37\x95\xfb\xb3\x8c\x09\x70\x72\x41\x65\xb1\x06\x31\x8d\xd8\xe9\x69\x4f\xf0\x97\xa2\x03\xde\x6e\x55\xb6\xfa\x98\x37\x7c\xce\x8a\x58\x5f\xdb\x1b\x77\xc4\xe7\xd7\xe5\x55\xbd\xfb\xf9\xb9\x29\x3f\xf0\xc8\x6c\x98\x5a\xe3\x7e\xf9\xd2\xe8\x58\x1e\xe0\x67\xb2\x1e\x22\x95\xa2\xcd\xee\xae\xc7\x12\xe8\x5c\x3f\x93\x0e\xbd\x69\x6d\x06\x38\xde\x7c\x58\xf2\xd9\x7b\x45\x7b\xfc\x9f\x28\xdc\xc1\xe1\xfa\x8f\x17\x94\x76\x9b\xd1\xd5\x83\x77\x5f\x86\x3f\xaa\xc3\x70\xce\x1d\x7e\x8d\xef\x0c\x4c\xff\xef\x2a\xd5\xbf\xff\x0b\x00\x00\xff\xff\x3e\xf9\x78\x0a\x28\x22\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8744, mode: os.FileMode(420), modTime: time.Unix(1425183011, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/main.gotmpl": templates_server_main_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"main.gotmpl": &_bintree_t{templates_server_main_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

