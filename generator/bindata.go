package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xcd\x4e\xeb\x30\x10\x85\xf7\x7e\x8a\x51\xd4\x2b\x5d\x24\x48\xf7\x95\x58\x01\x0b\x24\x40\x48\x74\xc1\xb2\x43\x32\x49\x4c\x63\x3b\xd8\x93\x96\x28\xf2\xbb\x13\x3b\x0e\xa5\x6c\xd8\xf9\xe7\x9b\xe3\x33\x67\x3c\x8e\x25\x55\x52\x13\x64\xca\x94\xd4\x76\xd6\x74\x64\x79\xc8\xbc\x17\xe3\x28\x2b\xc8\x6f\x4d\xf1\xc2\x56\xea\xda\xfb\x71\x3c\xdf\x91\x2e\x23\x96\x3f\xa7\xaa\x27\x54\xe4\x3d\x04\x0e\x19\xb7\x43\x17\x76\xbb\x77\x67\xf4\x26\x0b\x18\x5a\x54\x33\x93\xcd\xe2\xaf\x8f\x0f\xa9\xe6\x53\xb5\x91\xf9\x3e\x49\xf2\xd9\x4e\x2c\x0f\x89\x0e\x8b\x3d\xd6\x04\x51\x2a\x2e\xc3\xe9\x7a\x0d\xdb\x46\x3a\xa8\x64\x4b\x70\x44\x07\x35\x69\xb2\xc8\x54\xc2\xdb\x00\xdc\x10\xb8\x23\xd6\x35\x59\x60\x63\xda\x3c\xf0\x77\xa5\xe4\xa9\x87\xe9\x72\xa9\x53\xb2\x6e\x18\xa6\xee\x0f\x04\x55\xcf\x51\xaa\x21\x0d\x83\xe9\xc1\xd2\x95\xed\xf5\x99\xd2\xf2\x04\x14\x46\x29\xd4\xa5\x48\x61\xdd\xab\xce\x58\x76\xde\xcb\x79\x01\xff\x05\x4c\x76\x2d\xea\xc9\xf6\x6a\x4f\xc3\x25\xac\x0e\xd8\xf6\x04\x9b\xeb\x1f\x74\x84\xc2\x75\x0c\x6f\xb2\x21\x35\x57\x90\xfd\xfb\xc8\x12\x9e\x90\x39\x87\x8b\x53\x22\x7f\x8c\x68\x01\x79\x9a\x44\x48\xed\xa6\x45\xe7\x52\xe0\x8e\x6d\x5f\x30\x8c\x62\xb1\xb7\x4c\x51\x92\x8b\x95\x4c\xaa\x6b\x43\x8f\xbf\x7e\x06\xe4\x27\x61\xe1\xc5\x57\x00\x00\x00\xff\xff\x55\x25\xef\x2b\x41\x02\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 577, mode: os.FileMode(420), modTime: time.Unix(1425187622, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x09\x19\x10\xaf\x89\xd2\x01\xc3\x1e\xd6\x65\x40\xd1\x65\x68\x80\x2e\x0d\x9a\xae\x2f\xc3\x80\x32\xf2\x49\x66\x2b\x91\x0a\x49\x25\xf1\x04\x7d\xf7\x1d\x49\x51\xb6\x64\xd9\xb1\x1d\x0c\xe8\x93\xa4\xbb\xe3\xdd\xef\xfe\xfd\xa8\xba\x9e\x61\xca\x05\x42\x54\x2a\x5e\x70\xc3\xef\xf1\x9e\xe5\x7c\xc6\x8c\x54\x51\xd3\x4c\xea\x9a\xa7\x10\x7f\xc0\xbb\x8a\x2b\x9c\x91\x80\x3e\x51\x29\xf8\xe5\x1c\x5a\x3b\x2e\x45\xa7\x3f\xae\xeb\xf8\x9a\x99\x79\xd3\x9c\x40\x44\xef\xef\x64\xe2\x0c\x9a\x26\x3a\x01\xfa\xfe\xc4\xf2\x0a\x2f\x1e\x4b\x85\x5a\x3b\xf1\xf4\x95\xf3\xf6\xdd\x39\x08\x9e\x43\x3d\x01\x50\x68\x2a\x25\xac\x74\x62\xa3\xa3\x98\x75\x28\xfe\xe4\xe2\x1d\x8a\xcc\xba\x1f\x87\xd1\x19\xec\x8d\xc3\x49\x57\xfc\xef\x87\x8b\x3d\x3e\x81\x2b\x18\x1c\x88\x6b\xe9\x7f\x2f\x5c\x14\xc9\xa0\x12\x9b\x50\xb5\xea\x03\x30\x7d\xf6\x47\xbc\xf3\xcf\xfb\xf6\x90\x17\x55\xb1\xa5\x83\x56\xbd\x15\x53\x9a\x4b\x66\x7e\xfe\xe9\x78\x74\x9e\x42\x23\x7d\x10\xf7\x75\xf1\x98\xe4\x95\xa6\xc1\xee\xc4\xfb\x76\x77\x2b\x62\xaf\x7e\x2e\xe2\x10\x64\x80\x38\x88\xf7\x43\x5c\xe5\x86\x97\x39\xbe\x4f\x37\x82\xee\x2c\x9e\x8b\x7b\x25\xd4\x5e\x18\x2f\xc4\xe6\x92\x5a\xdd\x61\x9b\xe2\xbd\xee\x0c\x24\x3c\x03\x05\x26\x95\x36\xb2\x48\xa5\x2a\x98\xe9\xb1\xe0\x28\xcc\x3f\x9c\xdd\x13\x25\xb4\x02\x6f\xe8\x3e\xb5\x51\x5c\x64\x9b\x0a\xea\x23\xeb\x9d\xf1\x07\xdc\x3a\xe7\xc9\x18\x6d\x5f\x21\xce\xf4\x0d\xff\x17\x9d\x84\x40\x2a\x56\x5c\xb1\x82\x3e\xad\xd0\xa6\xc3\x85\xed\x6f\x8e\x62\x1c\xd2\x74\x7d\x7b\x2f\x0d\x16\x7a\xcb\xfa\x3a\xfd\x53\xdd\x1b\x20\x09\x4b\xdb\xfa\xde\x77\x3d\xb7\x43\x6a\xf5\x07\x41\xea\x7c\xef\x05\xe9\x2f\xc1\xef\x2a\xdc\x8a\x6a\xc5\xe4\xff\xbd\x33\xbf\x89\x3d\xb3\x40\x6e\x68\xee\x73\xbc\x49\xe6\x58\xb0\x1b\x3b\xaf\x40\xaa\xb3\x33\xd0\x4e\x0e\xda\x29\x46\x23\x4e\x68\x2d\x80\x5b\xec\x2f\x5f\xd1\xf3\x57\xd8\x38\xae\xa4\x7e\xf1\x82\x80\xd4\xb5\x62\x22\x43\x88\x43\x0f\x80\x1c\xd3\x6b\x99\x33\xe3\xfe\x74\x64\x89\xca\x2c\x96\x1b\x03\xf1\x0a\x1f\xb8\xb7\x5c\xa3\xc7\x27\xa4\x59\xc7\x78\xdd\x7a\xf0\xf3\xf2\xcc\x78\xbe\x3e\xaf\x67\x33\x6e\x0b\xcf\xf2\xa5\x93\x2e\x71\x0a\xe9\xa4\xf4\x1b\xd0\x34\xb6\x08\x54\x05\xb7\xb5\x53\x38\xed\x2b\xad\xe0\x47\x6b\xe1\x0a\x01\xb0\x13\x12\x80\x95\x9c\x09\xcc\xc6\x02\xc3\x6f\xfd\x68\x83\xa6\x4b\xa5\x87\x79\x5c\x49\xf3\x3a\xcf\xe5\x03\xfd\x1b\x46\x63\x2e\xa3\xb5\xb1\x9b\x8e\x52\xf4\x90\xf2\xe4\xed\x17\x4c\xfa\x24\x4d\xcd\xf2\x04\x0e\x5e\x69\xa1\xfe\xce\x0c\xfb\xb8\x28\xb1\xb7\x02\x63\x38\xac\xc4\xba\xc2\xe3\x43\x49\x78\xbd\xb6\x5d\x6f\x2f\xf5\x75\xf8\xb9\x6e\x9a\x7e\x3f\xd6\xfe\xb9\xc3\x68\x50\x33\xc0\x9f\x7d\xe3\x92\xf2\x97\x08\xfd\x72\xf5\x3d\x8c\x5f\x59\x23\x4e\xa4\x30\x8c\x70\x0e\x8e\x0f\x6e\x8e\xb1\x73\x64\x8a\x8f\xef\x5d\x45\xfb\x67\x87\x2d\xb0\x87\x87\x0d\x2b\x59\xf2\x95\xd1\x66\x38\x96\x71\xaf\x24\xb4\x9d\xfa\x38\xe7\x1a\x52\x4e\x5b\xf5\xc0\x34\x64\x48\xc8\xc8\xe9\x0c\x6e\x17\x60\xe6\xb4\x6a\x0f\x2c\xcb\x50\x81\x91\x32\x8f\xad\xfd\x85\x9d\x2a\x91\x91\x32\x9c\x2b\x78\x36\x37\x40\x55\xbf\x47\x48\x2b\xe3\x5c\xcd\x51\xc0\x42\x56\xd4\xaa\x53\x55\x89\x9e\xa7\x10\x02\x12\x59\x14\x4c\xcc\x26\x13\x5e\x94\x52\x19\x38\xa6\xd6\x46\x19\x37\xf3\xea\x36\x26\xdd\x59\xc2\x74\xc5\xf2\x2f\xbc\x38\xcb\xe4\x69\x7b\xfa\xcc\x0f\x77\xb4\x8b\x29\x5d\xf1\x69\x61\x76\x32\x5d\x72\x71\x34\x71\x9c\xe1\x69\xe4\xe8\x2b\x2e\x4e\xe0\xe8\xde\xce\xa8\x9d\xd7\xf8\xd2\x21\x0d\xc4\x62\xd5\x76\xf5\x6a\x4a\x9e\xee\xef\x14\xa2\xef\xef\xa2\xd6\xbc\x35\xf1\xc5\x9f\xba\x4a\x87\xc1\x0e\xcc\x8f\xda\x17\x91\x5a\xf2\xb6\xa2\x4a\xbc\xc9\x99\xd6\x2d\x91\xa5\x95\x48\xc0\xae\xfe\x07\x4c\x90\xc6\x52\x79\x39\xfc\x40\xa2\x15\xbb\x29\x0c\xb7\x05\x7c\xd6\x74\x2e\xe3\xf4\xba\x98\x7a\x3a\x70\x7b\xe3\x77\xe0\x2d\xd3\x9f\xba\x74\x7d\x2a\xf7\x4c\x51\xa7\x34\xfc\xfd\x8f\x33\x5e\x2d\x41\x60\x58\x8e\x21\xeb\x0d\x3e\x7a\x5b\xdd\x47\x1d\x87\x84\xd7\x08\x7b\xf3\x8e\x83\x03\x74\x0e\xac\x2c\xa9\x86\xc7\xf4\x71\x62\x4d\xa6\x8e\x22\x97\x95\x5d\xbe\x79\x08\x96\x30\xc9\xd6\xf2\xe3\xcb\xce\xcf\x2a\x2b\xda\x35\x92\x9a\x1b\x5c\xe2\xbf\xb0\x1a\x7b\x2a\x8e\xe3\x75\xff\xed\x71\xc2\xe5\xc8\x06\x8e\x92\x50\x7e\x37\x11\x5d\x33\x60\xf5\xfa\xe9\x15\x6d\x43\xc9\xb6\xf5\x78\x19\xc4\xf6\xf8\xc9\xf2\x6d\x6f\xfa\x93\xb7\xce\x7a\x96\x7d\xee\xf8\x2f\x00\x00\xff\xff\xab\xf0\x81\xc3\x9b\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4251, mode: os.FileMode(420), modTime: time.Unix(1425183236, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\x5b\x6f\x1b\xbb\x11\x7e\xae\x7e\xc5\x40\x38\xa7\xd8\x0d\x14\xc9\x8f\x85\x01\x17\x70\x93\x53\xc4\x6d\x93\x1a\xb6\xd3\x3c\x18\x46\x41\xef\x52\x12\xeb\xbd\x85\xe4\x5a\x55\x05\xfd\xf7\xce\xf0\xb2\xcb\xd5\xae\x14\xc9\x76\xd0\x06\x07\x27\x2b\x72\x38\xf7\x6f\x66\xc8\x54\x2c\x79\x62\x0b\x0e\x9b\xcd\xf4\xda\x7e\x6e\xb7\xa3\xd1\x6c\x06\x77\x4b\xa1\x60\x2e\x32\x0e\x2b\xa6\x60\xc1\x0b\x2e\x99\xe6\x29\x3c\xae\x41\x2f\x39\xa8\x15\x5b\x2c\xb8\x04\x5d\x96\xd9\x94\xe8\x7f\x4b\x85\x16\xc5\x02\x37\xfd\xb9\x5c\x2c\x96\x1a\x2a\x59\x3e\x73\x98\xd7\xda\xb0\x5a\xf2\x02\xd6\x65\x0d\x92\xbf\x97\x75\xd1\xe1\xe4\x45\x40\x52\xe6\x39\x2b\xd2\xd1\x48\xe4\x55\x29\x35\x44\x23\x80\xb1\xd2\x12\xb9\xab\x31\x7d\x17\x5c\xcf\x96\x5a\x57\xe6\xc7\x42\xe8\x65\xfd\x38\xc5\x43\xb3\x84\xa9\x9a\x65\xff\x12\xf9\x6c\x51\xbe\x77\x6c\x8f\xa1\x99\xa9\x8a\x27\xc7\x11\x6a\x39\xcf\xf5\x51\xa4\xb9\x48\xd3\x8c\xaf\x98\xe4\x27\x92\xcf\x14\x4f\x6a\x29\xf4\x7a\x3c\xc2\x83\x9b\x8d\x64\x05\xc6\xe7\x97\x27\xbe\x9e\xc0\x2f\xcf\x2c\xab\x39\x9c\x5f\xc0\xf4\xca\x38\x47\x61\xb4\x88\x88\xb6\xb7\x5b\xfc\x40\x7f\x8b\x42\xcf\x61\xfc\xeb\xf7\xb1\x23\x77\x24\xbc\x48\xf1\x2b\x36\xc1\xfd\xc2\x57\x18\xf0\xcb\xaa\xfa\xc2\x72\xdc\xbf\xbc\xbe\x82\x44\x72\x74\xbe\x02\x06\x05\x5f\x41\xb8\x0b\xa2\x50\x9a\x15\x09\x1f\xcd\xeb\x22\x19\x38\x1b\x91\xff\xe0\x1d\xfd\x7f\xfa\xb1\x4c\xea\x9c\x17\x3a\x86\x77\xbb\x12\x36\x46\x8d\xe9\x0d\x4f\xb8\x78\xe6\xd2\x31\x47\x5b\x7e\xbf\x43\x49\x84\x00\xc4\xee\x1c\xfc\xd7\xc4\xac\x2d\x31\x2f\x32\x2e\xd5\x39\xe4\xec\x89\x47\x39\xab\xee\x6d\x62\x3c\x50\x3e\x4c\x3f\xd9\xed\xd8\x12\xcf\x4b\x99\x33\x8d\xb4\x60\xc3\x36\xfd\xc8\xe7\xac\xce\x34\xed\x6e\x47\x43\xca\x60\x78\x0a\xcd\xff\xad\xe1\x02\xa0\x0d\xc8\x14\x2d\xbe\x29\x6b\xcd\x1e\x33\xfe\xc1\x12\x18\x8b\x27\x7d\x06\x13\x28\x44\x16\x13\x6f\xc9\x75\x2d\x8b\x3e\xc5\xc8\xa2\xab\xe7\x9b\xcd\xf4\xaa\x98\x97\xa8\xa2\x4a\xa4\xa8\xb4\x28\x0b\xa4\xd5\xeb\x8a\xf7\x48\xd1\x98\x3a\xd1\xc6\x9b\xc6\xef\xed\x9f\x6e\x04\x70\xdf\x9b\xe3\xf7\x03\x9b\x9c\x21\xa3\xd6\xa7\x8e\x68\x8f\x4f\x47\x8d\x3f\x3d\x37\xe7\xd4\x1b\xbe\x10\xf8\xb9\x0e\x72\x95\x98\x2b\xd4\x01\x93\xd3\x9a\xfa\x21\x63\x4a\x59\x0b\xdc\x96\x44\x07\xd1\x39\x92\xcb\x48\x4f\xbb\x88\x22\xf0\xe7\x18\x8f\x7c\xe6\xa9\x60\x77\x68\xff\x76\x3b\xc6\x58\xe4\x1c\xc8\x19\x36\x68\x43\xec\x1c\x8e\xbc\x68\x19\xa4\x7c\xa0\xd8\xb5\x2c\xd3\x3a\x19\x54\xcc\x6d\x75\x15\xab\xfc\xe2\xc9\x8a\x35\xec\xbc\x62\x7e\x61\x58\xb1\x5b\x87\x79\x4c\x51\x51\x08\x0a\xbf\x47\xb6\x98\x23\xd6\xd5\x9f\x98\x12\xc9\x65\xad\x97\x03\x9a\xd3\x72\x47\x6b\x82\x29\xb1\xc0\xf2\xca\x34\x68\x44\x8a\x82\x5a\x71\x59\x20\x39\x60\x38\xa1\xc2\xb3\xab\x52\xa6\xe6\x87\xcd\x54\x6b\xad\x28\x12\x51\xb1\x0c\x05\xa3\x14\x81\xc5\x9b\x4b\x8a\x3a\x6e\xa2\x0c\xcc\x29\x91\x30\xc3\x78\x85\xd5\x0c\x1e\x49\x27\xb3\xd3\xb3\xde\xa8\x44\x6a\x44\x36\x95\x26\x60\xff\x8e\x21\xa2\xb2\x70\xed\x05\x11\x62\xb8\x94\xa5\x8c\x5b\xb7\x78\x93\x31\xd7\xff\xca\xd7\xaf\xb1\x99\x61\x77\x7a\xc2\x86\xf3\x52\x2b\xd1\x40\x6c\x78\x25\x31\x00\x56\x09\xc0\x1a\x4b\x6a\xb8\xc2\x45\x8d\x4d\xa4\x48\x20\x6c\x1f\xc3\x9d\xdb\xb2\x96\x89\xaf\xb7\x87\xfc\x71\x8c\x1f\x86\x13\xe5\xef\x15\x35\x49\x9b\x1f\x3d\xaf\x38\xac\x82\xe2\x08\x53\xd2\xa9\xf4\xd4\x1e\xe5\x26\x91\x9d\xb6\x9f\x6a\x6c\xb3\xc1\xe9\x96\xba\x49\xbc\x66\x24\x18\x96\x13\x0e\x0d\xd3\x41\x12\x6b\x44\xa6\x0e\xb1\xd8\x77\xaa\xe7\x04\xb4\xf7\x96\xcb\x67\xfe\x1b\x79\x0a\x70\xcc\x48\x58\x96\x61\x00\xcc\x54\x81\x31\xe2\x7e\x5d\xda\x92\x9b\x4e\xc8\x54\xc9\x69\x89\x41\x6a\xab\xbf\xf7\x84\xe5\xf7\x58\x6b\x33\x8f\x24\x78\x1c\xbd\x46\xdf\x12\xca\x95\xcb\x70\x9a\x65\x90\x2e\x10\x6a\xfa\x0a\xc5\xd1\xd4\xc6\x1b\xae\x2a\x8c\x04\xff\x86\xd0\xe5\x72\x02\xef\xdc\xea\xf7\x9a\x2b\xdd\x44\xd4\x56\xfc\x3f\xbb\xea\xe9\x13\x91\x82\xe0\x13\x18\x6d\xb0\x79\xe1\x6b\xac\xed\xb4\x51\xbf\x5b\xee\x36\xd5\xd8\xf3\x8d\xe2\xdd\x82\x8c\x1d\xe2\x77\xfb\xba\xd0\xd4\xcb\xb1\xba\xdd\x38\x3d\x2c\xaf\x6e\x69\xae\x95\x2e\x73\xa7\x17\xe0\x3c\x21\x52\xa6\x4b\x79\x82\x82\x5d\xe6\x91\x29\x42\xbe\x2a\x38\xb6\x4e\x73\x4b\x31\x69\xa5\xf8\x8d\x7f\xf8\x85\x78\x78\x88\xf0\xe6\x4c\x2f\xd3\xd4\x08\xf0\x9c\x03\x5e\x3e\x0e\x8e\x17\xf7\x3b\x3c\x0c\x85\x83\x56\x00\xe9\xd0\x96\x13\x8c\xf6\x52\x30\x2c\x36\x2b\x49\xef\x67\x26\xa1\x2e\x82\xa0\xdf\x3f\x58\x47\x0c\xf7\x4e\x5c\x45\x0c\xf6\x8d\xdd\xd3\x01\x2f\x2e\x68\xf8\x00\x3b\x3c\x75\xc4\x5c\x60\xf5\xaa\x10\x44\x51\xb8\x3a\x31\xdd\x6c\x80\xd1\x38\x36\xf3\xd1\x0f\xfa\xe7\x71\xca\x35\x5d\xf0\xb5\xca\x79\x46\x87\x94\xdb\xd7\x43\x8f\xd0\xd3\xd4\xe7\xd7\xea\x48\x4c\x0e\xe9\x17\x96\xee\xe3\xd4\xf2\x45\xf2\xb5\x9a\x39\x3e\x3d\xe5\xac\x16\x19\x2f\x3a\xc7\x63\xf8\x23\x9c\x39\x61\xae\x80\x10\x08\x4d\x01\x9c\x47\xe3\x5c\x28\x45\xa5\x2a\x44\xcc\x39\xfc\xaa\xc6\xbe\xc9\xab\xe9\x5f\x4a\x51\xec\x6a\x84\xff\xc5\xb1\x9f\xbc\x1d\x5b\x34\x0a\x51\xd9\x29\xeb\x58\x03\xf0\x26\xa8\xa9\xf4\x58\xe0\x84\x8d\x8b\xc1\x02\x7d\x55\x04\x6d\x4d\xa4\x27\x80\xb2\x23\x25\x6a\x98\x5c\x7d\x6c\xa6\x93\x13\x4b\xbb\x71\xd2\xde\x1a\xdb\x8a\xb3\x46\x5e\xb6\xd3\x45\x29\x55\x63\x28\x15\x1a\xd6\xd9\x6a\x9a\x34\xcd\xf3\x62\x2e\xa8\x3d\xb8\xdc\x06\x95\x2c\x39\x56\x87\x13\xac\xee\x89\x8d\x1c\x8f\x70\xd4\x37\x37\x07\x0f\xa0\x5b\xb3\x1f\x77\xf6\xdd\x14\xdb\x61\xe6\x8a\x31\x0d\x0a\xfb\xb0\x27\xb9\xa2\x9e\x8b\x97\xbc\xdd\x0b\xdb\x20\xc7\xd8\x5e\x33\xc0\xd6\x70\xab\x27\x1d\xb6\x08\xf2\x7a\xbb\xfb\x21\xb6\xe8\x64\x69\x48\xdd\xca\x11\xb5\x80\xfe\xe0\xfd\x9b\x1b\x84\x58\x27\x8d\xcf\x47\xfe\x4a\x33\x30\x6d\x5b\x03\xee\x49\xca\x03\xa2\xcd\xc7\x61\xda\x90\x44\x36\x12\xf5\x04\xaa\x76\xc8\xc5\x2b\x38\xce\x94\x2c\xe1\x9b\x6d\x9b\x2b\xfb\x33\xa5\x5f\x47\x0c\xbf\x78\x1b\xb7\x65\xa4\xab\x61\x38\x1c\xef\x53\xb1\xa5\x71\x11\x37\x06\x7b\xb7\xe2\x7d\x73\x62\xf3\x1d\x87\xe4\xb7\xd4\x1c\xd9\xc5\xb0\xab\x79\xf8\x6b\xeb\xaa\x90\x63\x6a\xd5\x0f\x06\xc5\x6e\x7d\x68\xcf\xda\xfe\xed\xdb\x54\x17\x40\xfe\x06\x39\x84\x9d\x9c\x6e\x6c\xe6\x96\x76\x0a\x6c\x42\x39\x51\xee\x2f\x7d\xaa\xe9\xd9\x83\xf0\x68\x9a\x71\x8b\x8c\x4e\x3f\xff\x31\x1c\x3c\x07\x8f\x84\x7f\x4e\x20\xd7\x2d\x04\x02\x45\x3a\x28\xc8\x75\x1f\x03\x1d\xc9\x9d\x9d\xcb\x2c\xc3\xe2\x24\x70\x46\xf9\x0f\x1a\xd8\x07\x46\x78\xc7\x6d\xd1\xe1\xf2\x6c\x97\x80\x72\xee\xd8\x21\x65\x20\x1b\xde\x32\x37\xfc\x94\xd0\xcd\x0d\x7f\x89\x7f\xbb\xdc\x08\xe5\x1c\x9d\x1b\xcd\x2c\xe4\x73\xa3\x3b\x4d\xfd\x38\x35\x3c\x83\x37\x48\x8d\x8e\xe4\xff\x6d\x6a\x04\xef\x22\x3f\x33\x35\xdc\x08\x14\x8c\x17\xe1\xeb\x56\x93\x19\xcd\xa5\xfe\x85\x23\x46\x2b\x66\x70\xbe\x88\x42\xa1\x13\x78\x2c\xcb\xcc\x0e\x11\x83\xc3\x60\xf3\x32\xd7\x99\xff\x5a\x23\xb1\x7e\x33\x34\xdd\xf9\x65\x39\x01\x2c\xe4\xe7\x43\x1e\xf7\x8c\xee\x03\x9d\x1e\x5a\x7f\x99\x93\xe4\xa7\xe3\xed\xa4\xa6\xea\xcc\xf8\xc0\xb0\x9f\x44\x07\xcc\x68\x1e\x55\x43\x2b\x0e\xbd\xbd\x1e\x7e\x7a\xed\x9f\x3c\xfc\x18\xeb\x47\x5e\x2a\xc6\x3b\x23\xf8\x21\x97\x1f\x7e\x61\x3e\x30\xd7\xef\xbc\x9c\x1c\x14\x73\x1f\x8c\x21\x0e\x2c\xed\x83\x8a\x7d\x68\x0f\xa0\x32\x60\xba\x73\xda\x80\xf5\xc3\x57\x89\xb8\x0b\x98\xe3\x35\xfb\x89\xca\x0c\x3c\x76\x85\xc8\x35\x63\x74\xf0\xcf\x13\x14\x87\xe6\x56\xa0\x4b\x9c\x77\x68\x9f\xc0\x4b\xaf\xe3\x25\xca\x84\x4f\x77\x77\xd7\x74\x94\x5e\x75\x1e\x39\xbd\x7d\xa6\x90\x0a\xc9\x13\x9d\xad\xe9\x6e\x6f\x42\xf9\x37\xba\x9b\x14\x97\x45\x6a\x04\x44\xe3\xf3\x3f\x9c\x9d\x9d\xe1\x35\x85\x55\xc2\x8e\xee\x11\xde\x57\x4e\xbc\x5c\x20\x0c\x3a\x65\x65\xd3\xde\xb0\xf6\xbb\x3a\x26\x64\x9c\xed\xc5\x45\x1f\x6a\x3b\xb7\xa8\xbd\x81\xa0\x09\xd0\x9d\x8c\xe2\xd0\x9b\xdf\x84\x5e\x7e\xbd\x7a\x99\x4f\x45\x91\x64\x75\x6a\x4e\xb5\x38\xb5\xaf\xae\xe6\x14\x6d\xf8\x7f\xd2\xab\x05\xbd\x9e\xce\xdc\xcf\xf7\xb5\x78\x7d\x50\xac\xea\x2f\x08\x8d\x3f\xf8\x7f\x15\xa0\xaf\x57\x9f\x1b\x1f\xee\x07\x54\x27\x8e\x14\xc8\xff\x06\x00\x00\xff\xff\xf3\x4d\x2d\xb8\xb5\x1d\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 7605, mode: os.FileMode(420), modTime: time.Unix(1425252884, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_configureapi_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x55\xc9\x6e\xdb\x3c\x10\xbe\xeb\x29\x06\xbe\xfc\x76\xe0\x5f\x7e\x82\x1e\xd2\xb4\x45\x83\xa2\x89\x11\x17\x28\xd0\x1b\x4d\x8d\x64\x26\x12\x29\x0c\xa9\x38\xae\xc0\x77\xef\x50\xab\xe3\xb8\x59\xdb\x5b\x4f\xa6\xc8\x59\xbe\x65\x48\x97\x42\xde\x88\x0c\xa1\x10\x4a\x47\x91\x2a\x4a\x43\x0e\xa6\x11\xc0\x24\x53\x6e\x53\xad\x63\x69\x8a\x85\x14\xb6\x12\xf9\xb5\x2a\x16\x99\xf9\xdf\x6e\x45\x96\x21\x2d\x90\xc8\x90\x9d\x44\xb3\x28\x5a\x2c\xe0\xdb\x46\x59\x48\x55\x8e\xc0\xbf\x56\xa4\x08\xce\x00\x26\xca\xc5\x70\xa9\x25\xef\x3a\xc0\x3b\x65\x9d\x0d\xab\xad\xd1\xff\x39\x58\x23\x98\x5b\xa4\x2d\x29\xe7\x90\x9b\xa7\x95\x96\x20\x8d\x4e\x55\x56\x11\x9e\x2e\xcf\xa7\xa2\x54\x70\x62\x4a\x24\xe1\x94\xd1\x36\xae\xeb\xf8\xb4\x2c\x2f\x44\x81\xde\xf3\xf9\x0c\x6a\x06\xca\xcd\x87\x24\x70\x1b\x84\x90\xb5\x41\x42\x3e\xe3\x65\xbc\x42\xba\xc5\x8f\x01\x2c\xbc\x83\x16\xf4\xde\x5e\xc4\x51\x75\x4d\x42\xb3\x06\xf1\x19\x37\xa9\x0a\xb4\xde\xd7\xb5\x4a\x21\x3e\x2f\xca\x1c\x0b\xd4\xae\xe9\xef\x7d\x28\xc7\x18\xce\x72\x61\x6d\x8b\xa2\xcb\x08\xa5\xf9\xe0\x30\x7e\x3a\x6b\xaa\x63\x6e\xf1\x89\xe4\x4e\xd4\x1e\x01\x7d\x62\x2d\xa6\x41\x90\x29\x81\x32\xf1\x15\x8a\x04\x69\x0e\x4e\x50\x86\x0e\x94\x76\x48\xa9\x90\x58\xfb\x59\x4b\xa9\x51\x02\x80\xd0\x55\xa4\x7b\x96\x17\xc6\x0d\x88\x30\x99\x4e\xb8\x7b\xdb\x38\x08\xd6\x76\xde\x08\x0b\xda\x38\xd8\x61\xf0\x03\x35\xa8\x31\x61\x12\xd0\xfb\x19\xe3\xd7\x89\xf7\x2d\x93\x61\xd5\x29\xb6\x24\x93\x54\xf2\x25\x8a\x75\x19\xaf\x53\x6c\x2f\xb9\x57\xac\xdf\x1a\x15\xdb\x06\xc5\xbe\xf3\x54\x05\xc5\x12\xe1\xc4\xdb\xf5\x2a\xfb\xbe\x6f\xd5\x6b\x85\xb2\x62\x64\xbb\x0f\x98\x2a\xad\x9a\xa9\xee\x02\x1a\xf5\xec\x7b\x61\x95\x3c\xad\xdc\xa6\xd9\x7d\x28\x40\x38\x62\xf2\x0d\xcf\xca\x32\x20\xeb\x48\xe9\x6c\x0e\x25\x87\x74\x1f\x33\x98\x9e\x70\xd6\x92\xd7\x52\x95\x22\xf7\x7e\xde\x32\x9c\xdd\x67\xad\x55\x3e\xff\x1d\xf5\x75\xc0\x01\x22\x74\x7b\x9a\xf2\x48\xb5\xa7\xc1\x97\xf3\x0b\xee\x9e\xc9\xc3\x99\x1b\xae\xfa\xe7\xb0\x87\xfb\x7f\x83\xbb\x16\xfd\xe8\x61\x4a\xa6\x08\x9f\x2b\x53\x91\x0c\x1b\x2f\x21\x76\xdc\xcd\xcb\xe1\x69\xea\xa9\x2f\xdb\xe7\xf4\xd8\xec\x7e\x16\x3a\xc9\xfb\xb9\x1f\xe2\x8e\x07\x8d\xc3\xdc\x97\x25\x51\x70\x93\xb2\xf9\x7d\xac\x40\x1b\xb9\x6f\x07\x57\x84\x38\xe8\x6d\x48\xfd\xc4\x64\x2c\x36\xbf\xef\xda\x18\xc2\x7d\x7a\xfd\xe1\xc0\x8d\x2e\x83\x6d\x6a\x93\x56\x95\xe4\xdb\x6f\xbf\x9a\x04\xf3\xbe\xd0\x55\x63\x91\x3d\x33\x41\xce\xbb\xcb\xf5\x35\x4a\xe7\xfd\xc9\xd0\xec\x20\x69\x80\x71\xcc\xe7\xe3\x5d\xfa\x8d\x1f\x48\xe6\xb0\xc0\xc3\x79\x18\xfe\x40\xf6\x86\xe1\x19\xf7\xf8\xd1\x87\xe8\x9e\x99\xaf\xf1\xef\x9f\x65\x7f\xcd\xb2\x83\xfb\xea\xa3\x5f\x01\x00\x00\xff\xff\xf5\x8f\x3e\xec\xe4\x08\x00\x00")

func templates_server_configureapi_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_configureapi_gotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templates_server_configureapi_gotmpl() (*asset, error) {
	bytes, err := templates_server_configureapi_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/configureapi.gotmpl", size: 2276, mode: os.FileMode(420), modTime: time.Unix(1425255697, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_main_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xcd\x6e\xdb\x3c\x10\x3c\x5b\x4f\xb1\x21\xf0\x01\x32\xbe\x88\xea\xd9\x85\x0f\xbe\xb4\x71\xd1\xfc\x20\x4e\xd0\x4b\x2f\x8c\x44\xc9\x4c\x28\x52\x20\xa9\xa8\x86\xa0\x77\xef\x2e\x2d\xd9\x46\x72\xe9\xc5\x06\x77\x87\xb3\xc3\xd9\x51\x2b\x8a\x37\x51\x4b\x68\x84\x32\x49\xa2\x9a\xd6\xba\x00\x69\x02\xc0\xb4\xad\x19\xfd\x5b\x1f\xff\x8c\x0c\xf9\x3e\x84\x96\x25\x74\xaa\x55\xd8\x77\x2f\xbc\xb0\x4d\x5e\x08\xdf\x09\xfd\xaa\x9a\xbc\xb6\x99\xef\x45\x5d\x4b\x97\xfb\x56\x16\x2c\x59\x26\x49\x9e\xc3\xd3\x5e\x79\xa8\x94\x96\xd0\x0b\x0f\xb5\x34\xd2\x89\x20\x4b\x78\x39\x40\xd8\x4b\x98\xae\x40\xb0\x56\x73\xc2\xdf\x8a\x37\xac\x76\x4e\x82\xb1\x01\xcb\x60\xdf\xa5\xeb\x9d\x0a\x12\xf1\x33\x95\xa8\x02\xde\x39\xd8\xee\x82\x50\x05\x78\x91\x85\xe8\x3c\xb6\xb5\xa6\xa6\x03\x59\xaa\xe0\xa1\xb7\x9d\xc6\x81\x12\xb4\xf5\xe1\x8a\x86\x6c\xc3\x54\xb4\x46\x1f\xa8\x33\x0f\x09\xd2\x80\xaa\x22\xb3\xfc\xd3\x6a\x55\xa8\x80\x00\x7a\x8f\xaa\x0e\x90\x65\xca\x14\xba\x2b\x65\x46\x86\x41\x65\x5d\x7c\xc3\xac\x21\xce\xc5\x9a\xef\xda\x68\x24\xfa\xd3\x08\x53\x7a\x9c\x58\xdb\xd5\x09\x35\x3f\xf9\x5c\x90\x0e\xc7\x43\x16\x80\xf3\x9c\x73\xc8\x36\x30\x0c\x7c\xd3\xb6\x77\xa2\x91\xe3\x38\x0c\xa8\x88\x3f\x38\x9c\xad\x5a\xa1\xc7\x11\x75\xb4\xf3\x89\x90\x17\xad\x61\x90\xa6\x9c\xaf\x6c\x8f\x62\x9f\xb7\xf1\x4a\x8f\x4b\xcb\x3a\x35\x21\x92\xe4\x5d\xb8\x59\xca\x8f\xdd\xfd\x1d\xac\xe1\xd5\x5b\xc3\x1f\x45\x7f\x2b\xbd\xc7\x54\xa4\x48\xbd\x3b\x03\xc6\x11\x17\x5a\x75\xa6\x88\x69\x49\x97\x30\x60\x14\x26\x82\x1d\x1a\x74\x0d\xd2\x39\x58\xad\xa3\x5b\xfc\x4e\xf6\xe9\x05\xfb\x35\x30\xb6\x44\x3c\xca\x22\xd4\xd5\x1a\x8c\xd2\x91\x01\x70\x2b\x35\xff\x26\x02\x9a\x67\x52\x6c\x12\x6c\xa4\x98\x45\x0f\x91\xcf\x7a\xfe\x5d\xe2\x62\xde\x53\xf6\x70\xff\xf8\x34\xf3\xc4\xf6\x7a\x8d\xc4\x13\xcf\xb1\x00\xec\x0b\x9b\x19\xf6\xb8\xef\x0f\x0c\x37\xf7\xbb\x13\x43\x6c\x5f\x32\x1c\x0b\x14\xfe\x42\x68\x3a\x9c\x98\x44\xab\x22\x51\x4b\x1b\x53\xd6\x78\x7a\xe0\xe5\x92\x36\x0f\xdb\xf4\xc2\x0c\x9a\x50\x58\x53\xa9\x1a\x93\x4c\x3d\x24\x58\x12\x91\x56\x3e\xd0\xde\x4f\x6e\xe1\x97\xc5\x7f\xc6\x62\xca\x42\xd1\xb2\xeb\xa3\x8a\xff\x81\xad\x18\xfe\xd2\xa3\x96\xc9\xe2\xa3\x6f\x8b\xc5\x27\xd7\x16\x28\x74\x51\x35\x21\xc6\x21\x54\x29\xa3\x58\x29\x53\x53\x42\x6e\x3a\x0c\xe2\x49\x2b\x88\x00\xf4\x31\xaf\xf2\xfc\x3f\xff\xdb\xe0\xc8\x59\x15\xdf\x94\xa5\x4b\x97\x51\xe9\x34\x12\x25\x12\x96\xef\x28\xa4\xe9\x59\x3e\x3e\xe8\x58\xfb\x94\xb5\x5f\x18\xb4\xe7\xed\x94\x33\x24\xfb\xfa\x8f\x2b\x1f\x93\xbf\x01\x00\x00\xff\xff\x95\x3d\x1a\x1c\x8f\x04\x00\x00")

func templates_server_main_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_main_gotmpl,
		"templates/server/main.gotmpl",
	)
}

func templates_server_main_gotmpl() (*asset, error) {
	bytes, err := templates_server_main_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/main.gotmpl", size: 1167, mode: os.FileMode(420), modTime: time.Unix(1425241350, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\x4d\x6f\xe4\x44\x10\xbd\xfb\x57\x14\xa3\x65\x99\x89\x8c\x73\x0f\xda\x03\x04\x50\xf6\xc0\xb2\x4a\x22\x38\xa2\x4e\xbb\x6c\x37\xb1\xbb\x9d\xee\x76\x26\x83\xe5\xff\x4e\xf5\x87\x1d\xcf\xc4\x33\x42\x40\x22\x84\x14\x29\xfe\xa8\x7e\x55\xef\xd5\xab\xf2\xb4\x8c\xdf\xb3\x12\xa1\xef\xb3\xcf\xe1\x72\x18\x92\xe4\xfc\x1c\x6e\x2b\x61\xa0\x10\x35\xc2\x96\x19\x28\x51\xa2\x66\x16\x73\xb8\xdb\x81\xad\x10\xcc\x96\x95\x25\x6a\xb0\x4a\xd5\x99\x8b\xff\x21\x17\x56\xc8\x92\x5e\x8e\xe7\x1a\x51\x56\x16\x5a\xad\x1e\x11\x8a\xce\x7a\xa8\x0a\x25\xec\x54\x07\x1a\xbf\xd6\x9d\xf4\x48\x23\x34\x70\xd5\x34\x4c\xe6\x49\x22\x9a\x56\x69\x0b\xeb\x04\x60\x25\xd1\x9e\x57\xd6\xb6\xab\x84\xee\xfa\x5e\x33\x49\xc5\xbe\xbb\xc7\x5d\x0a\xef\x1e\x59\xdd\x21\x5c\x7c\x80\xec\xa3\x3f\x61\xa8\x74\x17\xe4\x5e\x0f\x03\x5d\x50\x72\x21\x6d\x01\xab\x2f\x1f\x56\x31\x3c\x86\xa0\xcc\xe9\x6a\xe3\x99\x12\xf5\xcb\x9a\x19\xf3\x89\x35\xf4\xfa\x8a\x4a\xa8\x51\xff\xd8\x49\x0e\xb6\xd3\xd2\x00\xa3\xea\x25\xb7\x42\x49\xd8\x0a\x5b\xf9\xa2\xb5\xe7\x66\x44\x29\x19\x05\x21\x50\x1a\x45\x81\x04\x75\xd5\x11\x89\x19\x1e\x54\x01\x30\xb1\xbb\x16\x4f\xe4\x72\x39\xd6\x7d\x2f\x0a\xa0\x46\x68\xd6\x10\x99\xfd\xe0\xf0\x34\x96\xee\x03\xe9\x34\x64\xdf\x76\xb6\x52\x5a\xfc\x41\xad\x99\x0e\xa6\x30\x0f\x9b\x85\x0c\xc3\x99\x6b\x34\xa9\xc2\x45\xcb\x6a\x17\xe0\xe3\x36\x10\x53\xdf\x74\x9c\xa3\x31\x3f\xa9\x1c\xeb\xf1\xf8\x35\x7a\x1d\x2e\x55\xd3\xd6\xf8\xf4\xf3\xdd\xef\xc8\xad\x07\x8a\x29\x0e\x0e\x4d\xc9\x51\x6b\xa5\x49\x62\xc7\x0c\xd6\x85\x3c\x4e\x7e\x03\xe1\xe6\x80\x7f\xeb\xff\xc3\x6b\xc8\xd0\x8e\x12\xc0\x9b\x0b\x02\x3d\x39\x50\x7b\x08\x28\xe4\x22\xe5\x7f\x8d\xdd\xc8\x26\x19\x8e\x3b\xdd\x79\x17\x75\xc1\x38\x4d\xa9\xa2\x81\xae\x98\x05\xce\x64\xf4\x2d\xd0\xd4\x88\x7c\xd1\xd8\xa1\xd6\x13\xbe\x9e\x21\x3b\xce\x8b\x3d\xfe\x7f\x78\x3c\xc8\xfb\x09\xb7\xfb\x74\x80\x6b\xa4\xcd\xe6\x56\x88\xc4\x2d\xb8\x3d\x96\x8d\xda\x04\xad\x71\x51\x59\xd5\xba\x8d\x48\x0b\x27\xcc\xce\x0b\xdc\x35\xb7\x4f\x70\xd6\x88\x9c\x90\xb6\x4c\x63\x76\xa9\x48\xe9\x27\x9b\x8e\xcb\x66\xb9\x1f\x1b\x6f\xf6\x79\xa2\x99\x15\xdf\xef\xbf\xea\x23\xe4\x05\x50\xae\x34\xf6\x4e\x5f\x8c\x09\x06\x47\x39\x48\xf7\xbd\xe2\x37\x96\xd4\x2e\xbd\x4e\x7b\x77\x61\xcb\x2e\x18\x04\x8c\xd5\x1d\xb7\x3e\x7f\x4c\xb4\xc4\xc7\xaf\xea\xb9\x5b\xc2\x7f\x58\x5c\x09\xcf\x7b\xfd\xea\x94\x08\xae\xf0\xb0\x91\xe8\xf5\x35\x72\x14\x8f\xa8\x63\x55\x07\xf2\x6c\xe0\x06\xf5\x23\x5e\xdd\xde\x7e\x5e\xeb\xd8\xbe\x6b\x34\xad\x92\x06\x7f\xd5\x82\xbc\x9d\x82\x86\xb3\xf8\xfc\xa1\x43\x63\xe3\x74\xab\xce\x62\x0a\xbf\xb9\x6f\xd3\x8b\x2c\x23\xb9\xec\xda\x45\x7d\x94\x85\x5a\xbb\x2d\x39\x52\x9d\x1b\xb9\xf3\x83\x9c\x02\xb9\xec\x34\xd4\x74\x68\xed\x4a\x72\xb8\x1b\x02\x24\x38\x77\xf2\x8b\x0f\x20\x45\xed\x0b\x83\x53\xe5\x78\x66\x39\x31\x25\x88\x88\x42\x63\xa4\xf2\x8e\x8c\x9f\x8e\x9c\x08\x70\xe3\x81\x82\x6d\xe8\xd2\x7d\x50\x9f\xd7\xa9\x2f\xd3\x25\x7e\x80\xe7\x19\x84\xd5\xb4\x09\xfa\x61\x35\xf2\xa2\x6e\xd5\x06\xc7\xbb\x6c\x7d\x30\xb6\x1b\xa0\x91\x12\xf6\x2b\x03\xea\x3e\xfc\xaa\xa0\x3f\x9a\xa7\xba\xde\x85\x2f\xed\xcb\x11\x4f\x66\xdf\xf6\x89\xfe\x49\xe1\xbe\x13\x32\xff\xc5\x6d\xb8\xd8\xbf\x49\xbf\xf4\xc0\x79\xef\x5f\x62\x4c\xcb\xca\xb3\x20\x89\xc7\x45\xf3\xcd\x9e\xec\x8e\xc6\x1d\xa5\x19\xf7\xe5\x6b\x75\x61\xd1\x41\xd3\xc3\xfd\xfd\xa5\x1d\xd6\xf3\x0a\x5b\x8c\xb9\x88\xef\x97\xe4\x8b\xb3\x94\x1d\x5b\xe9\x8b\x4a\x4d\x19\x27\xb7\xf8\x16\x33\x6e\x3b\xdf\xd4\xf8\xc1\xf1\x3f\xaf\x42\x37\xde\xd0\xc3\xc9\x3f\x87\x3d\x22\xf4\x82\x41\x82\x4d\xfd\xd3\xbf\xd8\xa0\x45\x13\xff\xad\x2e\x4c\x5f\xc3\xff\x8c\xf4\x6f\xaf\xbc\x5f\x10\x43\xf2\x67\x00\x00\x00\xff\xff\x24\x40\xaf\xc9\xfc\x0c\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3324, mode: os.FileMode(420), modTime: time.Unix(1425240994, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\x5f\x73\xdb\xb8\x11\x7f\xd7\xa7\xd8\x6a\x72\x19\xc9\xa7\xa3\xfd\x70\xd3\x87\x5c\xdd\x87\x38\xbe\xc6\x33\x69\x9a\xda\x17\xbf\x24\x99\x06\x26\x21\x09\x0d\xff\x19\x00\x6d\x2b\x1a\x7d\xf7\xee\x02\x20\x09\x52\x24\x2d\x29\xf6\x74\xee\x1e\x2e\x22\xb0\x00\x7e\xbb\xfb\xdb\x3f\x80\xd7\xeb\x88\xcf\x45\xca\x61\x9c\x4b\x91\x08\x2d\xee\xf8\x1d\x8b\x45\xc4\x74\x26\xc7\x9b\xcd\x68\xbd\x16\x73\x08\xfe\x29\xd2\x77\x3c\x5d\xe8\x25\x8e\xe0\x37\x97\x12\x5e\x9d\x82\x13\x14\x59\x5a\x0b\x4c\xd6\xeb\xe0\x03\x23\xc1\x19\x8c\xf1\xf7\xbb\x2c\x34\x12\x9b\xcd\x78\x06\xf8\x7d\xcd\xe2\x82\x9f\x3f\xe4\x92\x2b\x65\x86\xcd\xa8\xb7\xff\xf4\x37\xb3\xfd\x5f\x4e\x21\x15\x31\xac\x47\x00\x92\xeb\x42\xa6\x34\x3a\x22\x3c\x3c\x8d\x6a\x5c\xec\xe1\x11\x5c\xa5\xc0\x81\xb8\xea\xfd\xf7\xc2\x85\x27\x69\x2e\xd3\x3e\x54\x6e\xfa\x00\x4c\x5f\xed\x12\xbb\xf9\xd7\xfd\x6c\x25\x52\x91\x14\xc9\x80\x07\x69\x7a\x10\xd3\x3c\xce\x98\xfe\xeb\xaf\x93\x2e\x6c\xd3\xd2\x91\xf6\x10\xf3\x75\xfe\x10\xc6\x85\x42\x4a\x55\xc3\xfb\x7a\x77\x10\xb1\x9d\xfe\x51\xc4\xe5\x21\x2d\xc4\xe5\xf0\x7e\x88\x8b\x58\x8b\x3c\xe6\xff\x9a\xf7\x82\xae\x24\x7e\x14\xb7\x77\xd4\x5e\x18\xcf\xd3\x7e\x93\xd2\xdc\x61\x91\x62\x77\xdd\x19\x88\xf9\xb7\xce\x3d\x61\xa1\x74\x96\xcc\x33\x99\x30\xdd\x48\x3f\x9d\x28\x7f\x37\x72\x8f\x58\x90\x06\xac\xa0\xf9\x54\x5a\x8a\x74\xd1\x67\x4f\x7b\xb2\xda\x0d\x7e\x0d\x5b\xc5\x22\xec\x4a\x97\xef\x39\x8f\xd4\x95\xf8\xce\xcd\x08\x62\x94\x2c\x79\xcf\x12\xfc\xa4\x41\xd2\x46\xa4\xe4\xdd\x98\xa7\xdd\x88\xa6\xdb\xb1\x7b\xa1\x79\xa2\x06\x82\xd7\xcc\x3f\xe6\xbb\x16\x92\x32\x64\xdd\xde\xfb\x06\xe7\x30\x24\x37\x7f\x10\xa4\x6a\xef\xbd\x20\x7d\x4c\xc5\x6d\xc1\x07\x51\x79\x22\x7b\xf3\xfc\x4f\x1f\x65\xb9\xcc\x72\x2e\xf5\xaa\x83\xb1\x17\xea\x43\x59\xfe\x69\x05\xda\x27\x8f\x99\xee\xee\x0a\x20\x20\x11\x5f\xd9\x0b\x75\x66\x02\xd8\xc6\x1b\x16\xa7\xe6\x1e\xdd\xd1\xdd\xb9\x4d\x96\x6a\x86\x58\x5b\x1b\xb4\xe2\xac\xb9\xb2\xa5\xe4\x8d\x48\xa3\x0a\xf4\xb8\x4b\xc2\xec\x46\x62\xdc\x33\x00\xd2\x90\xa7\x9a\xc4\x82\x0b\x9c\x79\xb8\x66\x88\x21\x24\xc7\x15\x5a\xc4\xc1\x55\x1e\x0b\xfd\x7a\x65\x15\xb4\xbe\x23\x79\x5f\xf6\x53\xd7\xe8\x17\xeb\xdd\xb3\x2c\x8e\x79\x48\xfe\xad\x52\x92\x09\xf1\x58\xf1\xae\x23\x25\xbb\xaf\xf5\xf3\x26\xd5\x77\x9a\x55\x18\x26\xa3\x3b\x26\xa1\x31\x67\x3e\xff\x58\xe5\xbc\xbd\xe8\xda\xda\x8d\x9f\xc7\x3c\x41\x70\xb4\xc3\xbc\x48\xc3\x49\x43\x88\x12\x92\x61\xd8\xd9\x52\xc4\xd1\x36\xfb\xea\x29\x7b\xc4\x14\x8e\x90\x6c\x99\x54\xc1\x75\xc5\x6b\xc3\xc4\x26\x77\xda\x7c\x03\xbb\x09\x42\xac\x38\x8b\x14\x46\xce\x8e\x90\x1d\x4d\x7d\x08\xe7\xc9\x6f\xad\xb1\xbf\x41\xcb\x1e\x2d\x81\x9f\x7f\x76\x20\xd0\xa5\xb8\xa1\x83\xbc\x45\xcf\x7a\xa2\xc1\x7a\xe2\x81\x9d\x40\x1e\xde\x21\x72\xe2\xe1\x1d\x99\x62\x56\x46\x71\x65\x06\x4f\xa2\x69\x49\xc3\x03\x8f\x00\x53\xc4\xe3\xb2\x80\x17\xb0\x7e\xc8\x92\x15\x2f\x52\x63\x24\x32\xee\xa4\x3a\x63\xb0\xb6\xf9\xde\xb0\x29\x63\x18\x03\xda\xb8\x02\x62\x15\xe9\xa5\x48\x53\xa1\x21\x5a\x6c\x67\xa2\x46\x2e\xa2\x53\xa1\x4d\xd3\x53\x60\x79\x8e\xe4\x6e\x9e\x22\x67\x60\x2c\x3d\x35\x0b\x6c\x60\x98\xed\x0e\x86\x3c\x60\x8e\x0e\xd4\x2d\xdc\xfb\x21\x1f\x3e\xad\x4a\x40\xa4\x15\xd4\x24\x6b\xa4\xbb\x56\xe8\xf8\x39\xca\x0f\x9a\x1f\x76\xa1\x87\xfb\x39\xcc\xb0\x7d\x48\x99\xc8\xaa\x44\x9c\xb3\xf0\x1b\x5b\x70\x5b\xfb\xcd\x4f\x9c\x1d\x1d\x1f\xc3\x1f\x4b\xa1\x60\x2e\x62\x0e\xf7\x4c\xc1\x82\xa3\x5d\x50\xa1\x08\x6e\x56\xa0\x97\x1c\xd4\x3d\x5b\x2c\x30\x76\x75\x96\xc5\x01\xc9\x9f\x47\x18\xb9\xe9\x02\x27\xcb\x75\x89\x58\x2c\x35\x60\xda\xb9\xe3\x98\xe3\xb4\xd9\x6a\xc9\x53\x58\x65\x05\xea\xf5\x8b\x2c\xd2\xc6\x4e\xe5\x11\x10\x66\x49\xc2\xd2\x68\x34\x12\x49\x9e\x49\x0d\x13\x54\x7a\x9c\x72\x7d\xbc\xd4\x3a\x1f\xd3\xc7\x42\xe8\x65\x71\x13\xa0\xe0\x71\xc8\x54\xc1\xe2\xff\x8a\xe4\x78\x91\xfd\xe2\xb6\xda\x45\xe6\xd8\x86\xfa\x4e\xa2\x75\xb3\xb0\x93\x78\x22\xa2\x28\xe6\xf7\x58\x7c\x0c\x62\xd2\x1c\xcf\x31\x9e\x93\x2c\x45\x5b\xbf\xf8\xc6\x57\x33\x78\x61\x22\x8c\xa8\x13\x5c\x18\x45\x95\xe3\x1d\x4d\x9b\x1c\x8f\xb6\xc3\x42\x30\x87\xf1\x4f\xb7\x63\x27\xee\x44\xac\x13\xa7\xc6\x51\xe4\xe7\x98\x29\x65\xbb\x36\xd3\xc0\x29\xb4\xa1\xe1\xb2\x02\x16\xc7\xc6\xca\x37\x59\x91\x46\x90\xdb\x59\x4a\xef\x34\x88\x4b\xdf\x16\x68\x6b\x6f\x3d\x50\x91\x30\xba\xd2\xde\x7a\x95\x8b\x10\xb7\x30\x3e\xc7\x70\x41\x9d\x20\xbb\x31\x51\x12\xc1\x5c\x66\x09\x30\x20\x1d\x83\x4b\x8e\x8d\x9c\xd2\x23\x5c\xc0\xbb\x11\x61\xcb\x5f\x84\xda\x15\x04\x6b\x07\xdb\x6d\xaa\x32\xd9\xbf\xe1\x2a\x94\x22\xb7\x79\xd5\x2a\xd6\x18\x2a\xd5\x36\x21\xf0\xc1\x55\x33\x87\xba\xae\xb6\xb5\x79\x2c\x8f\x5f\x63\xd8\x3a\x74\x68\x04\xbd\x04\x8a\x63\xb4\x0b\x5a\xc3\xf9\x95\xe3\x17\x12\xd2\x88\xcc\x40\x68\x40\xe8\x45\x82\xa3\x7a\xc9\x34\xb1\x11\xef\x75\x0f\xc4\xeb\x74\xa1\x40\xd0\x97\xa9\xdc\x0c\x5c\x94\xb3\x9b\x98\x4f\x50\xbd\x79\xa2\xd1\x0e\x0b\x81\x3f\x57\x53\x5b\x4a\xa8\x90\x73\x39\x67\x21\x27\x28\x64\x76\x65\x36\xb0\xd9\x55\xd1\x61\xf7\x02\x3d\x54\xa0\x6d\x71\x19\x33\x11\x93\x70\xbd\xcc\x22\x20\xbb\xab\x11\x35\x07\x40\xb1\x7d\xc9\x43\x8e\x95\x51\x3a\x85\x8f\xba\x8c\x3c\xf5\xb5\x9d\x48\x38\xf2\x7d\x33\x03\x99\x15\x18\x5e\x47\x35\x3f\xb1\xb5\xd7\xe1\x92\x47\x97\x34\x51\x42\x26\x0f\x51\x3f\x83\x65\x05\x3e\x7d\x31\x63\x65\x11\x0f\xde\x32\xf5\xef\x82\xcb\x55\xe9\xb8\x5b\x65\x1a\xa4\xe0\xe3\xe5\xbb\xc0\x4c\x4c\xea\x8a\x01\x6e\x01\xd5\xf9\x52\xde\xf3\x4e\x17\x0f\xca\x73\xd2\x4c\x6f\xf5\x9f\xb6\x25\xad\x4f\xdf\x6c\x1a\xb9\xb7\x69\x9e\x80\x9c\xbc\xc5\x92\xc9\xad\x0a\xfe\xc1\x75\xdd\xec\x4f\x9d\x4d\xdc\xd5\xb4\xe3\xc6\x09\xc6\x0c\x55\x8e\xc5\x0f\xd3\x7c\x4c\xab\x62\x5a\x69\x8a\xdd\x0b\xee\x79\x30\x34\x8b\xc3\x1a\xe2\x39\x41\xbe\xe5\x0c\xab\xd8\xe1\x30\x03\xbb\xc1\x73\x42\xac\x08\x53\xbb\xfd\x77\x2c\x1e\xd5\x90\x7f\x49\x6d\x5f\x5a\x2d\xba\xaa\x41\x94\x06\x11\xad\xf6\xc0\xf6\xb6\x80\x1d\x00\xa9\x1b\x7c\xcf\xef\x27\xbf\x9e\x9c\x60\xa3\x27\x71\x77\xaa\x71\xa6\xbc\x7d\x1e\x37\x8f\xfe\x3c\x86\x39\xc3\x89\xe8\x15\xfc\x74\x37\xb6\xea\x19\xfd\xc0\xe8\x66\x0f\xd9\xb6\xf3\x76\x2e\x3b\x2d\x4b\x62\x40\xc0\xd7\x6f\x30\xc3\xbc\x82\xb6\xda\x56\xd1\xf6\xb8\x1d\xdd\x34\xac\x7a\x98\x9b\xc9\x6e\xa6\xc1\x7c\x5a\x2f\xbb\xd6\xab\xca\xe3\x9e\xdb\x9f\x3c\xda\x3b\xae\x8a\x1d\x09\xa0\xef\x42\xf8\x74\x94\xa6\x52\xd3\xa4\xf5\x93\xe8\xd2\xe7\xa3\x67\x54\xc8\xf7\x5e\x55\x13\x2e\xd4\xeb\x2c\x2a\xbd\xd4\xb8\xd5\xd8\xf3\xd0\xaf\x54\x4e\x65\xf9\x03\x81\xd3\x82\x19\xbc\xdc\x21\x18\x76\x46\xe9\x02\x15\x61\x28\x7e\x4e\x9f\x93\x56\x78\x8e\xbb\x6e\x6e\xfd\x61\xba\xc5\x49\x2a\xde\xff\x69\x5d\x2e\xb6\xcb\xb2\x79\x2e\x48\x6d\x3f\xfd\x68\xa0\x97\x4d\x7e\xcf\x25\x62\x7b\x8b\xf2\x5a\x31\x79\xd4\x93\x83\xde\xb4\xff\xdd\x60\x36\xfb\xe6\xbe\x36\xa3\xfa\xff\xbb\x64\x8d\x2d\x5d\xf6\x82\x36\x00\xac\x82\xe0\x32\x84\xe3\x99\x97\x30\xdc\x2f\x44\x47\xef\xb5\xb8\x7a\x0a\x7f\x87\x93\xce\x6b\xfc\x19\xb6\x6e\x99\x12\x9a\xd7\xaf\x22\x96\x1a\xb8\x2a\x08\x82\x92\xd8\xcd\xa7\x0f\x6c\xbb\x5f\x84\x65\x63\x65\xba\xf3\xaa\xcd\x02\xf3\x98\xd3\xee\x59\xfc\x8e\xc5\x8f\x84\xea\xd9\xc3\x7b\xd7\xe8\x7c\x9c\x1b\xea\xf1\x6a\x28\x75\x8f\xd7\x93\xb2\xd9\xbd\x7b\x56\xaf\x1e\xd0\xa1\xa7\x29\xad\x1e\x65\x28\x33\x4d\x1c\xf4\xaa\x7b\x99\x82\xe9\x18\x85\xe4\x91\x4f\x02\xef\xc5\xb4\x9c\xbe\xaa\x5e\xf1\x7b\xdf\x46\x10\xd5\x8e\xaf\x12\xb5\x8b\xcd\x9d\x7c\xe8\xc9\xc7\x7b\xec\xa1\xfd\x0f\x79\xd2\x19\x7c\xcc\xa9\x9e\x71\xdc\xee\xee\xca\xb1\xfd\x0c\x77\x6a\xfb\x78\xaf\xd4\xf6\x88\xe1\x46\x1d\x4a\x62\x73\x5c\x33\x53\x0d\x47\x5c\x79\x57\xd9\x76\x7c\xef\x5f\x4b\x06\xcd\xdc\x20\x7d\x5f\x1d\x7e\x3a\x66\x7e\xfa\xb2\x07\x37\x95\xfb\xb3\x8c\x09\x70\x72\x41\x65\xb1\x06\x31\x8d\xd8\xe9\x69\x4f\xf0\x97\xa2\x03\xde\x6e\x55\xb6\xfa\x98\x37\x7c\xce\x8a\x58\x5f\xdb\x1b\x77\xc4\xe7\xd7\xe5\x55\xbd\xfb\xf9\xb9\x29\x3f\xf0\xc8\x6c\x98\x5a\xe3\x7e\xf9\xd2\xe8\x58\x1e\xe0\x67\xb2\x1e\x22\x95\xa2\xcd\xee\xae\xc7\x12\xe8\x5c\x3f\x93\x0e\xbd\x69\x6d\x06\x38\xde\x7c\x58\xf2\xd9\x7b\x45\x7b\xfc\x9f\x28\xdc\xc1\xe1\xfa\x8f\x17\x94\x76\x9b\xd1\xd5\x83\x77\x5f\x86\x3f\xaa\xc3\x70\xce\x1d\x7e\x8d\xef\x0c\x4c\xff\xef\x2a\xd5\xbf\xff\x0b\x00\x00\xff\xff\x3e\xf9\x78\x0a\x28\x22\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8744, mode: os.FileMode(420), modTime: time.Unix(1425183011, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/configureapi.gotmpl": templates_server_configureapi_gotmpl,
	"templates/server/main.gotmpl": templates_server_main_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"configureapi.gotmpl": &_bintree_t{templates_server_configureapi_gotmpl, map[string]*_bintree_t{
			}},
			"main.gotmpl": &_bintree_t{templates_server_main_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

