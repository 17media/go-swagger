package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x51\xcd\x4e\xf4\x30\x0c\xbc\xe7\x29\xac\x4a\x9f\xf4\x71\xa0\x7b\xe7\x0a\x1c\xb8\x20\x24\xf6\x01\xd6\xb4\x6e\x1a\x68\x7e\x48\x5c\x56\x55\x94\x77\x27\x49\x5b\x56\xcb\x85\x5b\x6c\xcf\xd8\x33\x93\x18\x7b\x1a\x94\x21\x68\xb4\xed\x69\x72\xde\x3a\xf2\xbc\x34\x29\x89\x18\xd5\x00\xed\x83\xed\x5e\xd9\x2b\x23\x53\x8a\xf1\xba\x22\xd3\x57\x58\xfb\xb2\xb1\x9e\x51\x53\x4a\x50\x70\xc8\x78\x5c\x5c\xa9\x4e\xef\xc1\x9a\xbb\xa6\xc0\xd0\xa3\x5e\x31\xcd\x49\xec\x7c\xe1\xb0\xfb\x40\x49\x50\x11\xf5\x59\xba\x87\x03\x1c\x47\x15\x60\x50\x13\xc1\x19\x03\x48\x32\xe4\x91\xa9\x87\xb7\x05\x78\x24\x08\x67\x94\x92\x3c\xb0\xb5\x53\x5b\xf0\x8f\xbd\xe2\x2c\x2d\x0f\x77\x9e\x56\x72\x64\xc8\xa6\xbe\x08\x86\x99\xeb\xaa\x91\x0c\x2c\x76\x06\x4f\xb7\x7e\x36\x57\x9b\xf6\x13\xd0\x59\xad\xd1\xf4\x62\xcb\xe0\x49\x3b\xeb\x39\xa4\xa4\xd6\x07\xfc\x17\x90\xe5\x7a\x34\x59\xf6\x65\x5a\x9b\xf9\x9a\x32\x3c\x40\xf3\xef\xb3\x81\x76\x6b\xae\x4e\x6f\x2e\x9e\xff\xc8\x76\x07\x72\x8e\xb0\xe4\x72\x3f\x61\x08\x5b\xba\x81\xfd\xdc\x31\x44\xf1\x23\x60\x8b\x5f\x51\xa8\x4c\x26\xed\xa6\xe2\xe2\xd7\x97\x56\x35\xbb\x82\x24\xbe\x03\x00\x00\xff\xff\xfc\x8d\x3d\xfc\xfa\x01\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 506, mode: os.FileMode(420), modTime: time.Unix(1424115031, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xdd\x6f\xdb\x36\x10\x7f\xf7\x5f\x71\x13\x36\xc0\x4e\x1b\x65\x03\x86\x3d\xac\xeb\x80\x22\xf3\xd0\x00\x5d\x1a\x24\xdd\x9e\xcb\xc8\x67\x99\x1d\x45\x3a\x24\x95\x8f\x19\xfa\xdf\x77\x24\x45\xcb\xfa\xb0\x6b\x25\x18\xb0\x27\x8b\x77\xe4\xdd\xef\x7e\xf7\x41\x7a\xb3\x59\xe0\x92\x4b\x84\x64\xad\x79\xc1\x2d\xbf\xc7\x7b\x26\xf8\x82\x59\xa5\x93\xaa\x9a\x6c\x36\x7c\x09\xe9\x35\xde\x95\x5c\xe3\x82\x04\xb4\x44\xad\xe1\xe7\xb7\x50\xef\xc3\xad\x76\xba\xd9\xa4\x57\xcc\xae\xaa\xea\x35\x24\xf4\xfd\x41\x65\xcc\x72\x25\xab\x2a\x79\x0d\xb4\xfe\x8b\x89\x12\xe7\x8f\x6b\x8d\xc6\x78\xf1\xec\x8d\xb7\xf5\xcd\x5b\x90\x5c\xc0\x66\x02\xa0\xd1\x96\x5a\x3a\xe9\xc4\xf9\x46\xb9\xd8\x62\xf8\x83\xcb\x0f\x28\x73\x67\x7e\x08\xc4\x56\x3d\x1a\x85\x97\xee\x58\x1f\x87\x8a\x3d\x1e\x44\x15\xd5\xcf\x44\xd5\x58\x1f\x85\x8a\x3c\x59\xd4\x72\x18\x53\xad\x7c\x06\xa2\xcf\xe1\x48\x30\xfd\x79\x6c\xf6\x78\x51\x16\x7b\x73\xe7\x94\x07\x11\x2d\x85\x62\xf6\xa7\x1f\xa7\x83\x75\x14\x53\x18\x5c\xf8\xd5\xfc\x31\x13\xa5\xa1\x72\xde\x8a\xc7\xe6\xf5\x00\xde\xa0\x7c\x29\xde\xe8\xa2\x83\x37\x8a\xc7\xe1\x2d\x85\xe5\x6b\x81\x1f\x97\x7b\x20\x6f\xf5\x2f\x45\xbd\xe3\x68\x14\xc2\xb9\xdc\x47\xa7\xd3\x3c\xaf\x3f\x82\xcd\xa3\x61\xc4\xdf\x38\xf2\xb2\xd2\x58\x55\x2c\x95\x2e\x98\x6d\x4d\xbd\x01\x90\xbf\xfb\x5d\x5f\xa1\xcf\x09\xc2\x46\xbf\x34\x56\x73\x99\x0f\x93\x79\x34\xe8\x08\xd6\x08\x9e\x0d\xcd\xe6\x4b\xc4\x85\xb9\xe1\xff\xa0\x97\x10\x36\xcd\x8a\x4b\x56\xd0\xd2\x09\x5d\x0c\x5c\xba\x94\x0a\x94\x7b\x90\xf4\x5b\xf5\xc2\x62\x61\xf6\xf6\xaa\xd7\x7e\x2d\x61\x1d\x1c\xb1\x43\x6b\xcb\x63\x7b\xf1\x10\xa0\x5a\xfb\x2c\x40\x5b\xcb\xa3\x00\xfd\x29\xf9\x5d\x89\x07\x30\xed\x6c\xf8\x6f\x2f\xc5\xff\x41\x53\x39\x18\x37\x54\xe6\x02\x6f\xb2\x15\x16\xec\xc6\xd5\x29\x90\xea\xec\x0c\x8c\x97\x83\xf1\x8a\x41\x8f\x13\xea\x3e\xe0\x0e\xf9\xf7\x6f\xe8\xf7\x17\xd8\x5b\xa6\xa4\x7e\xf5\x8a\x80\x6c\x36\x9a\xc9\x1c\x21\x8d\xfc\x03\x19\xa6\xcf\xb5\xa0\xb0\xdd\x33\x46\xad\x51\xdb\xa7\xa6\x53\x20\xdd\x69\x7e\xff\x25\x0c\x06\x7c\x52\xd9\x3e\xc6\xab\xda\x42\xa8\x95\x17\xfa\x0b\xfc\xbc\x5b\x2c\xb8\x23\x9e\x89\xc6\xc8\x36\x70\x72\xe9\xa5\x74\xd3\x57\x95\x23\x81\x58\xf0\xdd\x3a\x83\xd3\xb6\xd2\x09\x7e\x70\x3b\x3c\x11\x00\x47\x21\x01\xd8\x89\x99\xc0\xec\x25\x18\x7e\x6d\x7b\xeb\x24\x5d\x69\xd3\x8d\xe3\x52\xd9\x77\x42\xa8\x07\x7a\xfa\x25\x43\x26\x93\x5e\xd9\xcd\x06\xe7\x71\x77\xd4\xa9\xdb\x2f\x98\xb5\x27\x32\x25\x2b\x4c\x6b\x08\x4a\x07\xf5\x37\x66\xd9\xa7\xa7\x75\x7f\xf0\x5d\xa3\xa9\x89\xed\x41\x72\x12\xdf\x20\xd3\x99\x23\xa3\x77\x2e\x7d\xcf\xcc\xdc\x07\x4b\xf4\xf7\x09\x38\x57\xc5\x5a\x19\x6e\xb1\x36\x43\x36\xfd\xee\x69\xdf\x50\xb0\x92\xa6\xe9\x6c\x70\x9c\xf7\xb3\xb5\xad\x96\x0b\x73\x15\xdf\xe2\x55\xd5\xce\x70\xef\x89\xee\x52\xdc\xae\xb5\x0b\x73\xee\x89\x0a\xf7\x10\xbd\xd5\xda\x36\x86\xef\xbc\x41\x33\x4a\x5a\x46\x58\x3b\x06\x3a\xf7\xd0\xf0\x49\xda\x8c\x8f\x1f\x7d\xa6\xda\xa7\xbb\xa9\x6d\x1f\x0f\xbf\x6b\x96\xfd\xcd\xa8\xe3\x3c\xa7\xfe\x93\x84\xae\x02\x3e\xad\xb8\x81\x25\xa7\x6e\x7d\x60\x06\x72\x24\x6c\x64\x74\x01\xb7\x4f\x60\x57\xd4\xc2\x0f\x2c\xcf\x51\x83\x55\x4a\xa4\x6e\xff\xdc\x55\xab\xcc\x49\x19\xcf\x15\x3c\x5f\x59\x20\xee\xef\x11\x96\xa5\xf5\xa6\x56\x28\xe1\x49\x95\x94\xe9\x53\x5d\xca\x96\xa5\xe8\x02\x32\x55\x14\x4c\x2e\x26\x13\x4e\xf9\xd7\x16\xa6\x54\x19\x49\xce\xed\xaa\xbc\x4d\x49\x77\x96\x31\x53\x32\xf1\x85\x17\x67\xb9\x3a\xad\x4f\x9f\xc5\x59\x9c\x1c\xb3\x39\x14\x58\x32\xf1\xe3\x25\x4e\x1c\xef\x2c\xce\x1c\x82\x4d\x37\xf9\x12\x92\xef\xee\x62\x67\x47\xc6\x66\x9e\x9e\x58\xda\xdb\x4b\xc0\x84\xc8\x89\xc7\xf7\x25\xc1\x3f\x17\xcc\x98\x7a\xaa\x2d\x4b\x99\x81\xab\xda\x6b\xcc\x90\x2a\x4a\x07\x39\x9c\x90\x68\x67\xdf\x0c\x9a\x7e\x81\x93\x9d\x7f\x7c\x86\x9e\x81\x75\x7f\xf8\x5e\x93\xf8\x30\xed\xa8\x67\xad\x58\xea\xa9\xca\x31\x86\xe3\x4a\x85\x9a\xad\x69\xa4\xa0\x68\xae\xb2\x1e\xb8\x34\x3a\xe8\x0d\xe9\x69\xff\xb6\xf2\xc8\xdc\xc0\xaa\xbb\x99\xd4\x33\x3f\x0b\x1b\xd6\x9a\xaf\xa6\xcf\xe9\x90\x6f\x57\xf8\x36\x8b\x2c\x38\x2c\x0d\x27\xb0\x7b\x25\xb4\x82\xda\x13\xd2\x21\xaa\x1b\x27\x8e\xea\x03\xe1\xc1\x49\x3d\x80\x1a\xdb\x3e\xca\x23\xe6\x7f\x13\x1b\x51\x33\x30\x7e\xff\x0d\x00\x00\xff\xff\x65\xe5\xfe\x33\x02\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4098, mode: os.FileMode(420), modTime: time.Unix(1424115031, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xdd\x6f\xdb\x36\x10\x7f\xf7\x5f\x41\x18\x28\x60\x17\xae\xb2\xe7\x02\x79\xc8\x9a\x0e\xcd\x86\x75\x45\x53\x6c\x0f\x41\x30\x30\xd2\xc9\xe6\x22\x89\x2a\x49\xc5\x4b\x03\xff\xef\xbb\xe3\x87\x44\x59\xb2\xa3\x34\x29\x66\x04\x88\x44\x1e\xef\xf3\x77\x1f\x54\xcd\xd3\x5b\xbe\x06\xf6\xf0\x90\x7c\x72\x8f\xbb\xdd\x6c\x76\x72\xc2\xbe\x6c\x84\x66\xb9\x28\x80\x6d\xb9\x66\x6b\xa8\x40\x71\x03\x19\xbb\xb9\x67\x66\x03\x4c\x6f\xf9\x7a\x0d\x8a\x19\x29\x8b\x84\xe8\xdf\x67\xc2\x88\x6a\x8d\x9b\xe1\x5c\x29\xd6\x1b\xc3\x6a\x25\xef\x80\xe5\x8d\xb1\xac\x36\x50\xb1\x7b\xd9\x30\x05\x6f\x54\x53\xf5\x38\x05\x11\x2c\x95\x65\xc9\xab\x6c\x36\x13\x65\x2d\x95\x61\x8b\x19\x63\x73\x6d\x14\x72\xd7\x73\x7a\xae\xc0\x9c\x6c\x8c\xa9\xed\xcb\x5a\x98\x4d\x73\x93\xe0\xa1\x93\x94\xeb\x86\x17\xff\x88\xf2\x64\x2d\xdf\x78\xb6\x53\x68\x4e\x74\x0d\xe9\x34\x42\x48\x1b\x25\xcc\xfd\x24\xe2\x52\x64\x59\x01\x5b\xae\x60\x3e\x43\xfa\x87\x07\xc5\x2b\xf4\x74\x72\x61\xcd\xd2\xe8\x67\x5a\x44\x07\x89\xca\xe4\x6c\xfe\xea\xeb\x9c\x25\x7e\x11\xaa\x0c\x9f\x96\x36\x10\x18\x99\xb3\xba\xfe\xc8\x4b\x8c\xcc\xd9\xa7\x0b\x7a\xbf\xa8\x72\x99\x9c\x83\x4e\x95\xa8\x8d\x90\x15\xd2\x9a\xfb\x1a\x06\xa4\xe8\xb4\x26\x35\xec\x01\x79\x92\x89\xac\xfb\xbd\xa6\xf7\xe4\x5c\xa6\x4d\x09\x95\xc1\xfd\x54\x56\x06\xfe\x35\xed\x7e\xa7\x7c\xf2\xce\x6d\x21\xd1\x06\xc3\x52\x80\xd2\x9e\xa8\xe4\xf5\x95\x8b\xcb\x35\x85\x23\xf9\xe0\xb6\x63\x5b\xf1\xac\x46\x11\x68\xac\xb3\xe4\x5d\xc1\xb5\x76\x0a\xfa\x2d\x85\x58\x58\x0b\x6d\x88\x2d\x27\x35\xdc\x62\x2e\x15\xbe\xce\xf1\xc8\xef\x90\x09\xfe\x05\xcd\xdb\xed\xe6\x88\xa9\x12\x18\xd9\x6a\x85\x8c\xb2\xf3\xee\x0f\xa2\x55\xe4\xd0\x48\xb1\x4f\x4a\x66\x4d\x3a\xaa\x98\xdf\xea\x2b\x56\x87\xc5\x27\x2b\xd6\xb2\x0b\x8a\x85\x85\x71\xc5\x2e\x3d\xc4\xce\x21\x17\x95\xa0\xe8\x06\xa4\x88\x1c\xb1\xa3\x7f\xe6\x5a\xa4\x67\x8d\xd9\x8c\x68\x4e\xcb\x3d\xad\xf3\xa6\x4a\x89\x05\x26\x1a\x37\xcc\xf0\x5b\xd0\xac\xd1\xa0\x2a\x24\x67\x18\x2d\x56\xe3\xd9\xad\x54\x99\x7d\x51\x60\x1a\x55\x39\x6b\x45\x95\x8a\x9a\x17\x28\x18\xa5\x08\x4c\x63\x50\x68\x79\x89\x9b\x28\x03\x21\x23\x52\x6e\x19\x6f\x31\x09\xd8\x0d\xe9\x64\x77\x06\xd6\x5b\x95\x48\x8d\x85\x43\xca\x8a\xb9\xff\x4b\xb6\xa0\x92\x13\xe4\xec\x76\x2b\x06\x4a\x49\xb5\xec\xbc\x12\x2c\x46\x24\xff\x06\xf7\xcf\x31\x99\x63\x99\xba\xc5\xca\xf3\xbd\x46\xa2\x7d\x58\xf9\x24\x31\x60\xbc\x16\xec\x16\xee\x5d\xc1\x54\xbc\x74\x6a\xd8\x32\x27\x32\xa4\x12\xae\xaa\xe1\xf6\xa5\x6c\x54\x0a\x3e\x78\xc7\x7c\x32\xc1\x17\xe3\x58\xf9\xa3\xa6\x8a\xe9\x20\x32\xf0\x8c\xcf\x46\xa6\xc1\x68\xab\x92\x0c\xd4\x21\x8f\x2d\x96\xbd\xb2\x1f\x1a\xac\xb9\xd1\xe9\x8e\xba\xc5\x5e\xdb\x1f\xc6\xe5\xc4\x1d\x24\x19\x25\x71\x46\x14\xfa\x18\x8b\x43\xa7\x06\x4e\x40\x7b\x2f\x41\xdd\xc1\x7b\xf2\x14\xc3\x9e\x93\xf2\xa2\x40\xff\xdb\x16\x83\x71\x82\xb0\xae\x20\x05\x71\x07\xd9\x8a\x4c\x55\x40\x4b\x9c\x65\x90\xf3\xa6\x30\xc1\x13\x8e\xdf\x4d\x63\x6c\x73\x4a\xf1\x38\x7a\x8d\x9e\x15\x93\x5b\x0f\x72\x6a\x6c\x48\x17\x09\xa5\x9f\x0d\xa3\xad\x7e\x9f\x41\xd7\x18\x09\xf8\x0b\xb3\x17\xd4\x8a\xbd\xf6\xab\x5f\x1b\xd0\xa6\x8d\xa8\x6b\xae\x7f\xf2\x42\x64\xd4\xeb\xee\xfc\x83\x8b\x90\xc3\xb1\x0f\x69\x84\xa4\xb8\xa8\xcf\x48\xa2\x05\xcc\x67\x67\x98\xf2\x01\x7b\xbd\x47\xb8\x6c\xa5\x2c\x96\xde\x1b\xd4\x08\xee\xb8\x62\x4d\x15\x32\x06\x1d\x76\x75\xed\x50\x38\x5e\xb6\x71\x15\x63\x3f\x90\x96\x1c\x28\xbe\xa7\xa7\xac\x12\x85\x15\xc4\xfa\x62\x4e\x31\x73\x6a\x0c\xde\x22\x5e\x5d\xd9\x42\x3a\xc2\x68\x4e\xd8\x3f\x80\xfa\xae\x74\x4f\x53\xae\x2d\xc0\xcf\x55\x2e\x30\x3a\xa6\xdc\xa1\xf2\x3d\x41\x4f\x5b\x16\x9e\xab\x23\x31\x39\xa6\x5f\x5c\x32\xa6\xa9\x15\x92\xf3\xb9\x9a\x79\x3e\x03\xe5\x68\x38\xf9\xc6\xde\x9e\xb2\x02\xaa\x1e\x87\xa5\xd3\x0f\x37\x51\xf4\x4f\x5e\xb0\x2b\xdf\xa4\x89\x65\x33\x6b\x57\xf2\xd2\x24\x36\x2d\xf3\xc5\xbc\x14\x5a\xd3\x2c\x1a\xe7\xd3\x5b\xf6\x4a\xcf\x43\xf7\xd1\xc9\xaf\x52\x54\xfb\xfa\xe2\xdf\x92\x32\xb4\x57\x5a\x7e\x91\x34\x9a\x1a\x2a\x1a\x2e\x89\xe2\xe2\xc9\xd9\x1a\xfd\x56\x45\xa5\x55\x64\x4f\x48\xd0\x9e\x94\x45\xcb\xe4\xe2\xbc\x6d\x92\x4f\x2c\x2f\xd6\x49\xde\x21\xc3\xb8\x76\xe2\x9c\x91\x67\x5d\x97\x93\x4a\xb7\x86\x52\xd1\xe1\xbd\xad\xb6\x51\xd0\xd4\x28\x72\x81\x31\x0f\x93\x30\xd3\xe9\x06\xb0\x52\x3c\xc1\xea\x81\xd8\x85\xe7\x11\x0f\x94\x76\x3e\x0d\xc9\x74\x69\xf7\x97\xbd\x7d\x3f\x4c\xf5\x98\x59\xf3\x5d\xb3\x3a\x94\x87\x0a\x34\xd5\x7d\x84\x5b\x89\xa3\xc1\xe2\x31\x8e\x84\x41\x32\x9e\x06\xa6\x95\xb7\x95\x0e\xbb\x6c\x0a\x7a\x3b\x68\x6a\x6c\x13\xe9\xc6\x92\xfa\x95\x09\x75\x81\x7e\x78\x7b\x00\x9b\x2d\xce\x49\xf3\xb7\xb3\x30\x86\x8f\x0c\x7d\xce\x80\x2b\x92\x72\x8d\x99\x17\xe2\x90\xb4\x24\xc3\x18\x8c\xd4\x99\x65\x57\x1a\xfa\x92\xe2\x61\xeb\x90\xa8\x8e\xc6\x47\xce\x2a\x1e\xdc\x83\xb7\x93\xd5\xa4\x5a\xb7\xa7\x43\xfc\xb6\xf3\x35\xc2\x43\xd9\x29\x12\x8d\x0f\xb3\xbd\x42\x10\xce\xba\xee\x1a\x9a\x48\x1f\xd2\xe1\x6a\x31\x86\xe6\x92\x46\x79\x3b\xbe\x3f\x05\xc8\xb1\x9c\x45\x19\x6e\x03\xba\xed\xa8\xa3\x80\x6d\x5b\x65\x87\xd5\x5e\xb7\x7d\x1c\xa0\x81\x43\xc0\xe6\xdf\x2b\x56\x9a\x0e\x94\x91\x22\x3d\x5c\x96\x66\x88\xca\x9e\xe4\xde\xce\x59\x51\x60\xb9\x10\x38\x41\x7c\x43\x03\x87\x50\x8d\x2f\x3f\x1d\x5e\x3d\x62\xf6\x09\x08\x3d\x53\x47\x88\x11\x34\xbc\x24\x36\x42\x0f\xef\x63\x23\xdc\xee\x5e\x0e\x1b\xb1\x9c\xc9\xd8\x68\x27\x95\x80\x8d\xfe\xac\xf3\x38\x34\x02\x83\x17\x80\x46\x4f\xf2\xff\x0b\x8d\xe8\xc2\xfc\x23\xa1\xe1\x07\x94\xa8\xe1\xc7\x5f\x35\x5a\x64\xb4\x37\xbd\xef\x6c\xfa\x9d\x98\xd1\x8e\xbf\x88\x85\xae\xd8\x8d\x94\x85\x6b\xeb\x58\x29\x68\x42\x1a\x3a\x2b\x7c\x95\x59\xc6\x73\xd2\x90\x8c\xda\x8e\x67\xfb\x8e\x63\xa5\x5e\x84\x41\x6c\x74\x06\x6c\x3f\xf5\xf4\xc6\xbe\xce\x7b\x2b\x96\x73\xf4\xa9\x67\xb1\x59\x31\x79\x4b\x38\x3b\xcc\xe8\x2a\x32\xf6\xba\x0b\x84\x3d\x49\x01\x98\xee\xc0\xa1\x21\xc1\x3f\x43\xe9\xe1\xb3\x56\xcf\x8a\x23\x64\x2c\xfa\xee\xf5\x11\xb6\x9f\x65\x63\xf8\x4d\x01\xfe\x13\xd8\x88\xf3\xa9\x4e\x8c\xb4\xbb\x15\x89\xeb\x26\x5d\xaa\xf2\x7b\x93\xf7\x31\x97\x0f\xf2\x3b\xc6\xc4\xf2\xc8\x38\xbf\x77\x51\x3f\x2a\xe6\x2a\x9a\x38\x7c\x16\x76\xf7\x77\xb4\xbd\x9f\x83\x23\xa6\x7b\xa7\x3d\xde\xec\x7b\x8a\xb7\x99\x38\x5d\xb3\x1f\xa8\xcc\xc8\xb7\x95\x50\x12\xfe\x0b\x00\x00\xff\xff\x12\x49\x0c\x05\x1a\x17\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 5914, mode: os.FileMode(420), modTime: time.Unix(1424460655, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x0d\xb4\x90\x02\xad\x7c\x4f\xb1\x87\x36\x2d\xea\x3d\x74\x1b\x38\x41\x7b\x2c\x68\x6a\x2c\x71\x2b\x91\x0a\x3f\xec\xb8\x86\xff\x7b\x87\x14\x65\x5b\x89\xe2\xee\x76\xb1\x8b\xa0\x27\x53\x24\xe7\xcd\xcc\x9b\x37\x43\x77\x8c\xff\xc5\x2a\x84\xfd\xbe\xb8\xed\x97\x87\x43\x92\xcc\xe7\x70\x5f\x0b\x03\x6b\xd1\x20\x6c\x99\x81\x0a\x25\x6a\x66\xb1\x84\xd5\x0e\x6c\x8d\x60\xb6\xac\xaa\x50\x83\x55\xaa\x29\xfc\xfd\x9f\x4b\x61\x85\xac\xe8\x70\xb0\x6b\x45\x55\x5b\xe8\xb4\xda\x20\xac\x9d\x0d\x50\x35\x4a\xd8\x29\x07\x1a\xdf\x68\x27\x47\x48\x83\x0b\xe0\xaa\x6d\x99\x2c\x93\x44\xb4\x9d\xd2\x16\xd2\x04\x60\x26\xd1\xce\x6b\x6b\xbb\x59\xe2\xbf\x2a\x61\x6b\xb7\x2a\xe8\xe6\x9c\x33\xe3\x58\xf3\x41\xb4\xf3\x4a\xbd\x89\x58\xb3\x8f\xb8\x33\x47\xad\x95\x36\x1f\x75\xd5\x74\xc8\x83\xe3\xfd\x5e\x33\x49\x6c\x15\xef\x42\x68\x86\xb8\xf2\x9b\x94\xa4\x90\x76\x0d\xb3\x6f\x1f\x66\x50\xc4\x4d\x94\x25\xad\xb2\x40\x26\xb1\x7b\xd3\x30\x63\xde\xb3\x96\xf8\x5d\x50\x76\x0d\x65\x4c\x36\xa8\xd7\x8c\x13\x3d\x8a\x98\xac\x99\x05\xce\x24\xd4\xe1\x18\x36\xac\x11\xa5\xb7\x5c\x38\xa2\xe3\xcc\x1c\x3a\xa6\x59\x6b\x12\xbb\xeb\xf0\x5f\x91\xf7\x21\x16\xb1\x86\xe2\x07\x67\x6b\xa5\xc5\xdf\x58\x86\x00\x29\xaa\xfe\xb6\xaf\x50\xe9\x38\x1a\x60\x54\x16\xe3\x1a\x0b\x14\x0d\xc5\x11\x08\x2a\xe0\x17\xb4\x26\x14\x4a\xe3\x83\x43\x63\xa3\x7b\x20\x55\x6c\xb1\x69\xfc\x6f\x28\x23\x72\xa7\x85\xdd\x05\x2e\xb8\xe8\x58\x73\xf4\x7c\xe7\x38\xc1\x9b\x5f\x55\x89\xcd\x10\x63\x3a\x0e\xfc\x36\x60\xe6\x70\xe5\x75\x38\x00\x1c\x0e\x19\xa4\x3d\xc4\x12\xad\xd3\xd2\xdc\xa8\xb6\x6b\xf0\xf1\xb7\xd5\x07\xe4\xf6\x70\xb8\x8a\x2c\x93\xd1\xd8\x47\xde\x07\x9f\xf5\x85\x68\x0c\x7e\xaa\xdb\x60\x7e\x56\xc6\x13\xce\xe7\xf2\xf6\xe9\xac\x7c\x1d\x12\x5e\xc8\x39\xac\xfa\x89\xf0\x1e\xb7\x63\x43\xe0\x1a\xa9\x61\x3d\x01\x12\xb7\xe0\xdb\xb3\x18\x14\xd8\x2b\x1a\x27\xf5\xab\x3a\xdf\xe8\x42\xc9\x64\xed\x24\x7f\x8e\x9b\x72\xfb\x08\x57\xad\x28\x09\x69\xcb\x34\x16\x37\x8a\xf4\xfc\x68\xf3\xd8\x1a\x7a\x5a\xf5\x59\x28\xe3\xb9\x23\x2f\x7e\x1d\x48\x83\xef\xc6\x47\xfb\x08\x79\x0d\xe4\x2b\x8f\x15\xd5\xd7\x83\x83\x90\x72\x4f\xfa\x4f\x8a\xdf\x59\x92\x46\x15\x18\x1e\x7d\xf5\xe4\x4c\xb4\x21\x18\xab\x1d\xb7\xc1\x7f\x74\x34\x95\x0f\x9d\xf6\xdc\x03\x4c\x55\x84\x8e\x17\x97\xf2\xf5\x31\x06\x02\x7d\x3d\x97\xc8\x51\x6c\x50\xc7\x00\x9e\x30\x91\xc1\x1d\xea\x0d\x2e\xee\xef\x6f\x53\x1d\x2b\xb5\x44\xd3\x29\x69\xf0\x0f\xea\x5a\xd4\x39\x68\xb8\x8a\xfb\x41\xae\x59\xcf\x9e\x72\x16\x73\xf8\x13\xae\xdf\xc2\x33\x2f\x43\x1e\xc5\xd2\xdf\x7a\x27\xd7\x2a\x25\xb5\x4d\x0e\x1c\x17\xa6\x42\x50\xe4\x65\xa8\xa3\x51\xea\x43\xf2\xb8\x5e\xbf\x04\xe7\x2d\xbf\x79\x0b\x52\x34\x21\x30\xb8\x14\x4e\xc8\xac\xa4\x4c\x09\x22\xa2\x50\x7b\xf7\xdd\x9a\x0f\x39\x11\x60\x16\x80\x7a\x85\xd0\xd2\x4b\xfe\x38\xbd\xfa\x30\xbd\xe3\x07\x38\xcd\x06\x98\x1d\x47\xeb\xfe\x30\x1b\xf2\x1a\xda\xab\xff\x2a\xd2\xa7\xe3\x64\x90\xca\xa8\xb9\x62\x4e\x17\xd9\xf8\x51\xc8\xf2\x77\xff\x0e\xc4\xa2\x1c\x49\xc9\x83\xa0\x9f\x58\xc5\x46\xfe\x7e\xc4\x95\x1f\xf4\x2b\x82\x39\x8d\x9f\x2f\x43\xdd\x4b\xef\xcc\xd4\xb0\xd3\x1e\xeb\xc5\xe4\xa3\xbc\x8b\xd3\xb0\x9a\xcc\x33\x3f\xd5\x2a\xf3\x49\x32\x6e\xe9\xe5\x6e\x76\xc3\xfb\x79\x36\x7a\xbf\xa2\x82\x92\xcf\x87\x25\x76\xce\x67\xf6\x25\x9d\xfc\x07\xaa\x9e\xab\xe3\x32\x71\xaf\x96\x26\x8a\x3f\x9b\x7c\xa1\xbf\xa4\xe8\x5e\x91\xd2\x5e\xa3\xd0\xfe\x5f\xea\x3a\xfe\xb1\x1a\xfe\x05\xfd\x13\x00\x00\xff\xff\x25\x8c\x9e\xe9\x2d\x0d\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3373, mode: os.FileMode(420), modTime: time.Unix(1424420904, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\x4b\x6f\x1b\xb7\x13\xbf\xeb\x53\xf0\x2f\xfc\x1b\x48\x8e\xb2\xce\xa1\xe8\xa1\xa9\x0b\x34\x89\x8b\x08\x48\xd2\xd4\x4e\x72\x09\x02\x84\xde\xa5\x24\xb6\xfb\x32\xc9\xf5\x23\x82\xbf\x7b\x67\x86\xdc\x5d\xee\x33\x92\xec\x1c\x72\x92\x96\x33\x1c\xfe\xe6\xcd\xe1\x76\x1b\x89\x95\x4c\x05\x9b\xe6\x4a\x26\xd2\xc8\x2b\x71\xc5\x63\x19\x71\x93\xa9\xe9\xdd\xdd\x64\xbb\x95\x2b\x16\xbc\x91\xe9\x6b\x91\xae\xcd\x06\x56\xe0\x5b\x28\xc5\x7e\x3d\x61\x8e\x51\xd4\xe4\xd9\x76\x1b\xbc\xe3\xc8\xb6\x60\x53\xf8\xff\x3a\x0b\xb9\x91\x59\x7a\x77\x37\x5d\x30\xf8\xfe\xc8\xe3\x42\x9c\xde\xe4\x4a\x68\x4d\xcb\xb4\xea\x49\x9f\x3f\x23\xe1\xff\x3b\x61\xa9\x8c\xd9\x76\xc2\x98\x12\xa6\x50\x29\xae\x4e\x10\x8d\x48\xa3\x1a\x15\xbf\x19\x45\x55\x92\x0f\x44\x55\x4b\xdf\x0b\x15\x9c\x64\x84\x4a\xfb\x31\x39\xe2\x01\x88\xbe\xd8\x2d\x56\xf4\x97\xfd\xec\x24\x53\x99\x14\xc9\xa0\xef\x90\x38\x8a\x68\x15\x67\xdc\xfc\xf2\xf3\xac\x0f\xd9\xbc\x74\xa1\x3d\x82\xbe\x4e\x6f\xc2\xb8\xd0\x10\x4a\xd5\xf2\xbe\x7e\x1d\xc1\x6b\x89\xf7\xc5\x5b\x1e\xd1\xc2\x5b\x2e\xef\x87\xb7\x88\x8d\xcc\x63\xf1\xd7\x6a\x00\x72\x45\xbf\x2f\x6a\xef\xa0\xbd\x10\x9e\xa6\x43\xe6\x44\xca\x61\xf9\x61\x65\xee\x0c\x83\x7e\xeb\x6a\x13\x16\xda\x64\xc9\x2a\x53\x09\x37\x8d\x82\xd3\x83\xf1\x4f\xe2\xfa\x86\xf5\x70\xc1\x32\xd2\xa7\x36\x4a\xa6\xeb\x7e\x5b\xee\x86\xb9\xc6\xaa\x63\x19\xf6\x55\xc5\xb7\x42\x44\xfa\x5c\x7e\x15\xb4\x02\xd0\x14\x4f\xde\xf2\x04\x3e\x71\x11\x55\x90\x29\x3a\x34\x16\xe9\x00\x90\x6e\xa2\x2e\x8d\x48\xf4\x60\xa6\x12\xf5\x5b\xee\x6a\xe1\x28\xf3\xd3\x49\xde\x37\x13\xc7\x00\x39\xea\x41\x80\x2a\xc9\x7b\x01\xfa\x90\xca\xcb\x42\x8c\x60\xf2\x18\xf6\x0e\xeb\x1f\x3c\xa5\x72\x95\xe5\x42\x99\xdb\x9e\x48\x5d\xea\x77\x65\x77\xc7\x1d\x60\x9d\x3c\x06\xa8\xbd\x4d\x9f\x05\xc8\xe2\xab\xba\xd4\x2f\x28\x5b\x6d\x7a\x41\x07\x6a\xca\xe8\x4f\xe5\x5e\x31\x59\x6a\x38\x60\x6d\x09\x68\xe5\x57\x73\x67\x4b\xc9\x0b\x99\x46\x15\xe8\x69\x1f\x07\x49\x43\x36\xe1\x19\x00\x42\x50\xa4\x06\xd9\x82\x25\x50\x6e\x3e\x72\xc0\x10\xa2\xdb\x0a\x23\xe3\xe0\x3c\x8f\xa5\x79\x7e\x6b\x15\xb4\xbe\x43\x7e\x9f\xf7\x53\xdf\xea\x67\xeb\xdd\x17\x59\x1c\x8b\x10\xfd\x5b\x55\x20\x4a\xed\x58\x8b\xbe\x23\x15\xbf\xae\xf5\xf3\x88\xfa\x2b\x52\x35\xa4\xc8\xe4\x8a\x2b\xd6\xa0\xd1\xe7\xfb\xdb\x5c\xb4\x37\x7d\x74\x61\x77\x1a\x8b\x04\xc0\xa1\x84\x55\x91\x86\xb3\x06\x13\x16\x22\x8a\xb0\x17\x1b\x19\x47\xdd\xe8\xab\x49\xf6\x88\x39\x3b\x82\x60\xcb\x94\x0e\x9c\x78\xe0\xa2\x48\x6c\xc6\x4e\x3b\xde\x98\x15\x02\x10\xab\x98\x85\x10\x86\x98\x9d\x40\x74\x34\xf5\x41\x9c\x4f\x9f\xb5\xd6\x7e\x63\x2d\x7b\xb4\x18\x1e\x3f\x76\x20\xd0\xa5\x16\x6f\x2b\xb2\x6b\x02\xc4\xda\x15\xa0\xc3\x58\xbb\x42\x75\x17\x65\x9e\x56\xaa\x7a\x1c\x4d\x6b\x91\xaf\x3d\x27\xcf\xe1\x4c\x97\xe7\x5e\x52\xa2\x8a\x3a\xf8\x23\x8a\x4e\xc9\x52\x33\x67\xb0\x65\x4a\xf6\x40\x3b\xce\xaa\xa3\x46\xbb\x96\x6f\x78\x5b\x1d\x46\xa0\xcc\xdd\xc9\x64\x5c\x00\x00\x9f\x60\xde\x0a\x9f\xd5\x6f\x30\x3a\x9a\x7a\x8e\x45\x44\xb7\x08\xf5\xe8\xdb\x0b\xc6\xf2\x2d\x21\x04\xe7\xe4\xab\x46\x10\x9f\x30\x9e\xe7\x10\xfa\x4d\x20\x6a\xc1\xc8\x47\x76\x83\x4d\x1b\x12\x7d\xb0\x56\x23\x16\xec\x51\x6c\x50\xb5\x96\x72\xce\xd6\x87\x69\x38\x8e\xaa\x2a\x63\xa8\x3d\xf3\xe3\xdb\x2b\x9a\xad\x04\xf4\x2b\x9d\x9f\x7a\xf7\x8e\x06\x0f\xf7\x7d\xcd\x75\x0f\x6b\x75\xb1\x94\x55\xb3\xaa\xfa\x39\x0f\xff\xe5\x6b\x61\x2f\x19\xf4\x17\xa8\x93\xe3\x63\xf6\x7e\x23\x35\x5b\xc9\x58\xb0\x6b\xae\xd9\x5a\x80\xf9\x40\xef\x88\x5d\xdc\x32\xb3\x11\x4c\x5f\xf3\xf5\x5a\x28\x66\xb2\x2c\x0e\x90\xff\x34\x82\x12\x92\xae\x81\x58\xee\x4b\xe4\x7a\x63\x18\xd4\xb8\x2b\x01\x05\xd5\x90\xa8\x8d\x48\xd9\x6d\x56\x80\x42\x4f\x54\x91\x36\x24\x95\x47\xb0\x30\x4b\x12\x9e\x46\x93\x89\x4c\xf2\x4c\x19\x36\x03\xa5\xa7\xa9\x30\xc7\x1b\x63\xf2\x29\x7e\xac\xa5\xd9\x14\x17\x01\x30\x1e\x87\x5c\x17\x3c\xfe\x47\x26\xc7\xeb\xec\x89\x13\xb5\x0b\xcf\xb1\x2d\x36\x3b\xb1\xe2\xb9\x88\x7f\x37\xee\xf2\x16\x33\x9d\x90\xb3\x14\x4f\xc1\xbc\xc1\x92\x74\xd1\x2e\x02\xc1\x2a\xd0\x4f\x56\x6c\xfa\xd3\x25\x35\x6b\x9b\xb5\xe4\x99\x39\x59\x1f\x9d\x17\x73\xad\xed\x9d\x8f\xae\x7f\x1a\x0c\x43\x71\xac\x19\x8f\x63\x32\xdd\x45\x56\xa4\x11\xcb\x2d\x15\x1b\x04\x2e\xc2\xd6\x57\x05\x18\xd0\xdb\xcf\xb0\xcd\x50\xc9\x44\xd9\xe6\x36\x97\x21\x88\x20\x47\x42\xaa\x40\x4b\x66\xd9\x05\x65\x48\xc4\x56\x2a\x4b\x18\x67\xa8\x72\x70\x26\xe0\x22\xa8\xcd\x04\x36\x88\x7e\x44\x30\x23\x14\xa1\x71\x2d\xc5\x69\x6a\x49\x65\x2b\x79\x29\x74\xa8\x64\x6e\xcb\xb5\x55\xac\xb1\x54\xaa\x4d\x71\xfd\xce\xf5\x43\x87\xba\xee\xd7\xb5\x79\x6c\x70\x3e\x87\x94\x75\xe8\xc0\x08\x66\xc3\x30\x87\xc1\x2e\x60\x8d\xd2\xfc\xf0\x05\x51\x46\x2c\x0b\x26\x0d\x03\xe8\x45\x02\xab\x66\xc3\x0d\x86\x18\x0c\x81\x37\x18\xac\xe9\x5a\x33\x89\x5f\xd4\xfb\x39\x73\x19\xce\x2f\x62\x31\x83\x26\x5e\xdd\x49\xcf\x84\x86\xd9\x11\xaf\x01\x42\xad\x78\x28\x10\x06\x9a\x5c\xd3\x66\x5b\x7d\x35\x1e\x74\x2d\xc1\x3b\x05\xd8\x15\x8c\xc3\x29\x05\x12\x61\x36\x59\xc4\xd0\xe6\x7a\x82\x57\x0b\x86\xc9\x7a\x26\x42\x01\x3d\x57\x39\x65\x8f\xfa\x0c\x3c\xf7\x35\x9d\x29\x76\xe4\xfb\x65\xc1\x54\x56\x40\xbe\x1c\x25\x32\x8a\x62\x71\x0d\x7e\x84\xa1\xc0\x84\x1b\x11\x9d\x21\x61\x81\x01\x83\x4a\xab\x32\xc7\xb0\x61\xd3\x42\x8f\x62\xf6\x96\xac\xb1\xe2\xa5\xe2\x7a\xd6\x22\xcf\xab\x4b\xc3\x2b\xae\xff\x2e\x84\xba\x2d\xdd\x7c\x49\x5b\x54\xf0\xe1\xec\x75\x40\x04\x57\xa4\xac\xbb\xfa\x02\xa3\x12\xd5\x73\xf3\x58\x7a\xc2\xa1\x5e\x41\xd9\x7b\x23\xd4\x5a\x74\xed\x15\xa0\xc7\x3b\x21\x33\xab\x52\x15\xd8\x79\x74\x0e\xde\x8d\x05\x75\xe6\xd9\xa5\x76\x93\x14\x3d\x47\xcd\xeb\x46\xc9\x1c\x14\x20\x7c\x87\x63\xc9\x45\x4e\xf5\x71\x00\xaf\x60\xa7\x50\xdf\x03\x42\x60\x45\xf7\x1d\x5f\xe5\x9e\x07\xa4\x31\x63\x3c\xbc\x53\xea\xab\x7e\x8f\x63\x86\xa7\x81\xef\xea\xb1\x36\xa6\x01\xaf\xed\x83\xee\x41\xdd\xd9\xc1\xd7\x75\xe9\xb7\xb1\xb9\xdb\x51\x9d\x97\x16\xe8\xf3\x2c\x2a\x5d\xdb\xb8\x05\x97\xc5\xa3\x2c\x1a\x70\x28\xb2\x2e\xd8\xa3\xae\x0e\x1d\xfc\x3b\x5d\x7e\xf1\xb2\xff\x56\x5c\xc3\xe1\x5a\xd0\xea\x6c\xda\x7c\xeb\x98\xf6\xdd\xf7\xa7\x34\x87\x90\x52\x77\x8c\x0c\x5e\x8b\x1f\xb2\x71\x07\x5f\x39\x95\x41\x8d\x9f\xbb\x3b\x77\x23\x1b\x4a\x23\x79\xb7\x31\xf8\x86\xc6\xfd\xff\xb0\xac\xd1\x68\xa3\xba\x62\x33\x9a\x2a\xdb\x95\x8e\x6c\x9c\x66\xa6\x6d\x67\x5a\x87\xe6\xe1\x97\xc0\xde\x57\x82\xb1\x76\x51\x43\xa9\xdb\x45\x7f\x30\xc1\xb8\xec\x9e\xf3\x0e\x28\xfc\x65\xa8\x60\x73\x9d\x39\x5d\xaa\xd4\x9b\x33\xea\x46\x52\x09\x30\x58\xcf\x4b\x4e\x49\x3c\xaf\x1e\x13\x07\x07\x39\x00\xf9\x70\x23\x53\xed\x4a\x1a\x04\xc6\x26\x59\x6f\x86\x45\x08\xf7\x98\x54\x47\x67\xd4\x6a\x3a\xc5\x43\x76\x1b\xfb\xba\x8f\x0c\x27\xf6\x9e\xd1\x1c\xf2\x06\x38\xe1\x9c\x1e\x53\x40\xfb\xae\x1f\x24\xb4\xef\xb3\x6e\xd6\x94\x5e\xec\x06\xd4\xce\x8e\x2a\x27\x6b\xd2\xcc\x9e\x0c\xb7\xaa\x6d\x67\xa8\x69\x26\x60\x23\xeb\x86\x7a\xd3\xc3\xa5\xc6\xa7\xcf\x07\x27\x07\xa3\xc7\x26\x24\xe3\x13\x35\xc5\x4f\x65\xea\x46\x62\x10\xdb\xc9\x09\x7b\x3a\x16\x4f\xe5\x8e\x91\x60\xda\x2d\x74\x5a\x45\xfe\xa5\x58\x71\x80\x4b\x51\xd2\x42\xf3\xe8\x11\x73\x8f\xeb\x4d\xa6\x39\xfb\xbd\xc2\x3a\x10\x60\x9d\x3d\x5e\x58\x0e\x68\x5c\x22\xf4\x15\xa8\xdd\x3e\x3e\x9d\x8f\xc5\x7a\x73\xf6\xf5\x83\xfd\x1c\x65\xfc\x78\x11\x5f\x3f\xfa\xfa\x65\xb7\x6a\x21\x73\x36\xc3\xee\xd1\x4c\xe6\x5e\x7d\xe7\xfb\x27\xca\x88\x11\x0e\x7d\xd4\x6c\x34\x53\xfb\xa0\xd9\x7a\x9f\xae\x7e\xff\x0b\x00\x00\xff\xff\xd9\x10\x0f\x5a\x4f\x1f\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8015, mode: os.FileMode(420), modTime: time.Unix(1424466478, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

