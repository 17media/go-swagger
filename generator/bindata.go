// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/structfield.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1441640403, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x55\x4f\x6f\xbb\x38\x10\x3d\x97\x4f\x31\x1b\x35\x15\x64\x29\xdc\x23\xf5\xb0\x6a\xab\x55\x2f\x6d\xd5\x56\x7b\x5d\x39\x30\x80\x55\x30\xac\x6d\x1a\x65\xa3\x7c\xf7\x1d\xff\x81\x84\x34\x51\xb3\xc7\x5f\x2e\xb1\x3d\x7f\xfc\xe6\xcd\xf8\xd1\xb1\xec\x93\x95\x08\xdb\x2d\x24\xcf\xac\x41\xd8\xed\x82\x20\x4d\xe1\xa3\xe2\x0a\x0a\x5e\x23\xac\x99\x82\x12\x05\x4a\xa6\x31\x87\xd5\x06\x74\x85\xa0\xd6\xac\x2c\x51\x82\x6e\xdb\x3a\x31\xfe\x8f\x39\xd7\x5c\x94\x64\x1c\xe2\x1a\x5e\x56\x1a\x3a\xd9\x7e\x21\x14\xbd\xb6\xa9\x2a\x14\xb0\x69\x7b\x90\x78\x2b\x7b\x31\xc9\x34\x5c\x01\x59\xdb\x34\x4c\xe4\x41\xc0\x9b\xae\x95\x1a\xc2\x00\x60\x26\x50\xa7\x95\xd6\xdd\xcc\x6c\x4a\xae\xab\x7e\x95\x90\x63\x5a\xb6\xb7\x3e\xc1\xe1\x12\xa5\x6c\xa5\xba\xcc\xd7\xfc\x5f\xe6\x99\xd5\x1c\x85\xbe\xcc\xd7\x60\xfd\xe4\xff\xcf\x39\xfd\x62\x35\xcf\x89\x82\x59\x40\x61\xd4\x10\xc9\x04\x75\x26\x79\xc0\x82\xf5\xb5\x7e\xb2\x74\x28\x6a\x10\x99\x3a\xc9\x85\x2e\x60\x36\xff\x67\x06\x09\xb5\xcc\xfa\xa3\xc8\x61\x58\xbb\xd8\xeb\x4f\xdc\xc4\x70\x4d\x89\x7b\x84\xe5\x1d\x24\x93\x24\xc6\x4a\x2b\x38\xca\xe7\xdd\x8f\xb2\x46\x76\x2c\x9e\x71\x0d\x99\x44\x02\xa9\x80\x81\xa0\x1d\x79\x54\x3d\x35\x8c\xff\x8b\xe3\x04\xc1\x1f\xaf\x4f\xe0\xe8\x4a\x82\xa2\x17\x99\x89\x0b\x35\x61\x52\xb6\xa5\xde\xf4\x31\x1c\xc4\x50\xb4\xb2\x61\x84\x4b\x69\x59\x34\x3a\x79\xc3\x92\xd3\x72\x13\xc1\xe2\xde\xfa\xc2\x96\xc0\x48\xd4\xbd\x14\x70\xe3\x8e\xb6\x63\xbe\x25\xe8\x6f\x99\x96\xc3\x62\x17\x98\x81\x5e\x04\x84\x93\x17\x90\xbc\xf7\x34\x5d\x72\xe3\x08\x98\xee\x8c\xf9\x01\x55\x26\x79\xa7\x79\x2b\xec\x4b\x30\x4e\xd3\xb3\x91\x11\xb3\xa8\x15\x1e\x87\xb9\xc4\xdf\x63\x8c\xab\x6b\x1d\x53\x19\x35\xfa\x90\xae\x73\x1c\xee\xd9\x5f\xa4\x81\xde\x74\x08\x9e\x0d\xe2\xa6\xcf\x1c\x29\xe7\x59\x25\xe3\x19\x5a\x03\x57\x99\x9f\xaf\x97\xce\x3c\x3c\x42\x6a\xc6\x22\x5d\xfc\xf2\x44\xd9\x81\x0b\xd9\x30\x3a\x11\x9c\xcc\x15\x76\x4c\xb2\x46\x9d\x36\xbe\x5a\x9b\x8d\x74\x5c\x64\x19\x2a\xf5\x86\xc4\xab\x18\xe0\x9d\x30\x24\xef\x59\x85\x0d\x33\xd9\x1d\x69\xa7\xac\xc9\x9f\xed\x87\x69\xe5\x6e\x17\xef\x9f\x97\x55\xac\x9f\x92\x46\x13\x4a\xed\xc2\x8e\x80\x91\xeb\x97\x87\x97\x25\xfc\xe5\x05\xc4\x0a\xab\xaf\x6f\x85\x34\x04\x24\xb3\xe4\x4f\xfa\xec\x95\xe5\x74\x51\x12\x15\xe9\xcc\xbe\x07\x7f\x8f\xd7\xc4\x40\x00\x8d\x80\xb0\x64\x9c\x37\x4a\xb0\x6a\xb8\x0e\x8f\xd5\xc8\x53\x18\xc3\x8d\x43\x40\x8b\x83\x8f\xcb\x1b\xb2\x1c\xe5\x76\x7c\xa5\x2c\x19\xde\x69\x44\xd0\x08\x97\xb9\xe8\xb7\x3b\x10\xbc\xb6\xb5\x8d\xaf\xfe\x2c\x6a\xf2\x9c\x12\x49\x51\xbb\xe0\xe7\xb8\x9f\xd8\x76\x6c\x24\x17\x75\x32\x3a\x40\x30\x2e\x08\x18\x3d\xb4\xfd\x68\x7a\xfd\xa4\x71\x7d\x34\xdd\x3e\xd2\x51\x23\x99\x76\x0a\x46\xc1\x1c\x1c\xc3\xb6\xb3\xe4\xd1\xcb\xa5\x0e\xc6\x54\x98\xaf\x81\x48\x47\x59\xb0\x0c\xb7\xc4\x76\xd6\xe6\xf6\x24\x82\xf1\x82\x6d\x70\xe5\x49\x18\x8e\xe8\xe4\x6a\x7c\xee\x26\xe9\x12\x5c\xf2\x98\x0c\x43\x75\x4b\x00\xc7\xbb\xdb\x1a\xd3\x3d\x25\xf7\xc7\xe6\x67\xee\xa2\x63\x27\xad\xe9\xfe\xc2\xb5\x64\x1d\xd5\x23\x5c\x21\xd0\x90\x5b\x4d\xdb\x1c\x32\xd6\x11\x0e\xaa\xd5\x7e\xf1\x35\xd3\xbd\xb2\x49\x9c\xa8\x8d\xf1\xa3\xac\x4d\x41\xfa\xca\x83\x11\xa1\x87\x71\x50\x7f\x60\x21\xee\x11\x92\xc9\x80\x1b\xa4\x60\xb8\x21\x02\xc7\x68\xe4\x53\x1e\x50\x64\xf4\xf1\xdd\x0d\x72\x38\x9b\x2b\x08\x3d\xcc\x79\x1e\x2d\x61\xfe\xfb\x17\xcc\x62\x1a\xd6\x09\x2e\x73\x60\xae\x35\xff\x03\xb4\x88\xae\xfd\x2f\x00\x00\xff\xff\xe3\x21\xa2\xbd\x54\x09\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2388, mode: os.FileMode(420), modTime: time.Unix(1441640513, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\x4d\x6f\xd4\x30\x10\xbd\xfb\x57\x8c\x56\x45\xea\xa2\xd6\xb9\x23\xf5\x04\x08\x71\x29\x08\xf5\x0f\xb8\xc9\xc4\xb1\x36\xb1\xc3\x78\xdc\x55\x58\xed\x7f\x67\x9c\x0f\xb4\x59\x05\xb1\x9c\x32\x8e\xdf\x7b\x7e\xf3\xc6\xee\x4d\x79\x30\x16\xe1\x74\x02\xfd\x7d\xae\xcf\x67\xa5\x8a\x02\x5e\x1a\x17\xa1\x76\x2d\xc2\xd1\x44\xb0\xe8\x91\x0c\x63\x05\xaf\x03\x70\x83\x10\x8f\xc6\x5a\x24\xe0\x10\x5a\x9d\xf1\x9f\x2b\xc7\xce\x5b\xd9\x5c\x78\x9d\xb3\x0d\x43\x4f\xe1\x0d\xa1\x4e\x3c\x4a\x35\xe8\x61\x08\x09\x08\x1f\x29\xf9\x95\xd2\x72\x04\x94\xa1\xeb\x8c\xaf\x94\x52\xae\xeb\x03\x31\xdc\x2b\x80\x9d\x47\x2e\x1a\xe6\x7e\x97\x17\xd6\x71\x93\x5e\xb5\x20\x0b\x1b\x1e\x67\x85\xcb\x32\x23\x0f\x8e\x33\x38\x97\x65\xeb\xd0\xf3\xed\xbc\x62\x22\xdc\x76\x56\xfe\xde\x86\x44\xa2\x40\xf1\xbf\x3a\x28\xde\x4c\xeb\x2a\x89\xe5\x36\xd6\xe2\x5b\xc0\x32\x53\x32\x5e\x06\xaa\x3f\x61\x6d\x52\xcb\x5f\xc7\x34\xa3\x0c\x58\xb6\x7a\x72\x9e\x6b\xd8\xbd\xfb\xb9\x03\x2d\x23\x1f\xf1\xe8\x2b\x58\xea\x89\x7b\x77\xc0\xe1\x01\xee\xc4\x44\x42\xf8\xf0\x04\x7a\x25\x92\x77\xa5\x82\x2b\xbd\x19\x7e\xa5\xba\x1f\xaf\xd5\x33\x1e\xa1\x24\x94\x86\x22\x18\xf0\xb2\x12\x44\x93\x64\xe0\xee\x97\x58\x7d\x36\x5d\x26\xc2\xd4\x87\xaa\x93\x2f\x33\xe5\x9e\xc5\x4e\x1c\x2f\xc3\xb4\xa3\x5f\x96\x1f\x0f\x50\x07\xea\x8c\x58\x8a\x4c\x75\xc7\xfa\x07\x5a\x27\xe5\xb0\x87\xf7\xd9\x97\x89\xa5\x24\x78\xa9\x7d\x12\x5b\xa2\x92\xdb\x91\xf3\xef\x37\x41\xfb\x55\x80\xdf\xfa\x7c\x33\x5d\xf0\x5f\x28\xa4\x3e\x4e\x9d\x89\x84\xde\x3e\xe0\x69\x7c\x4f\xf3\x4a\xaf\xec\xff\x71\xbb\xbf\x4a\x9c\x90\x13\xf9\x2c\xaa\xa6\xf7\xb7\x2d\xed\x72\x6a\xf3\x6d\x16\xa5\xcd\xf0\x14\x0f\x3d\xfe\x85\x2f\xc1\xa4\x92\xc7\x08\xfe\xd1\xde\x36\x3f\x47\x5a\x4a\xbd\xfa\xab\x3f\x4e\xd3\xba\xec\xe8\xac\x7e\x07\x00\x00\xff\xff\x53\x27\x68\x9e\x5c\x04\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1116, mode: os.FileMode(420), modTime: time.Unix(1441640513, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x5d\x6f\xdb\x36\x14\x7d\xd7\xaf\xb8\x33\x3a\xc0\x0e\x52\x79\xcf\x1b\x32\xa0\xed\xd2\x2d\x7b\x18\xb2\x2e\xe8\x1e\x8a\x62\x60\xe5\x6b\x89\x88\x24\x2a\x24\xe5\xcc\x33\xfc\xdf\x77\x2e\x29\x79\x96\xed\x78\x0a\x30\x60\xc8\x93\x28\xf2\x7e\x9c\x73\xee\xe5\x47\xa3\xb2\x7b\x95\x33\x6d\x36\x94\xde\x76\xe3\xed\x36\x49\xe6\x73\xba\x2b\xb4\xa3\xa5\x2e\x99\x1e\x95\xa3\x9c\x6b\xb6\xca\xf3\x82\xbe\xac\xc9\x17\x4c\xee\x51\xe5\x39\x5b\xf2\xc6\x94\xa9\xd8\x5f\x2f\xb4\xd7\x75\x8e\xc5\xde\xaf\xd2\x79\xe1\xa9\xb1\x66\xc5\xb4\x6c\x7d\x08\x55\x70\x4d\x6b\xd3\x92\xe5\xd7\xb6\xad\x07\x91\xfa\x14\x94\x99\xaa\x52\xf5\x22\x49\x74\xd5\x18\xeb\x69\x9a\x10\x4d\x6a\xf6\xf3\xc2\xfb\x66\x22\x3f\xb9\xf6\x45\xfb\x25\x85\xe1\x3c\x37\xaf\xbb\x00\xfb\x43\xb1\xbc\xd7\x7e\x9c\xb1\x7c\xc7\x59\xb2\xb5\xc6\xba\x67\x41\x98\xaf\x54\xa9\x17\xa0\x35\xce\x2b\x2b\x35\xd7\xc0\x0d\x63\xd4\xc4\xaa\x1a\x05\x49\x7f\xe0\xa5\x6a\x4b\x7f\x13\xe4\x70\x28\x10\x96\x1a\xab\x6b\xbf\xa4\xc9\xd7\x0f\x13\x4a\x51\xb2\x60\xcf\xf5\x82\xfa\x71\xf4\x7d\x75\xcf\xeb\x4b\x7a\x05\x10\x2d\xd3\xb7\x57\x94\x0e\x82\xc8\x2a\x46\x74\x10\xaf\x33\x3f\x88\x3a\x43\x5b\x5c\x24\x62\xaa\x5c\x06\x52\x7f\x01\xd9\x2f\xaa\x12\xbb\x5b\x65\x55\xe5\x50\xb8\xda\x2b\x5d\x3b\x52\x65\x19\x4a\xdb\xc8\x3c\x7b\xb6\x0e\x7d\x42\x4e\x02\xe1\x2b\x2b\x6f\x6e\x6f\x24\x6e\x63\x90\x35\x59\x1a\x1b\x26\x11\xbb\x68\x51\xfa\xfd\xd0\x64\x1a\xe9\x0a\x6d\xd0\x2c\xeb\x46\x23\x71\x19\x1a\xd0\x31\x29\x8b\x86\xb2\xda\x7b\xf4\x14\xc2\x2a\x12\xc9\xd3\x0f\xfc\xd0\xb2\xf3\xc9\xc5\x3c\x81\x43\x08\xfa\x24\x60\xe7\x6d\x9b\x79\xda\x0c\xd4\xee\xd6\x44\x20\xbd\x14\xf1\x5d\x66\x75\x13\x10\x6c\xb7\x50\x20\xd8\x1e\x4c\x63\xf2\x62\x7e\x50\x80\xe3\xac\xc1\xf1\x47\x73\x27\xb0\x0e\xc4\x8d\x7b\xee\x77\xb0\xe1\x3b\xd3\x51\x08\xe4\xd8\x75\x6c\x9b\x08\x2b\x10\xed\xb7\x8c\xed\xb8\x2e\xdb\x3a\xa3\xa9\x44\xff\xc0\x19\xeb\x15\xdb\x3e\xe3\xc5\x19\xfa\xb3\x83\x7c\x53\x4b\xb1\xfd\x7a\x0d\x2f\x91\x20\x17\x91\x96\x95\xcc\xe5\x1a\xc3\xf5\x8c\xc2\x2e\x80\x68\x20\xb0\x52\x02\xc2\xd1\xa7\xcf\x61\x32\x50\x1a\xc8\xd8\xd1\x84\x90\xb5\xf1\xe8\x3e\xf7\xc6\x5a\xb5\x0e\x67\x4c\xa0\x2f\x0a\xdf\xb8\x5f\x5b\xb6\xeb\xe0\x10\x75\x81\x14\x0f\x32\x15\x49\x07\xd9\x3a\xe4\x58\x84\x0b\x92\x49\x33\xdb\xf4\x37\xf6\xff\xf8\x4e\x0f\xb7\x45\xe7\x73\xd9\x27\x7a\x6f\x6c\xa5\xd0\x2e\x36\x76\xff\xe0\x3f\xa8\xf7\x51\xfa\xfe\xfa\xcf\x06\x94\x5c\x2c\xec\x4c\x4a\x54\x3a\xee\x3c\x8e\x0d\x36\x1b\x54\x10\x76\xdf\x05\x50\x5f\x5d\x51\xad\xcb\xd0\x50\x04\x61\x7c\x6b\x6b\x99\xc7\x6f\x5f\x6e\x89\x15\x49\xdf\x2a\x5f\x0c\x39\x37\x98\x19\x43\x79\xe7\xf9\xc2\x18\xff\xc4\x6a\xc1\x76\xc8\xb9\x08\x73\x63\x58\xef\x79\xbf\x30\xde\x92\x7d\x8f\xf5\xae\xed\xdf\xe3\x4a\x1c\xaa\x81\x93\xb0\x8a\x97\xe7\x08\x41\x76\xee\x67\xe5\x38\x45\xf5\x39\x14\x06\xd0\xc6\xa0\xea\xc9\xbe\x88\x22\xc5\xd3\xf7\xf8\x67\xaf\x7a\x27\x4e\xac\x77\x85\x2e\x17\x03\xbc\x72\x10\x86\x5b\xd3\x9d\x3e\xf9\x3f\x7d\xc6\xd9\x89\xe7\x11\x62\xc8\x6d\xf7\xc7\x25\xad\x82\x62\xe1\xac\x3c\x4d\xa5\x83\xbd\x8b\x1a\x4f\xd4\x3e\xe0\x15\xa9\xa6\x01\xe2\xe9\x99\xac\xb1\xfe\xc7\x60\xa7\xab\xd9\xec\xa8\xca\xe7\xd0\x03\xe9\x69\x8c\xc7\xcf\x8e\x7f\x39\xd0\x55\x10\xf3\x3f\x3a\xd6\xe5\x1a\x4c\x7f\xc6\x13\xe2\xed\x3a\xd2\x3b\x2f\xc6\x64\xb3\x49\xdf\x99\xb2\xe4\x4c\x6e\xed\xe8\xb1\xdd\x4e\x66\x69\x9a\x3e\x77\x53\xe3\x79\x7a\x62\x63\xf7\xbb\x64\x34\xc9\x11\x7b\xe5\x7f\xe0\xf8\xd4\x9e\x88\xa5\x7d\x6b\x16\xb1\x2e\xa7\x08\xed\x16\x9f\xda\xbf\xe3\x30\x84\x3d\x3c\x18\x21\x4f\xc9\xf5\x14\x91\x66\xf4\x3d\x7d\x73\xe4\x8a\x67\x39\x78\xe3\x6d\xeb\xf0\xa2\xf9\x18\x9f\xdc\x48\x79\x2d\x2b\xe2\x25\xfc\xbb\xf0\x9d\x13\x00\xe0\xd5\xf5\x77\x00\x00\x00\xff\xff\x8c\xa5\xa1\xa5\x01\x0d\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3329, mode: os.FileMode(420), modTime: time.Unix(1441640513, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xcd\x72\xdb\x36\x10\xbe\xf3\x29\xb6\x1c\x37\x23\x7a\x14\xea\x9e\x4e\x0e\xad\x93\x49\x75\x49\x3d\x4e\x5e\x00\x26\x97\x24\x6a\x12\x60\x01\xd0\xaa\xaa\xd1\xbb\x77\xf1\xc3\x3f\x8b\x92\x15\xf7\x52\x5f\x44\xef\xef\xb7\xdf\x02\x1f\x79\x38\x40\x8e\x05\x17\x08\x71\x56\x73\x14\x46\xa1\x6e\xa5\xd0\x18\xc3\xf1\xb8\xb9\x8d\xc8\xcf\x0b\x48\x3f\xa1\xce\x14\x6f\x0d\x97\x82\xec\x64\x3c\xb1\x60\xad\xd1\x79\x5a\xa6\x33\x56\xf3\x7f\x10\xd2\xaf\xac\x41\x72\x02\x59\xab\xae\x61\x62\x6a\xa4\x0c\x91\x1f\x8f\xd1\xed\x26\x32\xfb\x16\x61\x39\x53\x1b\xd5\x65\x06\x0e\x11\xd8\x00\xc5\x44\x49\xce\xdf\x91\xe5\xa8\xb4\x2b\x72\x0a\x6e\xb3\x81\x25\x7c\x40\xed\xe8\xc1\x17\x5a\xc6\x98\x7e\x91\xdf\x2d\x94\x3e\x6a\x9a\x61\xfb\x7c\xcb\x2a\x6c\x98\x37\xdd\xb3\x7d\x2d\x59\x3e\x77\xa5\x5b\x7d\x27\x9b\xb6\xc6\xbf\xff\x78\xfc\x13\x09\xf7\xf1\x78\x3b\xd4\xb1\x0d\x42\xd8\x72\x9f\x63\x14\x15\x9d\xc8\x60\x65\x23\x1f\x30\x43\xfe\x8c\xaa\x87\x77\xbb\x88\x3a\x01\x45\x5c\x3c\x84\x95\xad\xfa\xdd\x81\x5f\x65\xda\x3b\xd6\x90\xd1\x4f\xd7\xa0\x82\xca\x98\xf6\x89\x9b\xf4\x2e\x18\xd6\x50\x48\xd5\x30\xa3\x2d\xd5\x45\x63\x73\x4a\x4e\x8f\xfb\x04\x50\x29\xa9\xce\x52\x4f\x66\x62\x7a\xe8\x58\x39\x07\x45\x3a\x68\x61\x32\xcb\x0c\x35\xa2\x31\x0c\x2a\xc7\x40\x46\xce\xd9\x04\x6b\xdb\x06\x3e\x7c\xb4\x99\x93\xd0\x61\x94\xf4\x0b\x1a\xdf\x74\x15\x5b\x5e\x42\x5a\x9c\x24\xd4\x81\xea\xdb\xec\x9f\x3e\x82\xe0\xb5\x43\x0a\x84\xc8\x74\x4a\x78\xf0\x3a\xdd\x8a\x67\x62\x2c\xb7\x74\x3b\x5a\xef\x99\xa9\x5c\xd7\xd8\x03\x8e\xe9\x69\xb6\x79\x32\x5c\xd5\x3a\xac\xee\xe5\x9e\xd2\xe5\xc3\x65\xc7\x3b\x9d\xdd\x95\x18\xee\xcd\xd5\xa5\x5e\xc5\xe7\xeb\xba\xdb\xf5\xea\x39\x9e\xee\xb0\xf5\x67\x7a\x24\x96\xd6\xd2\x1f\x9c\xfe\xc0\x8c\x8b\xf9\x4d\xe6\xfb\x55\xb2\x0e\x45\x85\x34\x17\x6e\xc1\x3b\x8f\x62\x79\xce\x70\x95\x92\x5f\x2e\x2d\x73\xa4\x7c\x98\x26\x38\x29\x9a\xae\xce\xe0\x68\x59\xf6\xc4\x4a\xa7\x27\x54\xd9\x3f\x53\x78\x44\x83\x7e\xaf\xb8\x86\x82\xd7\x08\x3b\xa6\xa1\x44\x81\x8a\x19\xcc\xe1\x71\x0f\xa6\x42\xd0\x3b\x56\x96\x74\x86\x8d\x94\x75\x6a\xe3\x3f\xe7\xdc\x70\x51\x92\xb3\xcf\x6b\x78\x59\x19\x68\x95\x7c\x46\x28\x3a\xe3\x4a\x55\x28\x60\x2f\x3b\x82\xf3\x5e\x75\x62\x56\xa9\x6f\x41\x2c\x36\x24\x7f\x79\x14\x45\xbc\x69\xa5\x32\xb0\x22\xfc\xb1\x40\xb3\xb1\xf7\x31\xb6\xff\x94\xdc\x54\xdd\x63\x4a\x91\x9b\x52\xbe\x0f\x15\xa6\x8f\xe1\xe6\x5e\x17\x6c\x7f\xaf\x8b\xf4\x17\xe5\x87\x20\x6c\xdc\x9d\xa2\xb9\xae\xcb\xf2\x62\x14\x47\x33\x21\xf9\x84\x05\xeb\x6a\xb3\x75\x74\x78\x29\x27\x5e\xb9\x30\x05\xc4\x3f\xff\x15\x43\xba\x74\x78\x7d\xee\xcd\x13\xee\xd7\x70\x43\x20\x3a\xb4\x47\x34\x9d\x15\xb1\xde\xa0\xe7\xd3\x7a\x21\xfc\x45\xd5\x24\xba\xf0\xf2\x79\xf0\x92\x36\x79\x05\x9d\x91\xca\xb7\x28\xb7\x2f\x9e\xc0\xc3\x7f\xd4\xef\x04\x56\x34\x24\xaa\x82\x65\x78\xf0\x6a\x2a\xc9\x68\xd1\xea\x1d\x37\x59\x35\xca\xc5\x9d\xcc\x71\x95\xcc\x05\xfd\x84\xcb\xbe\x65\x90\x78\x20\xd5\xd2\x8e\x9f\xc0\xeb\x07\x67\x04\x78\x66\xca\x56\xa6\x15\xce\xc9\xf3\xa5\x26\x0a\x67\xff\x46\x39\xf1\x29\xe9\xe2\x5b\x6b\x9c\xd2\x89\xca\xcd\x89\x50\x04\xfa\x97\x84\x62\x22\x16\x64\x5c\x07\xc5\xb0\x7f\x3d\x86\xe0\xf5\x6a\x15\x50\x6e\xf5\xb7\x2e\xcb\x50\xdb\x61\xdf\x79\x68\x6b\x9b\xdf\xab\xb2\x2b\xf5\x15\x77\xbf\xde\x6f\x3f\x5b\x5e\x9d\xce\xce\x27\xa4\xf7\xc5\x90\xf9\x82\xe9\x64\x2a\xc2\xbd\xfa\xf9\xef\x15\x77\xf6\x7b\x02\xfc\xb9\xa5\x65\x55\x4b\x2e\x07\x3f\xf7\xe6\xd7\xc8\xff\xbf\xd3\xfe\x36\xc2\x7f\x80\xea\xe9\xc7\xd6\x20\x1c\xee\xcb\xea\xca\x13\x4f\x61\x06\xe9\xdd\x65\x45\xfb\xe4\x83\x78\xd4\x90\xb1\xfc\xd9\x95\x5e\x2e\x75\x26\x21\x14\xfd\x37\x00\x00\xff\xff\x55\x7c\x68\x7c\x95\x0b\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 2965, mode: os.FileMode(420), modTime: time.Unix(1441640513, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1441640099, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441640501, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50\xca\x48\x4d\x4c\x49\x2d\x52\x52\xd0\x53\xa8\xad\xe5\xe2\xd2\xd7\xe2\x42\x91\x4d\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x87\x2a\x28\x2e\x4f\x4c\x4f\x4f\x2d\xb2\xca\xcd\x4f\x49\xcd\x51\x00\x2a\xd5\xf3\x4b\xcc\x4d\x05\xc9\x68\xe9\xa3\xea\x2c\x4e\xce\x48\xcd\x4d\x84\x99\x0b\x94\x2a\x4a\xcc\x4b\x4f\x55\xd0\x73\xad\x28\x29\x4a\x0c\x06\x4b\x16\x83\xa4\x68\x64\x23\x50\x26\x35\x2f\x05\xc4\x02\x04\x00\x00\xff\xff\xab\x63\xcf\xcc\xee\x00\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 238, mode: os.FileMode(420), modTime: time.Unix(1441640295, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1441640099, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x4b\x8e\xc2\x30\x0c\x86\xf7\x3d\x45\xd4\x03\xf4\x0e\x33\xb3\x99\xd9\x0c\x48\x54\xec\x4d\x63\x44\x50\xda\x44\x89\x41\x94\xaa\x77\xc7\x26\x94\x47\x5b\xc4\x2e\xf9\x1f\x9f\xed\xae\x53\x66\xab\x5c\x50\xc5\x5f\xfc\x71\xb5\xb7\x78\x5a\x6c\xf6\x58\x91\x08\xe5\x81\xff\xf2\xf8\xd2\xda\x90\x71\x0d\xd8\x65\x70\x1e\x03\x19\x8c\xaa\xef\x53\xb9\xf8\x87\x1a\xf9\x47\xad\x47\xc5\x92\x87\x58\x81\x35\x67\xbc\x3b\xa2\x62\xa3\x53\x83\x90\xa7\x00\xa1\xca\x63\xb5\xc3\x1a\xbe\x9d\x6e\x73\x55\xb0\x99\x49\xcc\xc6\xcf\xac\x31\xa2\xe4\xf4\x13\x62\x98\x24\xbb\x0d\x47\x24\xeb\x51\x24\x51\x57\x18\xcc\x95\x1e\x46\x0b\xa4\xe6\x9b\xab\x5f\x41\x30\x13\x9a\xe5\xde\xb6\x12\xf4\x2f\xc4\x35\xfb\x1a\xa4\x38\x45\xa6\xa3\x8e\x29\xe1\x26\x8c\xec\x12\x00\x00\xff\xff\x15\xc0\x80\x62\xb4\x01\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 436, mode: os.FileMode(420), modTime: time.Unix(1441640479, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x92\x3f\x4f\xf3\x30\x10\xc6\xf7\xf7\x53\x9c\xa2\x77\xaa\x44\xba\xb3\x15\x21\x41\x97\x82\x44\xc5\x52\x21\xf5\x88\x2f\xc5\xc8\xb1\xad\xd8\x19\x42\x94\xef\x8e\x93\x6b\x9a\xa4\x34\x50\x31\xb0\xc0\xe6\x3f\xbf\xbb\x7b\xee\xee\xa9\x2a\x10\x94\x4a\x4d\x10\xb9\xe4\x85\x32\xbc\x32\xa2\x8c\xa0\xae\x9d\xcf\x8b\xc4\x43\xf5\x0f\x20\x30\x39\xea\x1d\x41\xbc\x50\xea\x2e\x0d\x9f\xfc\x28\x53\x88\x97\x6e\xa1\x8d\x2e\x33\x53\xb8\xf0\xde\x93\xf7\xb9\xb1\x94\x7b\x49\x6e\x88\xff\x0f\xfc\xba\xb0\x8a\x98\xf5\x94\x59\x85\x3e\xd4\xf6\xcd\x63\x2a\x49\x89\x08\x62\xfe\x24\xe5\x18\xeb\x29\xd6\x74\x84\x69\x71\xa8\xc0\xe7\xbd\xb2\x5b\x74\x0b\x21\xa4\x97\x46\xa3\x1a\xc9\x99\xcf\x60\x54\x5c\x98\x24\x64\x96\x7a\x17\x92\x4e\x84\x8c\x78\xcb\x3f\xe5\x23\x2a\x29\xb0\xa1\xaf\x4d\xf2\xf0\x59\x86\xba\x86\xd9\x9c\x35\x5a\x74\x49\x88\x7b\xa3\xd3\x64\xbc\xc2\xac\x69\x1b\x32\xb4\x1b\x56\xf5\x34\x2a\xce\x5b\x5a\x97\x96\xa6\xd5\xc2\xf6\xd5\x19\x7d\x19\x5d\x44\xdb\xa6\x66\x18\xcb\x70\x65\x7d\xd0\x32\xa4\x3d\x7f\x20\x1d\xfd\xad\x59\xb4\xc1\x5f\x8d\xa1\x85\x0e\x13\xd8\x9c\xd5\x78\xa7\x6a\xd0\xf3\xd0\x0c\xfb\x33\x7b\xa9\xbd\xb0\x6b\x57\x85\x52\xf8\xdc\x1a\x71\x36\x74\x4e\x7c\x63\x9a\x12\x53\xde\x6a\xcf\x1f\x2c\xfe\x63\x0e\x3f\xda\xe4\x9f\xc5\x4f\xaf\xfb\xf7\xb9\xbc\xee\xbc\xf1\x1e\x00\x00\xff\xff\xd9\x41\x2b\x8f\xd0\x05\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 1488, mode: os.FileMode(420), modTime: time.Unix(1441640403, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1441640484, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x4b\x6f\x1b\x37\x10\xbe\xfb\x57\x4c\x85\xb4\x90\x12\x61\x93\x43\xd1\x43\xd3\x14\x30\x0a\xb7\x0d\x9a\x34\x46\x92\xfa\x12\x04\x35\x2d\x51\xd6\x06\xfb\x90\xf7\xe1\x4a\x15\xf4\xdf\x3b\x7c\x2e\x97\xcb\x7d\x49\x6b\xd5\x76\xeb\x8b\xc5\xd7\x70\xbe\x99\x6f\x86\x43\x4a\xdb\xed\x9c\x2e\xfc\x88\xc2\x68\x95\xf8\xa1\x9f\xf9\xb7\xd8\xa4\xc1\xfc\x96\x04\xfe\x9c\x64\x71\x32\xda\xed\x4e\xb6\x5b\x7f\x01\xde\x7b\x7a\x93\xfb\x09\x9d\x63\x07\x36\x69\x92\xc0\xf7\xaf\x40\xce\xa3\x7a\x74\xbc\xdd\x82\x77\x4e\xb2\x25\xec\x76\x53\xc0\x06\xca\x8d\xb2\x05\x8c\xbe\xbe\x19\x81\xf7\x26\x9e\x91\xcc\x8f\x23\x35\x88\x82\xa2\x38\x03\xef\x75\x7a\x1a\xc5\xd1\x26\x8c\xf3\x14\x87\x98\x88\x5f\xe2\x8f\x9b\x15\xc5\x06\x0a\xa4\xd1\x9c\x75\x7a\x17\x24\xc8\xe9\xd9\x7a\x95\xd0\x34\x45\x21\x7c\xa2\x5b\xc2\x44\x2e\x9a\xbc\xe4\x8a\x7e\xf5\x0a\x22\x3f\x80\xed\x09\x40\x42\xb3\x3c\x89\x58\xef\x09\x03\xc6\x67\x49\x80\x6f\xfd\xe8\x0d\x8d\xae\xb3\xa5\x1b\xa1\x1e\x1e\x8b\x6d\x15\x4a\x03\x30\xca\x0b\x52\xba\xdb\x8d\x46\x52\x72\x8b\x05\xd2\x0c\x87\xae\xc7\x2e\x68\x13\xb6\xd4\x54\xa9\x1f\x14\xb2\x6e\x84\xa2\x86\x8f\x09\xa5\x50\xa9\x17\x14\xd4\x27\xa3\x49\xe4\x06\x22\x07\x8f\x05\xe3\x12\xfb\xb5\x3e\x97\x7d\xc9\xe5\x87\x79\x58\x4b\x2d\x36\x38\x1c\x8c\x45\x10\x93\xec\xbb\x6f\x9b\x99\x25\xf4\xe1\xad\xb3\xf5\x2c\xc8\x53\x0c\x7e\xdd\xdd\x97\x6e\x0d\xe0\xc4\xe0\x51\xc1\x29\x7d\x2c\x70\xaa\xbb\x1f\xb8\x3c\xc8\xfc\x55\x40\xdf\x2d\x6a\xf0\xe9\xf1\xa3\x42\x34\xb4\xea\x05\xe7\x2c\xb2\x1c\x85\xc2\xde\xd3\x19\x45\xfb\x24\xbf\x93\x10\x95\xf4\x14\x34\xa6\x22\x49\x67\xd8\xfa\x9b\x82\xc7\x06\x05\x2a\xa3\xf3\x43\xbe\x58\xf8\x6b\xec\x66\x62\x87\xc3\xef\xc4\xdd\x15\xa5\xfa\xaf\x4e\xb6\x34\xf0\x67\xb4\x7a\xa0\xc5\x09\x8f\xca\xd7\x19\x0d\x53\x4e\x61\xf1\x89\x0f\xe3\x79\x12\xcd\xe9\xfa\x82\x24\x15\xc4\xd2\x0c\x1f\x58\x03\xad\x87\x08\xd0\x4f\x01\x8d\xdc\xbe\x9a\x54\xd3\x00\xdf\xa6\x36\x0f\xf0\xd1\x21\x0d\xd9\x0d\x8a\xca\x09\x52\xb9\xbe\xd1\xdf\x84\x49\x8e\xfe\x5b\x98\xb4\x72\xbd\x30\xfd\x11\xf9\x37\x39\x6d\x80\x65\x4c\xb8\x27\xb4\x1f\x22\xb8\xef\x4b\x14\x4b\x15\x54\x44\x9a\x4d\xef\x57\x92\x5e\x08\x0c\x28\x90\xc7\xeb\x02\x43\x19\xf7\x52\x9c\xd8\xed\x18\xf2\x17\x2f\xad\xbe\x1f\xa0\x36\x4a\xad\xa9\xcf\x9e\xa1\x62\xdb\xed\x5f\x3e\xa2\xf6\x14\x07\x00\xe7\xe0\xc7\x55\x80\xb6\x63\xd5\x72\xbc\xa2\x49\xb6\x29\xd2\x0a\x78\x46\xf2\xd9\x69\x1c\x76\x52\x02\x95\x95\x42\xb2\x32\x16\x8b\x31\xe5\x42\xb0\x7c\x08\x25\x27\xc2\xb1\xbd\x08\xb6\xc9\xa0\x83\x1f\x01\x65\x17\xae\x3b\x9d\xcf\x7d\x26\x91\x04\xe7\xc2\x72\x3e\x6d\xf0\xa4\x73\xf6\x6f\x74\xc3\xbd\x33\xad\x9d\x51\x71\x2c\xb3\x5e\x42\xa2\x6b\x5a\x03\x82\xeb\x8d\x43\xc2\xd3\x2e\x99\x20\x3d\x0f\xad\xae\xe7\xb3\x04\x66\x0b\xbf\xec\x2c\x0e\xa4\xf8\xea\x0b\x9d\x65\xe6\x89\x54\x7b\x91\x29\x87\x72\x05\xa0\x27\xed\x47\xc7\x68\xb9\x90\x64\x69\x07\xb7\xa0\xf3\x25\xdd\x84\x69\xbc\xd3\x20\x78\xb7\x28\x77\x95\x0d\xd0\x0a\x5f\x4e\xd2\x40\x8d\x4f\x03\x08\xd4\xb1\x84\xb6\x20\xd8\x83\x26\xfa\x98\x63\xe9\x63\x7a\x4c\x9f\xdd\xcf\x9f\xab\x1c\x8d\x75\x3c\x10\x3d\x01\x7c\x3e\x23\x5d\xc6\x79\x30\x87\xeb\x18\x96\x34\xa1\x27\x95\x30\x2d\x6e\xc3\xb6\x52\x3a\xc7\xbe\x4e\xcf\xd5\x55\x59\xf8\xd7\x84\xe2\xbe\x43\xab\xdc\xc0\x4c\x2f\x44\xfc\x94\xa7\x59\x1c\xfe\xcc\x9d\x86\xd7\x09\x5b\xd0\x8c\x0f\x0b\x9f\x36\x89\x39\x4d\x12\xb2\xb1\x17\x5b\xf5\x4e\x75\xd5\x5b\xb2\xb2\x96\x94\x93\x91\x34\xbf\x5a\xc1\x0a\x25\xd4\x38\xc6\xc9\x74\xfd\x8e\x73\xd7\xf0\x01\x2a\xe1\x8e\x9b\xd2\x06\x36\xe5\xf9\x1e\x0d\x25\xdb\x6c\x49\x43\x52\xca\x8f\x56\x7a\xbc\x25\x2c\x53\xc0\x0c\x33\x5e\x25\xf7\xc1\xa7\xcf\x98\xcc\x68\xb2\x20\x33\xba\xc5\xa4\x92\x47\x33\x18\x3b\xb2\x28\x3c\xad\xa6\x4f\xcc\x6c\xd0\x9e\x5c\x57\x98\x4a\xa7\x10\xa8\x34\x29\x6e\x8d\x53\xb6\x30\xa7\xe5\x6c\x21\x90\xb0\xb7\x0c\x81\x79\xc2\x22\x91\x65\x39\x0c\x4d\xc4\x53\x0b\xe1\x55\x11\xc1\x00\x0c\x2c\xc6\x3c\xe2\x6a\x94\xcd\xe7\x16\x09\xe3\x4b\x1a\x47\x58\xa7\x84\x24\x49\x97\x24\x18\x7f\xfa\x7c\xb5\xc1\x44\x81\x77\x58\x3e\xa2\x4d\x79\x89\x17\x8a\x6f\x50\x7a\x35\x75\xb0\x3f\x23\x7d\xb0\xa6\xd8\x83\xa5\xe9\x3f\x11\x6e\x91\x5f\x99\x76\x6a\x49\x3d\x26\x20\xab\x15\xba\x7a\x5c\x37\x03\x45\x4e\xf4\x36\xbb\x22\x79\xe9\xaa\xcb\x61\x7c\x69\xf5\x69\xed\xb6\x13\xc7\x71\xc4\xd3\x85\xc4\x5f\xc7\xa4\x62\xce\x7e\x74\x7a\xd2\x8d\x4f\x7a\x9b\x7d\x49\xa5\x52\x5f\x07\x66\x15\x90\x7a\xd3\x4b\x27\xd8\x7e\x1c\x33\x0d\x7d\x14\xa2\x19\x10\x9b\xd8\xa6\xa7\x0d\x4b\x39\x43\xb0\x4d\xbb\xe6\x1a\xa3\x63\x76\x13\x05\xc0\x5d\xa7\x38\xbd\xcb\xdd\xe6\xb9\x02\xcc\x23\x4b\x76\x06\xb0\x26\x0e\xea\x69\x83\xa7\x3d\x2d\xb9\x44\x42\xe3\x13\x56\x49\xaa\x72\xd4\xbb\xa4\x90\x2d\xfd\x94\xc9\x5b\xe6\x21\x89\x4c\x79\x9a\x5f\xd6\x65\x52\x3e\xe1\x8b\x02\x41\xd7\x03\x95\x4a\xa1\x86\xf4\x4f\xcd\xf0\x70\x70\xd4\xae\x6d\x19\xfd\x16\x61\x86\x3a\x5c\xfb\xf8\x71\x63\x52\x4c\x94\x66\xe5\x0b\x05\xe7\x48\xc1\x26\x3e\x59\x94\xe9\x76\xe1\x2b\x1d\x59\x15\x51\x0c\x1e\x52\xf9\x09\x09\x83\x54\x7f\x15\x51\x9d\x2b\xc0\xca\xca\x4e\x55\xa0\xb4\x8c\xa4\x8d\x6c\x56\x6a\xfa\x92\x95\x1c\x4e\x30\x03\xb5\xe7\x8b\x44\xfd\xc5\x46\x04\x6c\x5a\xc4\x18\x36\xa6\x6c\xd2\xc4\x08\x5e\x55\x5a\x96\x71\x98\xfd\xed\xd7\x0a\x3e\xed\x80\xeb\xb8\x78\x24\x6a\xc0\x51\x8b\xc2\xd6\xd4\xd4\xff\x30\x42\x0e\x46\xc7\x7d\xc9\xb8\x0f\x15\x4b\x44\xac\xa3\x61\x2d\x09\xef\x84\x82\x9d\x5d\xf7\x20\xe9\x66\x96\x24\x07\xe9\xc4\x0f\xb0\xd1\x68\x0a\xa3\xab\x78\xbe\x19\x4d\x5d\x12\xf6\x50\xd5\xa0\x03\x2a\xc7\x9e\xf7\xd8\xd1\x0e\x3f\xc2\x0b\xbd\x5e\x1d\xe8\x71\x92\x7a\xec\x60\x8a\x53\x3f\xa3\x05\x35\xce\xd8\x08\x5b\xe5\x79\x5e\xd5\x04\x72\x39\xea\xc3\xcf\x51\x17\xe1\xdc\x74\x2b\xdb\xce\xae\xe6\x9e\xb8\xbf\x4b\x39\xfc\x06\xdb\xf1\xca\x71\x77\xa5\x5d\x07\x64\x8f\xa4\xd6\xeb\x82\xd4\x55\xfc\xb5\xaf\x1b\xac\x1a\x54\x6c\x70\x55\x57\xfb\x5c\x8c\x9b\x55\x7f\x44\xd7\xe5\xae\x40\x1f\xdd\x25\xba\x33\xf0\xfe\xcc\x1e\xfe\xc2\xdd\x44\xef\xda\x5b\x78\xf9\xbb\x08\x79\xde\xba\xfb\x1f\x63\xf6\xae\x3e\x98\x1f\x39\x99\x3b\x5e\xec\xfb\xc5\x42\x8d\x93\xfe\xcf\xf5\xfd\x72\xfd\x30\xcf\x52\xcd\x00\x0f\x7d\xac\xea\x18\x0f\x77\xfc\x5a\xd5\x15\xe3\x7f\xa2\xae\x69\x79\xd9\xea\xb8\x78\x60\xd6\xb7\xee\x57\xf7\x0a\x86\x7f\x75\x0f\x5b\x2e\x26\x42\x2b\x15\xbb\xbd\x54\xb5\x7e\x95\x5c\xbd\x79\xd8\xdf\x93\x99\x0f\x58\xbb\x7e\x57\x93\x07\x83\xb9\xf0\x97\x8d\x5e\xc2\x72\x9c\x25\xfd\x4e\xf2\x87\x56\xba\xf6\x3a\xbd\x07\x28\x57\x1f\xe4\x61\x7d\xbf\xbf\x08\xea\x18\x7c\x1d\x63\xaf\xf4\xd4\xd3\x1c\x80\xce\xb8\x70\x3d\x76\x8b\x9f\xe0\x94\x7e\x61\xd7\xf6\x33\x1a\xaf\x5e\x39\xe9\xa2\xb6\x04\xe0\x64\x9a\xfd\xe6\xd9\x98\x13\xff\x09\x00\x00\xff\xff\x07\xed\x19\x28\xc9\x30\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 12489, mode: os.FileMode(420), modTime: time.Unix(1441640479, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x5b\x6f\x1b\xbb\x11\x7e\xae\x7e\xc5\x40\x38\xa7\xd8\x0d\x74\xd6\x7e\x2c\x0c\xb8\x80\x1b\x9f\x22\xee\x25\x35\xec\xa0\x7d\x30\x82\x82\xde\xa5\x24\xc2\x7b\x3b\x24\xd7\xaa\x2a\xe8\xbf\x77\x86\x97\x5d\xee\x45\x8a\x14\x3b\xa8\x11\x04\x12\x39\x9c\xf9\xe6\x3e\xa4\x6a\x96\xbe\xb0\x15\x87\xdd\x2e\xb9\xb7\x1f\xf7\xfb\xd9\xec\xe2\x02\xbe\xac\x85\x82\xa5\xc8\x39\x6c\x98\x82\x15\x2f\xb9\x64\x9a\x67\xf0\xbc\x05\xbd\xe6\xa0\x36\x6c\xb5\xe2\x12\x74\x55\xe5\x09\xd1\xff\x9a\x09\x2d\xca\x15\x6e\xfa\x73\x85\x58\xad\x35\xd4\xb2\x7a\xe5\xb0\x6c\xb4\x61\xb5\xe6\x25\x6c\xab\x06\x24\xff\x45\x36\x65\x8f\x93\x17\x01\x69\x55\x14\xac\xcc\x66\x33\x51\xd4\x95\xd4\x10\xcd\x00\xe6\x4a\x4b\xe4\xae\xe6\xf4\xb9\xe4\xfa\x62\xad\x75\x6d\xbe\xac\x84\x5e\x37\xcf\x09\x1e\xba\x58\x55\xbf\x38\x66\xe1\x47\xa2\x7c\x11\xfa\x34\x62\x55\xf3\xf4\x44\x4a\x2d\x97\xc5\x89\x5c\x1d\x84\x8b\x42\x64\x59\xce\x37\x4c\xf2\xf3\xce\x29\x9e\x36\x52\xe8\xed\x7c\x86\xc7\x76\x3b\xc9\x4a\xf4\x58\x72\xcb\x97\xac\xc9\xf5\x9d\xb1\x92\xda\xef\x77\xbb\x1a\x6d\xa4\x97\x30\xff\xf9\xb7\x39\x24\xe8\x47\x22\xe6\x65\xe6\x3e\xd9\x63\x3f\xbd\xf0\xed\x02\x7e\x7a\x65\x79\xc3\xe1\xea\x1a\x92\xe0\x3c\xed\xed\xf7\x48\x0a\x21\x27\x4b\xdb\x63\x17\x9b\x10\xf9\xcc\x37\x18\x36\x37\x75\xfd\x99\x15\xb8\x7f\x73\x7f\x07\xa9\xe4\xe8\x42\x05\x0c\x4a\xbe\x81\x70\x17\x44\xa9\x34\x2b\x53\x3e\x5b\x36\x65\x3a\x71\x36\x22\xdb\xc3\x07\xfa\x3f\xb9\xad\xd2\xa6\xe0\xa5\x8e\xe1\xc3\x50\xc2\xce\xc0\x48\x1e\x78\xca\xc5\x2b\x97\x8e\x39\x2a\xf2\xfb\x01\x25\x11\x02\x10\xbb\x2b\xf0\x9f\x16\x66\x6d\x8d\xd1\x95\x73\xa9\xae\xa0\x60\x2f\x3c\x2a\x58\xfd\x64\xc3\xeb\x2b\x19\x3c\xf9\x64\xb7\x63\x4b\xbc\xac\x64\xc1\x34\xd2\x82\xf5\xb8\x37\xbb\xdd\xcd\xec\x97\x8f\x55\xa9\x10\x30\x52\xcd\x11\xc5\x6d\x7f\x71\xbf\x9f\xf7\x88\xef\x65\x95\x35\xe9\x80\xd8\x2f\x3a\xe2\x3d\x79\x5a\x72\xdd\xc8\x72\xac\xed\xcc\x66\xe8\xc8\x32\xbb\xe4\xae\x5c\x56\xc8\x51\xa5\x52\xd4\x5a\x54\x25\xd2\xea\x6d\xcd\x47\xa4\xa8\x4a\x93\x6a\x63\x4b\x63\xf5\xe0\xaf\xef\x00\x24\x48\xab\x52\xf3\xff\xe8\x8e\xa0\x8b\xe2\xe4\xa3\xdd\x9b\x75\x36\xf5\x54\x07\x8c\x3a\x6b\x0d\xda\xf2\x73\x66\x7d\xe0\x2b\x81\x1f\xb7\xb3\x91\x51\xc1\xf2\x99\x8d\x0c\xd8\x6d\xb4\x39\xd1\xd9\xdc\x1a\xe8\x63\xce\x94\xb2\x7a\xbb\x2d\x89\x66\x25\x49\x84\x95\x91\x72\x76\x11\x51\xe1\x57\x72\xc8\xdf\x79\x26\xd8\x17\xb4\x1a\xba\x02\x6b\x58\xc1\x81\x4c\x68\xa3\x6e\x8a\x9d\x4b\x52\x2f\x5a\x4e\x66\x5d\xd2\xf9\x77\x04\xcc\x6d\xf5\x81\xd5\x7e\xf1\x6c\x60\x2d\x3b\x0f\xcc\x2f\x4c\x03\x7b\x74\xb5\x05\xe3\x50\x94\x82\x82\x46\x39\x02\xb1\xc4\xe2\xa0\xfe\xc4\x94\x48\x6f\x1a\xbd\x9e\x40\x4e\xcb\x3d\xd4\x94\xda\xc4\x02\x0b\x3b\xd3\xa0\x31\xbb\x14\x34\x8a\xcb\x12\xc9\x01\x23\x00\x6a\x3c\xbb\xa9\x64\x66\xbe\xd8\xf8\xb6\xda\x8a\x32\x15\x35\xcb\x51\x30\x4a\x11\xd8\x36\xb8\xa4\x40\xc1\x4d\x94\x81\x81\x28\x52\x66\x18\x6f\xb0\x66\xc2\x33\x61\x32\x3b\x23\xed\x0d\x24\x82\x11\xd9\xe0\x58\xb8\x20\x89\x21\xa2\x52\x72\xef\x05\xed\xf7\x0b\xe0\x52\x56\x32\xee\xcc\xe2\x55\xc6\x0c\xf9\x2b\xdf\xbe\x45\x67\x86\x7d\xf1\x05\x5b\xdd\xf7\x6a\x89\x0a\x62\xab\xad\x88\x01\xb0\x5a\x00\xd6\x65\x82\xe1\x8a\x1d\xb5\x54\x91\x21\x81\xb0\x1d\x14\x77\x1e\xab\x46\xa6\xbe\x46\x1f\xb3\xc7\x29\x76\x98\x0e\x94\x7f\xd4\xd4\x9e\x6d\x7c\x8c\xac\xe2\xd2\x1b\x14\xc7\xcc\x26\x4c\x95\xa7\xf6\x95\xc1\x04\xb2\x43\xfb\xa9\xc1\x06\x1f\x9c\xee\xa8\xdb\xc0\x6b\x87\x91\x69\x39\xe1\xb8\x92\x4c\x92\x58\x25\x72\x75\x8c\xc5\xa1\x53\x23\x23\xa0\xbe\x8f\x5c\xbe\xf2\x5f\xc9\x52\x80\x03\x4e\xca\xf2\x1c\x1d\x60\xe6\x19\xf4\x11\xf7\xeb\xd2\x16\xea\x6c\x41\xaa\x4a\x4e\x4b\xcc\x97\x2d\x6f\x09\xcb\xef\xb9\xd1\x66\x12\x4a\xf1\x38\x5a\x8d\x3e\x4b\xa8\x36\x2e\xc2\x69\x8a\x42\xba\x40\xa8\xe9\x45\xe4\x47\x53\x4e\x1f\xb8\xaa\xd1\x13\xfc\x5f\x98\xba\x5c\x2e\xe0\x83\x5b\xfd\xad\xe1\x4a\xb7\x1e\xb5\x7d\xe2\x91\xeb\xdb\x61\xe1\xf4\x6e\xf2\xd0\x6a\xbf\x53\x50\x91\xb1\x85\xc5\xf4\xe9\x68\xdc\x6b\x87\x2d\x39\x9e\x90\x10\x15\xbe\x58\xb5\xf9\xb7\x9b\xfd\x6e\xc4\x2b\x19\x56\xf4\x6b\x68\x0f\x8e\xd0\xb7\xfd\xc0\x67\x54\xa8\x40\xea\x37\xdf\xa8\x80\x17\x72\xa6\x02\x2d\xb6\xb1\x02\x43\xdb\x4f\xa1\x7f\x9b\xf9\x87\xb6\x8f\x1d\x64\x42\x7c\x68\x86\x18\x5a\xbe\x0f\xf6\x07\x9a\x7a\x68\xe7\x73\xc0\xfa\x43\x0e\xec\x9f\xdd\x24\x11\x82\xf4\x95\x19\x93\xd3\xf1\x75\xf3\xc6\x19\x10\x1d\x5f\x0b\x2d\x9c\x4d\x8e\x62\xf4\x72\x2c\xb6\x07\x87\xc3\xf2\xea\xcf\x1c\x8d\xd2\x55\xe1\x70\x01\x0e\xd7\x22\x63\xba\x92\x67\x00\xec\x33\x8f\x4c\x77\xf5\xed\xce\xb1\x75\xc8\x2d\xc5\xa2\x93\xe2\x37\xfe\xe9\x17\xe2\xe9\x89\xda\xab\x93\xdc\x64\x99\x11\xe0\x39\x07\xbc\x7c\x81\x71\xbc\xb8\xdf\xe1\xa1\x2b\x5c\xcf\x08\x7a\x55\xa8\xcb\x19\x4a\x7b\x29\xe8\x16\x5b\x6e\x09\xf7\x2b\x93\xd0\x94\x81\xd3\x9f\xbe\x1e\x1b\x0a\x71\x15\x9b\xcb\x58\xd9\x03\xa3\xdd\xf5\x35\x94\x22\x07\x7b\x93\xe8\x89\xb9\xc6\xb6\x5c\x63\x77\x88\xc2\xd5\x85\x19\xd3\x26\x18\xcd\x63\x33\xd2\x7f\x63\x30\x3c\x0d\x5c\x3b\xde\xbd\x15\x9c\x67\x74\x0c\xdc\xa1\xe1\xf0\x04\x9c\x66\xf0\x78\x2b\x46\x62\x72\x0c\x5f\x38\x93\x9c\x06\xcb\x77\xff\xb7\x22\x73\x7c\x46\xe0\x2c\x8a\x9c\x97\xbd\xe3\x31\xfc\x11\x2e\x9d\x30\x57\x40\x28\x09\x4d\x67\x5f\x46\xf3\x42\x28\x45\xa5\x2a\xcc\x98\x2b\xf8\x59\xcd\xfd\xf4\xaa\x92\xbf\x54\xa2\x1c\x22\xc2\x7f\x71\x3c\xb8\x2c\xa2\x52\x98\x95\xbd\x79\x05\x6b\x00\xac\xa8\xe1\x33\x97\x38\xe1\x44\xc6\x60\x85\xb6\x2a\x83\x79\x4d\x64\x67\x35\xce\x40\x4a\xd4\x32\xb9\xbb\x6d\xbb\xe6\x99\x33\x8b\x31\xd2\xc1\x1a\xdb\x89\xb3\x4a\xde\x74\x63\x73\x25\x55\xab\x28\x15\x1a\xd6\xdb\x6a\xa7\x4f\xba\xdd\x8a\xa5\xa0\xf6\xe0\x62\x1b\x54\xba\xe6\xd4\x54\x4e\xd7\x7a\x24\x36\x72\x3c\xc2\x6b\xaf\xb9\x47\xfb\x04\x7a\x34\xfb\xf1\xf0\x5a\x4c\xd7\xb3\x1e\x33\x57\x8c\x69\x02\x3e\x94\x7b\x92\x2b\xea\xc2\x57\xd7\x93\xaf\x17\x23\x8e\xb1\xbd\x72\x83\xad\xe1\x16\x27\x1d\xb6\x19\xe4\x71\xbb\xc7\x12\x9c\x3d\xd3\xb5\x21\x75\x2b\x27\xd4\x02\xfa\x4b\xf1\xbe\x62\x32\xc4\x1a\x69\x7e\x35\xf3\xb7\xfb\x89\x6b\xa4\x55\xe0\x89\xa4\x7c\xc5\x6c\xf3\x7e\x48\x5a\x92\xc8\x7a\xa2\x59\x40\xdd\xdd\xde\x44\x89\x41\xb3\x64\x29\xdf\xed\xbb\x58\x39\x1c\x29\xe3\x3a\x62\xf8\xc5\xfb\xb8\x2b\x23\x7d\x84\xe1\xad\xef\x10\xc4\x8e\xc6\x79\xdc\x28\xec\xcd\x9a\xdc\x95\x0b\x1b\xef\x78\xfb\x7b\x4f\xe4\xc8\x2e\x86\x21\xf2\xf0\xdb\xde\x55\x21\xc7\xd4\xc2\x0f\x6e\x40\xfd\xfa\xd0\x9d\xb5\xfd\xdb\xb7\xa9\x7e\x02\xf9\xa7\x91\xa9\xdc\xe9\x26\xbf\x73\xd2\x26\x94\xd3\xcd\xd7\xaa\xed\xd9\x93\xe9\xd1\x36\xe3\x2e\x33\x7a\xfd\xfc\xdb\xe9\xe0\x39\xf8\x4c\xf8\xf7\x02\x0a\xdd\xa5\x40\x00\xa4\x97\x05\x85\x1e\xe7\x40\x4f\x72\x6f\xe7\x26\xcf\xb1\x38\x09\x9c\x51\xfe\x8b\x0a\x8e\x13\x23\x7c\xbc\xe9\xb2\xc3\xc5\xd9\x90\x80\x62\xee\xd4\x21\x65\x22\x1a\xde\x33\x36\xfc\x94\xd0\x8f\x0d\xff\x3a\xf5\x7e\xb1\x11\xca\x39\x39\x36\xda\x59\xc8\xc7\x46\x7f\x9a\xfa\x76\x68\x78\x06\xef\x10\x1a\x3d\xc9\xff\xdf\xd0\x08\x1e\xfc\x7e\x64\x68\xb8\x11\x28\x18\x2f\xc2\x97\xde\x36\x32\xda\xd7\xaa\xef\x1c\x31\x3a\x31\x93\xf3\x45\x14\x0a\x5d\xc0\x73\x55\xe5\x76\x88\x98\x1c\x06\xdb\x67\xea\xde\xfc\xd7\x29\x89\xf5\x9b\xa1\xea\xce\x2e\xeb\x05\x60\x21\xbf\x9a\xb2\xb8\x67\xf4\x14\x60\xfa\xda\xd9\xcb\x9c\x24\x3b\x9d\xae\x27\x35\x55\xa7\xc6\x47\x86\xfd\x24\x3a\xa2\x86\x7f\x93\xef\x69\x71\x84\x0c\x82\x37\xfb\xcf\x7c\xf3\x50\x35\x9a\x3d\xe7\xdc\x3d\xdf\x8f\xe1\x25\xe6\xc7\x92\x31\xc7\x05\x89\xeb\x46\x5e\x2a\xc6\x83\x11\xfc\x98\xc9\x8f\xff\xdc\x72\x64\xae\x1f\x3c\x09\x1e\x15\xf3\x14\x8c\x21\x2e\x59\xba\x97\x42\xfb\xab\x53\x90\x2a\x13\xaa\x3b\xa3\x4d\x68\x3f\x7d\x95\x88\xfb\x09\x73\x3a\xb2\x1f\x08\x66\xe2\x15\x37\xcc\x5c\x33\x46\x07\xbf\xd5\x91\x1f\xda\x5b\x81\xae\x70\xde\xa1\x7d\x4a\x5e\xfa\xb1\xa8\x42\x99\xf0\xe9\xcb\x97\x7b\x3a\x4a\xcf\x95\xcf\x9c\x1e\xf5\x33\xc8\x84\xe4\xa9\xce\xb7\x74\xb7\x37\xae\xfc\x1b\xdd\x4d\xca\x9b\x32\x33\x02\xa2\xf9\xd5\x1f\x2e\x2f\x2f\xf1\x9a\xc2\x6a\x61\x47\xf7\x08\xef\x2b\x67\x5e\x2e\x30\x0d\x7a\x65\x65\xd7\xdd\xb0\x0e\x9b\x3a\xa6\xcc\xb8\x3c\x98\x17\xe3\x54\xfb\xd6\x4f\x6e\xde\x11\x34\x01\xba\x93\x11\x3d\x7f\xfc\x2f\x00\x00\xff\xff\x11\x72\x87\xb2\x3f\x1f\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 7999, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5d\x6f\x9c\x3a\x10\x7d\xdf\x5f\x31\x42\xb9\xba\x10\xed\x25\xef\x57\xca\x43\x9a\xb6\x6a\x54\x35\x89\xb2\x95\x2a\xf5\xcd\x0b\x03\xb8\x0b\x36\xb5\x4d\x36\x5b\xe4\xff\xde\x31\x86\x85\xdd\x4d\xf3\xd9\xbe\xf5\x09\x33\x9e\xaf\x73\xce\x8c\x6b\x96\xac\x58\x8e\x50\x31\x2e\x66\x33\x5e\xd5\x52\x19\x08\x67\x00\x41\xce\x4d\xd1\x2c\xe3\x44\x56\x27\xb9\xfc\x4f\xaf\x59\x9e\xa3\x9a\x1e\x51\x29\xa9\x74\xf0\x24\xdf\xc2\x98\x7a\xc5\x4d\x30\x23\xef\xb6\x55\x4c\x50\xc9\xf8\x2d\x66\xac\x29\xcd\x45\x57\x54\x5b\xdb\xb6\xb5\xe2\xc2\x64\x10\xfc\xf3\x3d\x80\xd8\xda\xce\x19\x45\xda\x9f\x7c\xd8\xd1\x0a\x37\x73\x38\xba\x65\x65\x83\xf0\xff\x29\xc4\x93\x78\x77\x67\x2d\xb9\xc2\x34\x93\xf7\xdd\x49\x17\xcd\x66\x27\x27\xf0\xb9\xe0\x1a\x32\x5e\x22\xd0\x57\xb3\x0c\xc1\x48\xc0\x94\x9b\x18\xae\x44\x42\x56\x03\x78\xc7\xb5\xd1\xee\xb4\x96\xe2\x5f\x03\x4b\x04\x79\x8b\x6a\xad\xb8\x31\x48\x8c\x65\x8d\x48\x20\x91\x22\xe3\x79\xa3\xf0\xec\xfa\x22\x64\x35\x87\xe3\xb6\x8d\xaf\x3d\xb3\xd6\xc6\xf4\x73\x56\xd7\x97\xac\xa2\x1f\xf2\x88\xa0\xa5\x4e\xa8\xfc\x36\x0c\x4c\x81\xe0\xe2\x0a\x54\x48\x77\x74\x8c\x17\xa8\x6e\xf1\x9d\xa3\x18\x4e\xc1\x53\x3d\xb1\xed\xf0\x78\x2e\x85\x6e\x2a\xec\x18\xe0\x59\x47\x48\x89\x15\x0a\xc3\x0c\x97\xc2\x5a\x97\x8e\x7a\x38\x2f\x99\xd6\xbe\x8b\x3e\xc2\xa5\xa6\x8b\x7d\xff\x30\xf2\x4c\x95\x1a\x1f\x09\xee\x65\x1d\x3a\x50\xef\x89\x8d\xd0\x51\x12\x2a\xe0\x32\xbe\x41\x96\xa2\x9a\x83\x61\x2a\x47\x03\xa4\x08\xaa\x8c\x25\xd8\xda\xc8\x43\xea\x98\x00\x50\x68\x1a\x25\x06\x94\x97\xd2\x6c\x3b\xc2\x34\x0c\xa8\xba\x2f\xec\x08\xf3\x95\x0b\xa6\x41\x48\x03\x1b\x74\x8a\xa0\x00\x3e\x06\x04\xae\x7b\x1b\x4d\x07\x67\x7f\x84\xe2\x6b\x25\xd3\x26\x79\x0e\x63\x7d\xc4\xcb\x18\x9b\x04\x0f\x8c\x0d\xa6\x91\xb1\xb5\x63\xec\x0b\xcd\x95\x63\x2c\x65\x86\xbd\x9e\xaf\x7a\xa8\xfb\x5a\xbe\x16\x98\x34\xd4\xd9\x86\x36\x96\x0b\xee\x30\xeb\xde\xa1\x63\x4f\xbf\x61\x9a\x27\x67\x8d\x29\x3a\xeb\x21\x01\xee\x8a\xc0\x77\x38\x1b\x4d\x0d\x69\x43\xfb\x99\xcf\xa1\x26\x97\xfe\x27\x82\xb0\x5b\x1b\x3a\x27\xbc\x66\xa5\xb5\x73\x8f\x30\xda\x45\x2d\x78\x39\xff\x15\xf4\xa5\xeb\x03\x98\xab\xf6\x38\xe4\x11\xea\x00\x83\x96\xf3\x23\x6e\x9e\x88\xc3\xc8\x15\x65\xfd\x7d\xbd\xbb\xfd\xa7\xe7\xcb\x77\x3f\x6a\x98\x29\x59\xb9\xdf\x85\x6c\x54\xe2\x0c\xcf\x01\x76\xbf\x9a\x57\x35\x2a\xd6\x8b\xe8\xa1\x6f\xdf\xaa\x43\xc8\x1f\x98\x48\xcb\x61\xee\x77\xde\xb4\x43\xa7\x71\x98\x87\xb4\x8a\x55\x54\xa4\xee\xbe\x0f\x25\xf0\x9e\x53\x39\x28\x23\xc4\x8e\x6f\xa9\xf8\x0f\x4c\xc7\x64\xf3\x5d\xd5\x46\x17\xaa\x33\xf0\x0f\x7b\x6a\xf4\x11\x24\x93\x0f\x5a\x34\x09\x6d\xbf\xfe\x24\x53\x2c\x87\x44\x37\x9d\x44\xfa\x5c\x3a\x3a\xef\xae\x96\xdf\x30\x31\xd6\x1e\x6f\x8b\xed\x05\x6d\xdb\xb8\x4f\xe7\xfb\xab\x0c\x86\xaf\xa8\xe4\x7e\x82\xc3\x79\x90\x83\x4a\x93\x61\x78\xc2\x1e\x3f\xf8\x10\xed\x88\xf9\x12\xfd\xfe\x4a\xf6\xc7\x24\xdb\xdb\x57\x3b\xfb\x19\x00\x00\xff\xff\xf9\x55\xab\x19\x9b\x09\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2459, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\x3d\x5b\xbf\x62\x42\x24\x80\x8c\xb5\xe8\x3d\x7b\xe1\x83\x81\xc5\x6e\x5c\x34\x1f\x88\x13\xf4\xd2\x0b\x23\x53\x32\x1b\x9a\x54\x49\xca\xae\x61\xf0\xbf\x77\x86\x92\x1c\x35\xbd\xf4\x62\x4b\x33\x8f\x6f\xde\xbc\x19\xaa\x11\xe5\x9b\xa8\x25\xec\x85\x32\x59\xa6\xf6\x8d\x75\x01\xf2\x0c\x80\x69\x5b\x33\xfa\xb7\x3e\xfd\x19\x19\xe6\xbb\x10\x1a\x96\xd1\x5b\xad\xc2\xae\x7d\xe5\xa5\xdd\xcf\x6b\x5b\xf8\xa3\xa8\x6b\xe9\xc6\x8f\xbe\x91\x65\x82\x9e\xcf\x4e\x18\x2c\xc0\xff\x95\x95\x68\x75\x58\xa7\x12\x3e\xc6\xf3\xb9\x71\xca\x84\x0a\xd8\xcd\x77\x06\x3c\xc6\x04\x96\x66\xdb\x3f\x75\xc7\xae\xdf\xe4\x69\x06\xd7\x07\xa1\x5b\x09\x8b\x25\xf0\xd1\x79\xca\xc5\x88\x50\x18\x33\x75\xd8\x5f\xe8\xa6\x59\x36\x9f\xc3\xf3\x4e\x79\xa8\x94\x96\x70\x14\x1e\x6a\x69\xa4\x13\x41\x6e\xe1\xf5\x04\x61\x27\xa1\x57\x0e\xc1\x5a\xcd\x09\x7f\x27\xde\x30\xda\x3a\x09\xc6\x06\x0c\x83\x3d\x48\x77\x74\x2a\x48\xc4\x0f\x54\xa2\x0a\x78\xe6\x64\xdb\x11\xa1\x0a\xf0\x2a\x4b\xd1\x7a\x4c\x6b\x4d\x49\x07\x72\xab\x82\x87\xa3\x6d\x35\x16\x94\xa0\xad\x0f\x57\x54\x64\x1d\xfa\xa0\x35\xfa\x44\x99\xa1\x48\x90\x06\x54\x95\x98\xe5\x8f\x46\xab\x52\x05\x04\x90\xad\xaa\x3a\x41\x51\x28\x53\xea\x76\x2b\x0b\x1a\x1c\x54\xd6\xa5\x1e\x06\x0d\xa9\x2e\xc6\x7c\xdb\xa4\x81\xe2\x9c\xf6\xc2\x6c\x3d\x56\xac\xed\xe2\x82\x1a\x5a\x7e\x0f\x48\x87\xe5\xa1\x08\xc0\xf9\x9c\x73\x28\x56\xe8\x21\x5f\x35\xcd\xbd\xd8\x4b\xb2\x1c\x15\xf1\x47\x34\xbb\x54\x8d\xd0\xe8\x7d\x51\x34\xc3\x1b\x21\x47\xa9\xc1\xfb\xec\x20\xdc\x50\xe8\xd3\xe6\xe1\x1e\x96\xf0\xcd\x5b\xc3\x9f\xc4\xf1\x4e\x7a\x8f\xbb\x97\xe3\xc1\xcd\x3b\x20\x46\x1c\x57\xd5\x9a\x32\xed\x64\x3e\x85\x33\x4e\xb2\x27\xd8\x60\xfb\x33\x90\xce\xd1\x2a\x90\x17\xfc\x5e\x1e\xf3\x11\xfb\x0c\x18\x9b\x22\x1e\x75\x12\xea\x6a\x09\x46\xe9\xc4\x00\xe8\x79\xcd\xff\x13\x01\xad\x31\x39\x26\x09\x16\x69\x43\x93\x43\xc8\x67\x3d\xff\x5f\xa2\xed\x87\x9c\x3d\x3e\x3c\x3d\x0f\x3c\x29\xbd\x5c\x22\x71\xcf\xd3\x05\x80\xfd\xcd\x06\x86\x1d\x4e\xf3\x03\xc3\xed\xc3\xe6\xc2\x90\xd2\x63\x86\x2e\x40\x57\xac\x14\x9a\x5e\x2e\x4c\xa2\x51\x44\x44\x56\x76\x17\x33\x46\x6a\x71\x3c\x84\xd5\xe3\x3a\x1f\xd9\x41\x35\x4a\x6b\x2a\x55\xe3\xa6\x52\x0e\x29\xa6\x44\xa5\x95\x0f\x34\xd7\x8b\x5f\x78\x83\xf9\xe7\x14\xcc\x59\x28\x1b\x36\xeb\x74\xfc\x05\x6c\xc1\xf0\x97\xda\x9a\x66\x93\x8f\xce\x4d\x26\xbf\xf9\x36\x41\xa9\x93\x6a\x1f\xd2\xb8\x43\x95\x33\x5a\x1b\x65\x6a\x92\x7d\xdb\xe2\xa2\x5d\xb4\x82\x08\x40\x1f\x8d\xc5\x7c\x7e\xe3\xbf\x1a\x2c\x39\xa8\xe2\xab\xed\xd6\xe5\xd3\xa4\xb4\x2f\x89\x12\x09\xcb\x37\xb4\x84\xf9\xbb\x7c\x6c\xa8\x8b\x75\xeb\xb7\xee\x16\xff\x65\x1d\xe3\x17\xfc\x0a\xbd\xac\xfb\x4d\x43\xb2\x7f\xfe\x70\xe8\x31\xfb\x19\x00\x00\xff\xff\xc6\xe5\x03\xba\xf7\x04\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 1271, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\xdf\x6f\xe4\x34\x10\x7e\xcf\x5f\x31\xac\x8e\x63\x53\x85\xf4\xbd\xa8\x0f\xd0\x03\xf5\x1e\x38\x4e\x6d\x05\x8f\xc8\x4d\x26\x1b\xd3\xc4\x4e\x1d\x7b\xb7\x4b\x94\xff\x9d\xf1\x8f\x64\x93\x6d\xba\x42\x40\x2b\x74\x52\xa5\x6e\xe2\xf1\x37\xfe\xbe\x99\xf9\x9c\x86\x65\x0f\x6c\x83\xd0\x75\xe9\x67\xff\xb3\xef\xa3\xe8\xfc\x1c\xee\x4a\xde\x42\xc1\x2b\x84\x1d\x6b\x61\x83\x02\x15\xd3\x98\xc3\xfd\x1e\x74\x89\xd0\xee\xd8\x66\x83\x0a\xb4\x94\x55\x6a\xe3\x7f\xcc\xb9\xe6\x62\x43\x8b\xc3\xbe\x9a\x6f\x4a\x0d\x8d\x92\x5b\x84\xc2\x68\x07\x55\xa2\x80\xbd\x34\xa0\xf0\x5b\x65\x84\x43\x1a\xa0\x21\x93\x75\xcd\x44\x1e\x45\xbc\x6e\xa4\xd2\xb0\x8e\x00\x56\x02\xf5\x79\xa9\x75\xb3\x8a\xe8\xa9\xeb\x14\x13\x74\xd8\xf4\x03\x16\xcc\x54\xfa\xa3\x0b\x6c\xfb\xbe\xeb\x1a\xc5\x85\x2e\x60\xf5\xf5\xe3\x0a\x52\xa2\x60\x83\x51\xe4\xe1\x97\xdf\xf6\xee\x01\xf7\x09\xbc\xdb\xb2\xca\x20\x5c\x5c\x42\x3a\xd9\x6f\xd7\xfa\x9e\x42\x61\x8a\xe4\x63\x67\x70\xb1\x53\x87\xe4\xba\xaa\x58\xdb\x7e\x62\x35\x2d\x5f\xd3\xb1\x2b\x54\x3f\x19\x91\x81\x36\x4a\xb4\xc0\x88\xb1\xc8\x34\x97\x02\x76\x5c\x97\x8e\xa8\x72\x7a\xb4\x7c\x23\x18\x05\x21\x50\x1a\x49\x81\x04\x75\x6d\x88\xf8\x04\x0f\x4a\x0f\x18\xe9\x7d\x83\x27\x72\xd9\x1c\xeb\xae\xe3\x05\x50\xf1\x14\xab\x1d\x93\x69\xb0\x7f\x1b\x8e\xee\x02\x69\x37\xa4\xdf\x1b\x5d\x4a\xc5\xff\xa4\x72\x8e\x1b\x13\x98\x86\x4d\x42\xfa\xfe\xcc\x36\x07\xa9\x92\xf1\x86\x55\x36\xc0\xc5\xc5\x10\x52\xdf\x9a\x2c\xc3\xb6\xfd\x59\xe6\x58\x0d\xdb\x6f\xd0\xe9\x70\x25\xeb\xa6\xc2\xa7\x5f\xee\xff\xc0\x4c\x3b\xa0\x90\xe2\x68\xd3\x98\x1c\x95\x92\x8a\x24\xb6\xcc\x60\x5d\x88\x97\xc9\xc7\xe0\x1f\x8e\xf8\x37\xee\x3f\xbc\x86\x0c\xcd\x20\x01\xbc\xb9\x20\xd0\x51\x07\x2a\x07\x01\x85\x58\xa4\xfc\x9f\xb1\x1b\xd8\x44\xfd\xcb\x9d\x6e\x7b\x17\x55\xc1\x32\x9a\x6c\x49\x26\x50\x32\x0d\x19\x13\xa1\x6f\x81\xa6\x86\xe7\x8b\x8d\xed\xcf\x7a\xa2\xaf\x27\xc8\x96\xf3\x62\x8d\xbf\x8c\x1e\xf7\xf2\x7e\xc2\xdd\x9c\x0e\x64\x0a\xc9\x0d\xad\x85\x08\xdc\x81\xf5\xbe\x74\xd0\xc6\x6b\x8d\x8b\xca\xca\xc6\xba\x28\x19\x8e\x9f\x9d\x67\xb8\xeb\x4c\x3f\xc1\x59\xcd\x73\x42\xda\x31\x85\xe9\x95\x24\xa5\x9f\x74\x32\x98\xcd\x72\x3d\x62\xd7\xec\xd3\x44\x93\x56\x7c\x3f\x5f\xea\x02\xe4\x05\x50\xae\x24\xd4\x4e\x5d\x0c\x09\x7a\x4b\xd9\x4b\xf7\x41\x66\xb7\x9a\xd4\xde\x38\x9d\x66\x4f\xde\x65\x17\x1a\x04\x5a\xad\x4c\xa6\x5d\xfe\x90\x68\x89\x8f\xb3\xea\x69\xb7\xf8\xff\xb0\x68\x09\x07\x5f\xbf\x3e\x25\x82\x3d\xb8\x77\x24\x5a\xbe\xc1\x0c\xf9\x16\x55\x38\xd5\x91\x3c\x31\xdc\xa2\xda\xe2\xf5\xdd\xdd\xe7\xb5\x0a\xe5\xbb\xc1\xb6\x91\xa2\xc5\xdf\x14\xa7\xde\x4e\x40\xc1\x59\x78\xff\x68\xb0\xd5\x61\xba\xa5\xd1\x98\xc0\xef\xf6\x62\x7a\x96\x65\x20\x97\xde\xd8\xa8\x8f\xa2\x90\x6b\xeb\x92\x03\xd5\x69\x23\x1b\x37\xc8\x09\x50\x97\x9d\x86\x1a\x37\xad\xed\x91\x2c\x6e\x4c\x80\x04\x67\x77\x7e\x75\x09\x82\x57\xee\x60\x70\xea\x38\x8e\x59\x4e\x4c\x09\x22\xa0\xd0\x18\xc9\xdc\x50\xe3\x27\x03\x27\x02\x8c\x1d\x90\x6f\x1b\xfa\x69\x2f\xd4\x2d\x53\x70\xb0\x54\x47\x44\x48\xba\xf5\xf1\x11\x0e\x93\x08\xab\xd1\x0f\xba\x7e\x15\xcf\xc6\x6b\x32\xae\xfe\xe0\x9e\xfa\xfc\xec\x87\x0c\x97\x3e\xc7\x09\xf8\x41\x3c\x4a\x51\xb5\x38\x3c\xa5\xeb\x23\x6f\x88\x81\xe6\x96\xeb\x6f\x5a\x90\x0f\xfe\x73\x87\xfe\x68\x68\xab\x6a\xef\xaf\xf3\xe7\x3e\xe2\x28\xcf\xbe\x49\x82\xce\x27\x2b\xf4\x03\x17\xf9\xaf\xd6\x4a\x43\xa3\x8c\x85\x4a\x8e\x5a\xfc\xfd\x73\x8c\xd1\x15\x1d\x13\xd2\x63\x70\xb4\xef\x66\xf5\xb5\x54\xee\x29\xcd\x60\xcc\xaf\x55\xee\xc5\x56\x1d\x5f\xce\x8d\x52\x59\xac\x83\x57\x2e\xc6\x5c\x84\xf5\x25\xf9\xc2\xd0\xa6\x2f\xdd\x1d\x8b\x4a\x8d\x19\xc7\x86\x71\x65\x66\x99\x36\xae\xb0\xe1\x66\x73\xdf\x71\xbe\x1a\x6f\x38\x2c\xd1\xbf\x87\x7d\x41\xe8\x85\x06\xf1\x6d\xea\xde\xfe\xcd\x02\x2d\x36\xf1\x3f\xaa\xc2\x78\xed\xfe\x6f\xa4\x7f\x7b\xe5\x9d\x41\xf4\xd1\x5f\x01\x00\x00\xff\xff\xf6\x60\xe1\x76\x99\x0d\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3481, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x5b\x53\x1b\x3b\x12\x7e\xf7\xaf\xe8\x75\x25\x29\x9b\x38\x03\x0f\xa9\x7d\x48\x96\x7d\x08\x21\x1b\xaa\xb2\xa9\x2c\x24\xbc\x24\xa9\x2d\x31\x23\xdb\x2a\xe6\x86\xa4\x01\x1c\xca\xff\x7d\xbb\x25\xcd\x8c\xe6\x0a\x66\xa1\xce\x79\x38\xf1\xe8\xd2\xfa\xba\xfb\xeb\x8b\xc4\xdd\x5d\xc4\x97\x22\xe5\x30\x55\xb1\x08\xf9\x35\x8b\x45\xc4\x74\x26\xa7\xdb\xed\xe4\xee\x4e\x2c\x21\xf8\xca\x79\xa4\xce\xc4\x1f\x6e\x46\x82\x6f\x4c\xb2\xe4\x2b\x4b\xf0\x93\x06\xe1\xdd\x21\x88\x54\xff\xfd\xed\x2c\xe6\xe9\x0c\xe7\xcf\x59\x5c\xf0\xe3\xdb\x5c\x72\xa5\x44\x96\x6e\xb7\xf3\x39\x6e\xe3\x69\x54\x09\xfc\xb7\x48\x4f\x34\x4f\x14\x0e\xe0\x27\x97\x92\x64\xb8\x83\x79\x35\x3b\x33\x67\xe9\xf5\x76\xbb\x80\x29\xfe\xfe\x92\x85\x4c\x1b\x81\xd3\x05\x74\x71\x98\xb1\x5a\xf2\xfc\xbd\x11\xfc\xb7\x43\x48\x45\x0c\x77\x13\x00\xc9\x75\x21\x53\x1a\x9d\x6c\xdb\x80\xd8\xed\x18\x20\x37\xfb\x28\x40\x95\xe4\x9d\x00\xfd\x48\xc5\x55\xc1\x47\x30\x79\x0b\xee\x83\xd5\xf5\xc7\x2e\x48\x8e\xd3\x22\xe9\x87\x40\x33\x3b\x9f\x6d\x46\xad\xcc\x07\xc3\x30\xff\xd6\x34\xcd\x65\x96\x73\xa9\x37\x3d\x4c\x3d\x51\xdf\xa4\x48\x84\x16\xd7\x9c\x76\xa0\x75\xf2\x18\xa1\xd2\x1e\x37\x5c\x6f\x82\x80\x96\xf8\xaa\x9e\xa8\xa3\x42\xe9\x2c\xf9\x94\xc9\x84\x69\xcd\x65\x53\x46\x68\x26\x97\x66\xf2\x1e\x31\x59\xaa\x19\x62\x6d\x09\x68\xc5\x57\x73\x67\x4b\xc9\x0b\x91\x46\x15\xe8\x69\xdf\x0a\x23\x8d\x96\x71\xcf\x00\x48\x41\x9e\x6a\x5a\x16\x9c\xe0\xcc\xed\x39\x43\x0c\x21\xb9\x4d\xdd\xb0\x55\x70\x96\xc7\x42\x7f\xd8\x58\x05\xad\xef\x68\xbd\xbf\xf6\x67\xdf\xe8\x6f\xeb\xdd\xa3\x2c\x8e\x79\x48\xfe\xb5\x12\xd0\xcb\x26\xb4\x63\xc5\xfb\x8e\x94\xec\xa6\xd6\xcf\x9b\x54\x7f\x0c\x20\x0c\x91\xc9\x35\x93\xd0\x98\x33\x9f\xdf\x37\x39\x6f\x6f\x3a\x77\xb4\x3b\x8e\x79\x82\xe0\x48\xc2\xb2\x48\xc3\x59\x63\x11\x25\x22\xc3\xb0\xa3\xb5\x88\xa3\x2e\xfb\xea\x29\x7b\xc4\x1c\xf6\x90\x6c\x99\x54\x81\x13\x8f\xab\x0c\x13\x9b\xdc\x69\xf3\x0d\xac\x10\x84\x58\x71\x16\x29\x8c\x9c\x9d\x20\x3b\x9a\xfa\x10\xce\x83\xf7\xad\xb1\x7f\x40\xcb\x1e\xad\x05\xaf\x5f\x3b\x10\xe8\x52\x14\xe8\x20\x77\xe8\x59\x4f\x34\x58\x4f\x3c\xb0\x13\xc8\xc3\x6b\x44\x4e\x3c\xbc\x26\x53\x2c\xca\x18\xae\xcc\xe0\xad\x68\x5a\xd2\xf0\xc0\x23\xc0\x1c\xf1\xb8\x1c\xe0\x05\xac\x1f\xb2\x64\xc5\x93\xd4\x18\x89\x8c\x3b\xab\xce\x18\xcc\x0f\xd3\x96\x37\x6c\xca\x18\xc7\x80\x36\xae\x80\x58\x45\x06\x29\xd2\x54\x68\x8c\x16\xdd\x4c\xd4\xc8\x45\x74\x2a\xb4\x69\x7a\x08\x2c\xcf\x91\xdc\xcd\x53\xe4\x02\x8c\xa5\xe7\x66\x83\x0d\x0c\x23\xee\xd1\x90\x47\xcc\xd1\x83\xba\x85\x7b\x37\xe4\xe3\xa7\x55\x09\x88\xb4\x82\x9a\x64\x8d\x74\xd7\x0a\x1d\x3f\x47\xf9\x41\xf3\x7f\xbb\xd0\xc3\xfd\x1c\x66\xe8\x1e\x52\x26\xb2\x2a\x11\xe7\x2c\xbc\x64\x2b\x6e\xeb\xbe\xf9\x89\xb3\x93\xfd\x7d\xf8\xbe\x16\x0a\x96\x22\xe6\x70\xc3\x14\xac\x38\xda\x05\x15\x8a\xe0\x62\x03\x7a\xcd\x4d\x1e\x5e\x61\xec\xea\x2c\x8b\x03\x5a\x7f\x1c\x61\xe4\xa6\x2b\x9c\x2c\xf7\x25\x62\xb5\xd6\x80\x69\xe7\x9a\x63\x8e\xd3\x46\xd4\x9a\xa7\xb0\xc9\x0a\xd4\xeb\x8d\x2c\xd2\x86\xa4\xf2\x08\x08\xb3\x24\x61\x69\x34\x99\x88\x24\xcf\xa4\x86\x19\x2a\x3d\x4d\xb9\xde\x5f\x6b\x9d\x4f\xe9\x63\x25\xf4\xba\xb8\x08\x70\xe1\xfe\x2a\x7b\xe3\x04\xf8\x3f\x69\xe5\xa5\xd0\x0f\x5b\x4c\xff\x3e\x6c\xa5\x4d\x0f\x3b\x41\xd8\x2f\xfb\x8c\x1d\x81\x1b\x47\x4b\x96\xa2\x6b\x82\x8f\x7c\xc9\x8a\x58\x9f\x18\x73\x28\xe2\x2e\x96\xd4\x54\x2f\x61\xfa\xf2\xca\x94\x5f\x1b\xa5\x69\xe4\x7e\xd9\x6d\x2f\x2e\xf9\x66\x01\x2f\x4c\x1c\x13\x41\x03\x6f\x3f\xcd\x99\x32\x02\xbe\x24\xbb\xb6\x21\x6e\x6e\xb8\x40\x54\x8a\x99\x52\xb6\x29\x34\xfd\xa1\x42\x37\x99\x70\x51\xc0\xe2\xd8\x38\xf2\x22\x2b\xd2\x08\x72\x3b\x4b\x15\x84\x06\x71\xeb\xe7\x02\xdd\xe9\xed\x07\xaa\x43\x26\x7d\x92\x6c\xbd\xc9\x45\x88\x22\x0c\xad\x30\x22\xb1\x66\x43\x76\x61\x02\x31\x82\xa5\xcc\x12\x60\x40\x56\x09\x4e\x39\x76\x8a\x4a\x4f\x70\x03\xef\x47\xa4\xb4\x2c\x42\xed\x6a\x8e\xb3\x9d\x9d\x2a\xeb\xc9\x47\xae\x42\x29\x72\x9b\xba\xad\x62\x8d\x21\xdf\x8a\xc1\x37\x57\x30\x1d\xea\xba\xa0\xd7\xe6\xb1\xa1\xf2\x01\x33\x83\x43\x87\x46\xd0\x6b\xa0\x54\x81\x76\x41\x6b\x94\xde\xc7\x2f\xe4\xbc\x59\xb2\x00\xa1\x01\xa1\x17\x09\x8e\xea\x35\xd3\x44\xf8\x3c\xe6\xb7\x14\x3a\xe9\x4a\x81\xa0\x2f\xd3\x1c\x30\x70\x89\x84\x5d\xc4\x7c\x86\xea\x2d\x13\x8d\x76\x58\x09\xfc\xb9\x99\xdb\x6a\x45\xbd\x02\x97\x4b\x16\x72\x82\x42\x66\x57\x46\x80\x4d\xe0\x8a\x0e\xbb\x11\xe8\xa1\x02\x6d\x8b\xdb\x98\x09\xca\x84\xeb\x75\x16\x01\xd9\x5d\x4d\xa8\xff\x00\x4a\x1f\xa7\x3c\xe4\x58\x7c\xa5\x53\x78\xaf\xcf\xc8\x73\x5f\xdb\x99\x84\x3d\xdf\x37\x0b\x90\x59\x81\x11\xbc\x97\x88\x28\x8a\xf9\x0d\xfa\x12\x6f\x0e\x3a\x5c\xf3\xe8\x94\x26\x4a\xc8\xe4\x21\x6a\x99\xb0\x72\xc1\xcf\xdf\x66\xac\xec\x13\x82\xcf\x4c\xfd\xa7\xe0\x72\x53\x3a\xee\x4a\x99\x1e\x2c\xf8\x71\xfa\x25\x30\x13\xb3\xba\x28\x81\xdb\x40\xad\x44\xb9\xde\xf3\x4e\x1f\x0f\xca\x73\xd2\x4c\x77\x5a\x5c\xdb\xf5\xd6\xa7\x6f\xb7\x8d\xf4\xde\x34\x4f\x40\x4e\xee\xb0\x64\x76\xa5\x82\x7f\x71\x5d\xdf\x27\xe6\xce\x26\x81\x6d\x77\x54\x7f\x8d\x56\x75\x1a\xc7\x0f\xd3\xdf\xcc\xab\x7a\x5d\x69\x8a\x0d\x12\xca\x7c\x34\x34\x8b\xc3\x1a\xe2\x39\x41\x7e\xe6\x0c\x0b\xe5\xe3\x61\x06\x56\xc0\x73\x42\xac\x08\x53\xbb\xfd\x13\xd6\xa7\x6a\xc8\xbf\x03\xb7\xef\xc4\x16\x5d\xd5\x83\x4a\x83\x88\x76\x7b\x60\x07\xbb\xcc\x1e\x80\xd4\x70\x7e\xe5\x37\xb3\xb7\x07\x07\xd8\x4b\x4a\x94\x4e\x65\xd4\x54\xd0\x5f\xd3\xe6\xd1\xbf\xa6\xb0\x64\x38\x11\xbd\x83\x97\xd7\x53\xab\x9e\xd1\x0f\x8c\x6e\xf6\x90\xae\x9d\xbb\xb9\xec\x10\x5c\xa1\x09\x08\xf8\xdd\x47\xcc\x30\xef\xa0\xad\xb6\x55\xb4\x3d\x6e\x47\xb7\x0d\xab\x3e\xce\xcd\x64\x37\xd3\xc3\x3e\xad\x97\x5d\x77\x57\xe5\x71\xcf\xed\x4f\x1e\xed\x3d\xb7\xd1\x9e\x04\x30\x74\xe7\x7c\x3a\x4a\x53\xa9\x69\xd2\xfa\x49\x74\x19\xf2\xd1\x33\x2a\xe4\x7b\xaf\xaa\x09\x27\xea\x43\x16\x95\x5e\x6a\x5c\x9c\xec\x79\xe8\x57\x2a\xa7\xb2\xfc\x81\xc0\x69\xc3\x02\x5e\x3d\x20\x18\x1e\x8c\xd2\x05\x2a\xc2\x50\xfc\x98\x3e\x67\xad\xf0\x9c\xf6\x5d\x0e\x87\xc3\xb4\xc3\x49\x2a\xde\xff\x6d\xdd\x5f\xba\x65\xd9\xbc\x48\xa4\xb6\x65\xbf\x37\xd0\xcb\x7b\xc4\xc0\x3d\xa5\x2b\xa2\xbc\xb9\xcc\xee\xf5\xe4\xa8\x37\xed\x7f\x17\x98\xcd\x2e\xdd\xd7\x76\x52\xff\xff\x21\x59\xa3\xa3\xcb\x4e\xd0\x46\x80\x55\x10\x5c\x86\x70\x3c\xf3\x12\x86\xfb\x85\xe8\xe8\x29\x18\x77\xcf\xe1\x9f\x70\xd0\xfb\x52\x70\x84\xad\x5b\xa6\x84\xe6\xf5\xc3\x8b\xa5\x06\xee\x0a\x82\xa0\x24\x76\xf3\x75\x05\xdb\xee\x17\x61\xd9\x58\x99\xd6\xbc\x6a\xb3\xc0\xbc\x17\xb5\x7b\x16\xbf\x63\xf1\x23\xa1\x7a\x59\xf1\x9e\x4e\x7a\xdf\xff\xc6\x7a\xbc\x1a\x4a\xdd\xe3\x0d\xa4\x6c\x76\x43\x2d\x24\x96\xa7\x05\xd8\xf7\x43\xd3\x73\xf7\x35\xa5\xd5\xbb\x0f\x65\xa6\x99\x83\x5e\x75\x2f\x73\x30\x1d\xa3\x90\x3c\xf2\x49\x50\x3d\xc9\x96\x93\x67\xe6\xb0\xd1\xc7\x59\xc4\xf4\xc0\x67\x8f\xda\xc1\xe6\xd2\x3f\xf6\xa6\xe4\xbd\x26\x91\xfc\xc7\xbc\x19\x8d\xbe\x16\x55\xef\x44\x4e\xba\xbb\x70\x74\xdf\xf9\x0e\x6d\x17\xef\x15\xda\x81\x65\x28\xa8\x47\x49\x6c\x8d\x6b\x5e\xaa\xf1\x78\x2b\x8d\xdf\x75\xfb\x72\x2c\x9b\x0f\x9a\xb9\x41\xf9\xa1\x2a\xfc\x74\xbc\xfc\xf9\x7b\x07\x66\x2a\xf7\xf7\x1e\x13\xde\xe4\x82\xca\x62\x0d\x5a\x9a\x65\x87\x87\x03\xa1\x5f\x2e\x1d\xf1\x76\xab\xae\xd5\xc7\xb8\x1b\xfd\xb9\xbd\x6f\x47\x7c\x79\x5e\xde\xd2\xfb\xdf\xb7\x9b\xeb\x47\x5e\xb1\x0d\x53\x6b\xdc\xaf\x5e\x19\x1d\xcb\x03\xfc\x3c\x36\x40\xa4\x72\x69\xb3\xb7\x1b\xb0\x04\x3a\xd7\xcf\xa3\x63\x8f\x66\xdb\x11\x8e\x37\x5f\xae\x7c\xf6\x9e\x91\x8c\xbf\x88\xc2\x3d\x1c\xae\xff\x3a\x42\x49\xb7\x19\x5d\x03\x78\x77\x65\xf8\xbd\x3a\x8c\x67\xdc\xf1\xe7\xfe\xde\xc0\xf4\xff\x70\x53\xfd\xfb\xbf\x00\x00\x00\xff\xff\x0f\xb8\xb8\x68\x4e\x1d\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 7502, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x90\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\xca\xe5\x09\x92\x9e\x9a\x12\x28\x00\x21\xca\x58\xf6\x06\x16\xd9\x5e\x63\x6f\x24\xc2\x29\xff\xce\x26\x07\xe1\xf2\x07\xd7\x59\x33\x6f\x66\xe5\x39\x1e\xc1\xe3\x40\x09\xc1\x54\x29\xa3\x93\x81\x30\x78\x03\xf3\xdc\x1d\x40\x4d\xc1\x98\x83\x15\xb5\x3d\x3b\x25\x28\xbd\x19\x68\xd5\xde\x79\xb9\x70\xc6\x22\xd3\x8b\x0d\xe4\xad\x10\xa7\x5b\x76\x4f\x7f\xf4\x3c\xc3\xa1\x6b\x34\x90\x6d\x75\x4a\x7c\x23\xb4\x0f\x36\xa2\xea\xbb\x96\xea\xde\x31\xda\xe7\x29\xe3\xe9\x04\xf4\x1f\x95\xd3\x8d\x51\x68\xe5\xd7\xab\x34\x40\x62\x81\xf6\x11\x3f\x47\x2a\xe8\x55\xbc\xe2\x48\x4b\x8b\x4c\x4a\x62\x5a\xa4\x25\xa3\x64\xfb\x7a\x7f\xf7\x9b\x84\xaf\x18\x4e\x55\xff\x9a\xd9\xf8\xbe\xd9\x9e\xcd\xd9\x24\x32\xe6\x80\xdb\x22\xcd\xe5\x4c\x72\x6d\x7a\xe8\x3a\x70\x63\x15\x8e\x50\xb1\xd0\x5a\x52\xce\xbe\xf1\x13\x00\x00\xff\xff\x79\x1e\x8a\x65\xda\x01\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 474, mode: os.FileMode(420), modTime: time.Unix(1441640464, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441640243, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4f\x6f\xda\x4e\x10\xbd\xfb\x53\xcc\x2f\x8a\x22\xfb\x57\xcb\x11\x3d\xa6\xa2\x52\x0f\x3d\x50\x09\x5a\x25\x6d\x2f\x08\x55\x03\x1e\x87\x8d\x96\xb5\xb5\xbb\xa6\x50\xcb\xdf\xbd\xb3\xbb\x06\x4c\x30\x6d\x73\x88\xf0\xfc\x7b\x6f\xde\xcc\x4e\xd3\x40\x4e\x85\x50\x04\x37\xb6\xae\x24\x3d\x91\x16\x28\xc5\x2f\xd2\x37\xd0\xb6\xd1\xfd\x3d\x7c\x53\x1b\xd4\x66\x8d\xf2\xd3\xd3\xe7\x19\xd4\x87\x2f\x03\x76\x2d\xf8\x9f\x4b\x02\xbb\xaf\x08\x0a\x5d\x6e\x00\xc1\x87\xa1\xd6\xb8\x8f\x8a\x5a\xad\x20\x6e\x9a\xec\x91\x56\x24\xb6\xa4\x67\xb8\xa1\xb6\x85\xff\x19\xb5\x42\xb3\xf2\x40\x90\x39\x2b\x83\x25\xe7\x50\x71\x8e\x16\x61\xbe\x58\xee\x2d\x25\x40\x5a\x97\x1a\x9a\x08\x80\x29\x19\x8b\xcf\x04\xa3\x14\x9e\xc9\x32\x0d\x0a\x70\xb0\xac\x2d\xbc\xd4\xa6\x67\xe2\xf0\x2d\xea\x10\x3f\xe2\x5a\x2f\xa6\x54\xd9\x23\xfe\x9c\x92\x31\x6c\x62\xb7\x28\x5c\x69\x78\x18\x83\xf7\x1d\x19\x78\xf4\x14\xee\x42\x6a\xf2\xce\x47\xfd\x37\x06\x25\xa4\x67\x01\xa0\xc9\xd6\x5a\x39\x3b\x7f\xb6\x7d\x62\x6f\xb9\x3d\xae\x9b\x7d\xc8\x73\x61\x45\xa9\x50\x4e\x2c\x6d\x8c\xd3\x33\xf0\x91\x68\xec\x44\xe5\xb4\x03\xa1\x2c\xdb\x38\x9e\x54\x1e\xfc\xfc\x5b\xa3\xe2\x2a\xb7\x22\xdf\xa5\x70\xbb\x45\xe9\xd8\x65\x5f\x74\x59\x91\xb6\x82\x5c\x1d\xae\x2e\x49\xc5\x1d\x39\x78\xef\xb2\x5c\x3c\xbb\x3a\x76\x57\xfb\x0a\x39\xf3\x53\xc2\x22\x85\xc0\x57\x95\xd6\xc3\x65\x13\x33\xab\xa5\xc4\xa5\x74\x53\xb9\x3b\x92\x73\x29\xce\xdd\x1f\x26\x9b\xb3\xb3\x61\xfa\x88\xc3\x40\x07\x54\x7b\xa5\x1b\x2b\x17\xc0\x6f\x87\xd5\x82\x9e\x56\xe3\x5e\x97\x4d\xc3\x9c\x7c\x44\x7b\xa9\xdf\x55\xed\x2f\x64\x3b\x16\x7f\x33\xea\xf8\x15\xbc\x65\x3f\x52\xe8\x54\x0f\x93\xe8\x24\xeb\x05\x3f\x2c\x8e\xed\xb8\x79\xda\x12\xf3\xdc\x21\x33\x54\x25\xd1\xf2\x63\x32\xab\x35\x6d\xf0\x2b\xbf\x8b\x9b\x2b\x64\xfe\x38\x25\xc6\xe7\xe5\xf3\x75\x87\x55\xbc\xd0\x31\x28\xe1\xfe\x98\x47\xf6\x1d\x65\x4d\x1f\x77\x95\xe6\x45\x67\x60\xb7\x17\x63\xc0\xaa\x62\x99\xe2\x61\x7f\x1a\xba\x48\xa2\x43\xa9\x33\x61\x3b\x30\x66\x10\xb5\x91\xbb\x0a\xd3\xde\x4d\xb8\x7a\x11\x78\xbb\xcb\x7f\xbb\x08\x57\x0e\x42\x0f\x25\x4e\x20\x0e\xc7\x20\x0d\xc7\x20\xf1\x5a\xf8\x23\xc1\xfa\xcd\x17\x0c\x46\xba\xc0\x15\x35\x6d\xd3\x7f\x47\xe7\x2f\x67\x10\x28\xed\xb7\x0a\x7f\xdb\xa2\xc3\x8a\x9c\x16\xc4\x29\xfa\x2a\x74\x68\x02\x61\x76\x9e\xf1\x71\x18\xe1\xcc\x6c\x93\x81\x4d\xee\x34\xf7\x9b\x31\xed\x5d\xa5\x84\x47\x70\x8a\xfb\x1d\x00\x00\xff\xff\x84\xe8\x32\x69\xc1\x05\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 1473, mode: os.FileMode(420), modTime: time.Unix(1441640394, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1441640470, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1441640099, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{
		}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{
			}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{
			}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{
			}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{
		}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{
		}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{
		}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{
		}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{
		}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{
		}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{
		}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{
		}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{
			}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{
			}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{
			}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{
			}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{
		}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{
		}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{
		}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{
			}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{
			}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

