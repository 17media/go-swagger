// Code generated by go-bindata.
// sources:
// templates/client/parameter.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/structfield.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\x4c\x85\x2d\x60\x07\x59\xb9\xe7\x16\x29\xd0\x4d\xb3\xd8\xf4\x50\xa4\xdb\x60\x7b\x28\x8a\x82\x91\x46\x12\x1b\x8a\x54\x48\xca\xa9\x61\xf8\xbf\x77\x86\x94\x6c\x2b\x96\x51\x05\x05\x0a\xe4\x64\x8b\x9c\x8f\xf7\xe6\xcd\x90\xdc\x6e\xa1\xc0\x52\x6a\x84\xd4\x29\x99\xe3\xb3\x95\x1e\x6d\x0a\xbb\x5d\x92\xd0\x1e\xea\x82\xfe\xb6\x22\x7f\x14\x15\x02\x2d\x64\x77\xfd\x7f\x36\x58\xad\xe0\xbe\x96\x0e\x4a\xa9\x10\x9e\x85\x83\x0a\x35\x5a\xe1\xb1\x80\x87\x0d\xf8\x1a\xc1\x3d\x8b\xaa\x42\x0b\xde\x18\x95\xb1\xfd\x4d\x21\xbd\xd4\x15\x6d\x0e\x7e\x8d\xac\x6a\x0f\xad\x35\x6b\x84\xb2\xf3\x21\x54\x8d\x1a\x36\xa6\x03\x8b\xef\x6d\xa7\x47\x91\x86\x14\x90\x9b\xa6\x11\xba\x48\x12\xd9\xb4\xc6\x7a\x58\x24\xa9\x46\xbf\xaa\xbd\x6f\xd3\x24\xad\xa4\xaf\xbb\x87\x8c\x8c\x56\xb9\x70\x9d\x50\x7f\xc9\x66\x55\x99\xf7\x7d\x98\x60\xf6\x28\xfd\x0c\x4b\xfe\x9d\x61\x86\xd6\x1a\xeb\xe6\x67\x5e\xad\x85\x92\x05\x11\x99\xe1\x92\x2b\x89\x9a\xb0\xb2\x22\x56\x68\xaa\x7e\xf6\x23\x96\xa2\x53\xfe\x36\x70\x77\xa4\x06\x6d\xb5\x56\x6a\x5f\x42\xfa\xf5\x53\x0a\x19\xe9\xb3\xd7\xef\xe0\xf7\xee\x11\x37\x97\xf0\x8e\x72\x77\x08\xdf\x5e\x41\x36\x0a\xc0\xbb\xf4\x0f\x5e\xc4\xea\xcd\x47\x11\x97\xa4\xfe\x05\x7f\x67\xd7\x4a\x38\xf7\xb3\x68\xd8\xe0\x4e\x58\xd1\x38\x92\x46\x7b\x21\xb5\x03\xa1\x54\x10\xaf\xe5\x75\xa4\xc6\x72\xd4\x09\xe0\x38\x06\xfd\xf2\xce\x0f\x77\xb7\x1c\xb2\x35\x94\x2e\x29\x8d\x0d\x8b\x1c\xf6\x53\x47\xea\x1e\xc7\x06\xd3\xb2\xf0\xd2\x50\x3f\x6c\x5a\x99\x53\xec\xd0\x63\x0e\x41\x58\xea\x19\x6a\x5c\x4f\x6d\x43\x71\x05\x70\x8d\xb3\xcf\xf8\xd4\xa1\xf3\xc9\xc5\x2a\x21\x07\x8e\x3a\x85\xd5\x79\xdb\xe5\x1e\xb6\x09\xc0\xa1\xba\xfd\x1e\x17\x45\x96\x5c\x6c\x97\x5b\xd9\x86\xdc\xbb\x1d\x75\x31\x03\x1c\x2f\x1e\x2a\x03\x71\x4c\x2c\xc3\xf5\x9b\x01\x3c\xaf\xdd\x33\x8a\xc1\xa2\xb7\x8e\x53\xf4\x1b\x4f\xdd\xbd\xe9\x11\x07\x2e\xe8\x7a\x72\x6d\xc4\x12\x78\x0d\x43\x60\x7b\x6a\x65\xa7\x73\x58\x70\xec\xcf\x98\xa3\x5c\xa3\x1d\xf2\x5d\x4c\x4b\xb3\x7c\x91\x6a\x61\x21\x36\xd7\x50\xad\x25\x84\x46\xa6\x7a\x10\xcc\xb5\xe0\x54\x0e\x7e\xff\x23\x2c\x06\xe0\xa3\x0a\xf5\x64\xa8\x46\xda\x78\x6a\x26\x77\x1d\x95\x27\x88\x7c\x3e\x04\xa2\x5c\xc0\x5b\xf7\x4b\x87\x76\x13\x9c\x62\x05\x88\xf4\x13\x2f\x45\x7a\xac\x4d\xd8\x64\xb0\x61\x9f\xbc\x28\x27\xb7\xa8\xcd\x7e\x45\x7f\x70\x5f\xbc\x6c\xf4\xbd\x1f\x05\xbe\x1c\x12\x7e\x34\xb6\x11\xd4\x0f\x36\x4a\x33\xfa\x0e\xf5\xfa\xc2\x2d\x7d\xf3\x77\x4b\xf4\x5c\x54\x70\xc9\xa2\x28\x87\xbd\xc7\xa9\xc1\x76\x4b\x9a\x91\xdd\x77\x01\xd9\x57\x57\xa0\xa5\x0a\x7d\x03\x54\x24\xdf\x59\xcd\xeb\xf4\x39\x08\xcc\xb1\x22\xf9\x3b\xe1\xeb\x31\xf7\x96\x56\x66\x52\xdf\x3b\xbf\x45\xe6\x9f\x50\x14\x68\xc7\xdc\xeb\xb0\x36\x93\xfd\x51\x80\xb7\xc8\x9f\xb3\x1f\xb1\xdf\x8f\xc3\x47\xba\xe6\xc6\x55\xa1\xb3\xaf\x89\x17\xe2\xbc\xc2\xec\x23\xfc\x7b\x59\xa6\x28\xbf\x86\xca\x08\xe2\x4c\x74\x03\xef\xb7\x23\x5a\x3c\x8f\x4f\x3f\x8e\xd4\x3c\x73\xba\x5d\xd7\x52\x15\x23\xcc\x7c\x70\x86\x4b\xd3\xc5\x27\xd3\x81\x32\x9d\xa5\x74\xe3\xd0\x0b\x88\xdc\xf9\xba\xfb\xf3\x12\xd6\xa1\x6a\xe1\x58\x9d\x66\xd2\xa3\x3e\x13\xf0\x0a\x44\xdb\x12\xe0\xc5\xf4\x7e\xec\x80\x53\x88\x8b\xf5\x72\x79\xa2\xf3\x99\x14\x84\x6f\x1a\xd9\xa8\x5a\x73\x4e\x7b\x61\xad\x38\x9c\xf9\xe3\x34\xff\xe1\xd4\xe7\x7b\x31\xfb\x89\xde\x10\x1f\x36\x91\xe3\xd9\x62\xa4\xfc\x0a\x30\x4a\x61\xce\x17\x77\x34\xde\xed\xd2\x65\x96\x65\xaf\x1d\x6f\x7a\x7c\x4e\x8c\xf8\x30\x27\xaf\x63\x3a\x77\x5e\xfe\x5f\xa2\xe7\x46\x22\x8a\xfc\xc1\x14\x51\x9c\x29\x42\xfb\xcd\x73\xe3\x3b\x0f\x43\x18\xe1\xd1\x3f\xca\xa3\x50\x2f\x28\xd2\x12\xbe\x87\x6f\x4e\x5c\xe9\x11\x4e\xbc\xe9\x55\xeb\xe8\x9d\xf3\x25\xbe\xb1\x29\xe5\x0d\xef\xb0\x17\xf3\xef\xc3\xf7\x4e\x04\x80\x9e\x61\xff\x04\x00\x00\xff\xff\xe8\xbe\x6f\x97\x09\x0d\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 3337, mode: os.FileMode(420), modTime: time.Unix(1441639554, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x91\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x8f\x65\x05\x05\xed\xde\x05\x4f\xae\x07\x2f\xb2\xa0\x7f\x20\xb6\xd3\x34\x6c\x9a\xc4\x64\xba\x4b\x09\xf9\xef\xa6\xad\x95\x15\x61\x6f\xaf\xcc\x37\xef\xcd\x6b\xbc\xac\x8f\x52\x11\x52\xaa\x0e\x8b\xcc\x59\x88\xdd\x0e\x1f\x9d\x8e\x68\xb5\x21\x9c\x65\x84\x22\x4b\x41\x32\x35\xf8\x1c\xc1\x1d\x21\x9e\xa5\x52\x14\xc0\xce\x99\x6a\xe2\x5f\x1a\xcd\xda\xaa\x32\x5c\xf7\x7a\xad\x3a\x86\x0f\xee\x44\x68\x07\x9e\xad\x3a\xb2\x18\xdd\x80\x40\x0f\x61\xb0\x7f\x9c\xd6\x08\xd4\xae\xef\xa5\x6d\x84\x48\x49\xb7\xa8\xf6\xd4\xca\xc1\xf0\x6b\xef\x5d\xe0\x98\xb3\x9e\x05\x6e\x05\xca\xd1\x41\xda\x72\xfc\x3f\x26\x25\x1f\xb4\xe5\x16\x9b\x9b\xaf\x0d\xaa\x52\x69\x82\xc9\x36\x45\xdd\x89\x55\xfd\x04\x5c\x73\xde\x1e\x69\xbc\xc7\xf6\x24\xcd\x40\x78\x7c\xba\x80\x53\x9a\x66\x39\x17\x14\x97\x61\x0b\x7b\x3d\x71\xef\xea\x77\x2e\x3b\x6a\xb2\xb9\xfc\x5a\x41\x1e\xfd\xfc\x24\xcf\x46\xc6\xf8\x26\xfb\xe2\x87\xc8\x61\xa8\x19\x49\xfc\xb6\x3e\x04\xe7\x29\xb0\xa6\x38\x6f\x32\xf5\xde\x4c\x3f\x70\xb3\xa0\xad\x26\xd3\x2c\xed\xd7\xfc\x2c\xbe\x03\x00\x00\xff\xff\x29\xc6\x09\x25\xf0\x01\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 496, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x55\x5f\x6f\xe3\x44\x10\x7f\xcf\xa7\x18\xac\x22\x25\x5c\xeb\x1e\x12\xe2\x81\xa3\x48\xa7\xbb\xa2\xab\x74\x94\xea\x5a\x78\x41\x3c\x6c\xed\xb1\xb3\xd4\xde\x75\x77\xd7\x69\x83\xe5\xef\xce\xcc\xda\x4e\x6c\xc7\x49\x53\x10\x4f\x5e\xcf\xbf\xfd\xcd\x6f\xfe\x6c\x55\xc5\x98\x48\x85\x10\x14\x46\xe6\xd2\xc9\x15\xfd\x62\x16\xaf\x44\x26\x63\xe1\xb4\x09\xea\x7a\x56\x55\x32\x81\xf0\x0b\x3e\x96\xd2\x60\x4c\x02\xfa\x45\x63\xe0\x87\x0b\x68\xed\x70\xa3\x9d\x57\x55\x78\x23\xdc\xb2\xae\x4f\x21\xa0\xf3\x67\x1d\x09\x27\xb5\xaa\xeb\xe0\x14\xe8\xff\x77\x91\x95\x78\xf9\x5c\x18\xb4\xd6\x8b\x17\xef\x7c\xac\xaf\x2e\x40\xc9\x0c\xaa\x19\x80\x41\x57\x1a\xc5\xd2\x19\xdf\x8d\x2a\xf6\x18\xc0\x61\x5e\x64\x74\x57\x0f\xeb\x16\x26\x84\x50\xf7\xad\xbb\xb4\x6c\x26\x23\x9c\xc8\xe6\x1a\x31\xb6\xb7\xf2\x6f\xf4\x12\x82\x6c\x44\x7e\x2d\x72\xfa\x65\x21\xa7\x26\x95\xfb\xfe\xbb\x79\x86\x6a\x3e\x09\x7b\xd1\xbb\x8c\x03\xfe\x22\xd5\x15\x21\xb4\xd3\xf4\x74\xda\x97\xe8\x19\xe1\xf0\xb2\x6d\xe4\xa3\xb9\xf2\x80\xc4\xf3\x21\x40\xad\xf6\x5f\x01\xda\x44\x7e\x15\xa0\xdf\x94\x7c\x2c\xf1\x00\xa6\x9e\xc1\xff\xd7\x46\x8c\xe4\x52\x95\xf9\x34\x04\xd6\xbc\xfa\x6e\x2f\x6d\x62\xbe\x0a\xc6\xad\x54\x69\x86\xb7\xd1\x12\x73\x71\xcb\x7d\xca\x2d\x7c\x7e\x0e\xd6\xcb\xc1\x7a\xc5\xe4\x8d\xb3\x44\x1b\x90\x8c\xfc\xed\x3b\xfa\xfe\x08\x7b\xdb\x94\xd4\x6f\xde\x10\x90\xaa\x32\x42\xa5\x08\x61\xc7\x3f\x50\xe0\xfe\x44\xe9\x02\x8d\x5b\xf7\x07\xaa\x37\x4f\xfe\x94\x59\x6c\xf0\x29\xed\x76\x31\xde\xb4\x11\x9a\x5e\xf9\x8f\xf7\x35\xfc\xbc\x8f\x63\xc9\xc4\x8b\x6c\x1b\x64\x93\x38\x5d\xe9\xa5\x9f\x91\xd2\x64\x12\x88\x05\x3f\xad\x0b\x38\x1b\x2a\x59\xf0\x2d\x5b\x78\x22\x00\x8e\x42\x02\xd0\xcb\x99\xc0\xec\x25\x18\x7e\x1a\xde\x36\x2a\xba\x36\x76\x9c\xc7\xb5\x76\xef\xb3\x4c\x3f\xd1\xb2\x0c\xa6\x42\x06\x3b\x6d\xb7\x18\xb4\xce\xf8\xdb\xad\x3a\x7d\xff\x17\x46\x6e\xb0\xeb\xa8\x58\x51\x69\x9d\xce\xa1\x51\x32\xd4\x8f\xc2\x89\xbb\x75\x81\x83\x01\x98\xc2\xc1\x12\x3f\x15\x73\x22\x3d\x17\xce\x1e\xdd\xdc\xdb\x37\x65\xcc\xed\xa6\xb6\x57\xf6\xa6\x5b\xe2\x75\x3d\xac\xc7\xf4\x3b\xd4\xf5\x07\x55\x04\x9a\x00\x1f\x7c\x66\x3f\x7b\x6c\x0e\xcd\x30\x4c\x93\x76\x03\xfc\x60\x10\xad\x9c\x20\xb0\x23\xf7\xd1\xb3\x31\xe5\x47\xa6\xf8\xfc\xab\xa7\x75\xe8\x3b\xae\x03\x3b\x8f\xab\x56\x88\xe8\x41\xd0\x78\xf8\x55\xe3\x8f\x24\xe4\x72\xdd\x2d\xa5\x85\x44\xd2\x68\x3d\x09\x0b\x29\x12\x32\x0a\x1a\xc3\xfd\x1a\xdc\x92\xe6\xed\x49\xa4\x29\x1a\x70\x5a\x67\x21\xdb\x5f\x72\x6b\xa9\x94\x94\x9d\x5f\x2e\xd3\xa5\x03\xa2\x7e\x85\x90\x94\xce\x87\x5a\xa2\x82\xb5\x2e\xa9\x5e\x67\xa6\x54\x83\x48\xdd\x15\x10\xe9\x3c\x17\x2a\x9e\xcd\x64\x5e\x68\xe3\x60\x4e\xf5\x0d\x52\xe9\x96\xe5\x7d\x48\xba\xf3\x54\x9f\xb5\x3e\xfd\x63\xd3\xe2\xc1\x51\xb6\x4b\xe7\x8a\x07\xe9\xce\xbb\x6d\x1b\xcc\xfc\x56\x68\x17\xc5\x47\x4c\x44\x99\xb9\x2b\x7f\xbb\x65\xca\xa8\x15\x94\x4b\x20\xf8\xfa\xb1\x9b\xc9\x8e\xbe\xad\xdb\xc9\x03\xae\x4f\xe1\x64\xc5\xcd\xcb\x8d\x1c\xf6\xfc\x59\xc7\x03\x59\x41\x3f\x52\x63\x3b\x08\xb7\xf0\xd4\x77\xed\xbe\x79\x0d\x6c\xc3\x2a\xd5\xe8\x53\x49\xd4\x7c\xc8\x84\xb5\xed\x7a\x4b\x4a\x15\x01\x2f\x84\x2f\x18\x21\x35\xab\x69\xe4\xf0\x0d\x89\x7a\x76\x0b\x18\xcf\x10\x58\x67\x92\xdc\x91\x5f\x2a\xe9\xb8\x5e\x34\x4b\xc2\x4f\x53\x33\x19\x9f\x84\x6d\x9d\x68\x0a\x9b\xa5\xb7\x12\x86\x4a\x67\xe1\x8f\x3f\xbd\xf1\x80\xb6\x76\xef\x4a\xec\x96\xec\x9e\x18\x83\x59\x1f\xa2\x0e\xbb\x84\x77\xd6\xf8\xfe\xc9\x07\x0f\xe8\x02\x44\x51\x10\x87\x73\xfa\x39\x65\x93\x85\x5f\x9c\xc3\x42\x35\xa7\x06\x02\xaf\x51\xb2\xe5\xad\xf9\x76\x13\xa7\xbf\x2b\x79\xae\xb4\x95\x0e\xb7\xf8\x2f\x59\xc3\x5e\x61\x18\xee\xc6\x6f\xdd\x09\x97\x5f\x41\x70\x12\x75\xf4\xfb\x76\xd8\x14\x03\xfa\x8f\xd2\x80\xb4\x3d\x94\x1d\xaa\xf1\xf6\x12\xae\xf1\x8b\xf4\x1d\x2e\xfa\x8b\x6f\xd1\x6e\x96\xc3\x65\xf2\x4f\x00\x00\x00\xff\xff\xd3\x57\x9a\xc9\xc5\x0b\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 3013, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x5b\x6f\x1b\xbb\x11\x7e\xae\x7e\xc5\x40\x38\xa7\xd8\x0d\x74\xd6\x7e\x2c\x0c\xb8\x80\x1b\x9f\x22\xee\x25\x35\xec\xa0\x7d\x30\x82\x82\xde\xa5\x24\xc2\x7b\x3b\x24\xd7\xaa\x2a\xe8\xbf\x77\x86\x97\x5d\xee\x45\x8a\x14\x3b\xa8\x11\x04\x12\x39\x9c\xf9\xe6\x3e\xa4\x6a\x96\xbe\xb0\x15\x87\xdd\x2e\xb9\xb7\x1f\xf7\xfb\xd9\xec\xe2\x02\xbe\xac\x85\x82\xa5\xc8\x39\x6c\x98\x82\x15\x2f\xb9\x64\x9a\x67\xf0\xbc\x05\xbd\xe6\xa0\x36\x6c\xb5\xe2\x12\x74\x55\xe5\x09\xd1\xff\x9a\x09\x2d\xca\x15\x6e\xfa\x73\x85\x58\xad\x35\xd4\xb2\x7a\xe5\xb0\x6c\xb4\x61\xb5\xe6\x25\x6c\xab\x06\x24\xff\x45\x36\x65\x8f\x93\x17\x01\x69\x55\x14\xac\xcc\x66\x33\x51\xd4\x95\xd4\x10\xcd\x00\xe6\x4a\x4b\xe4\xae\xe6\xf4\xb9\xe4\xfa\x62\xad\x75\x6d\xbe\xac\x84\x5e\x37\xcf\x09\x1e\xba\x58\x55\xbf\x38\x66\xe1\x47\xa2\x7c\x11\xfa\x34\x62\x55\xf3\xf4\x44\x4a\x2d\x97\xc5\x89\x5c\x1d\x84\x8b\x42\x64\x59\xce\x37\x4c\xf2\xf3\xce\x29\x9e\x36\x52\xe8\xed\x7c\x86\xc7\x76\x3b\xc9\x4a\xf4\x58\x72\xcb\x97\xac\xc9\xf5\x9d\xb1\x92\xda\xef\x77\xbb\x1a\x6d\xa4\x97\x30\xff\xf9\xb7\x39\x24\xe8\x47\x22\xe6\x65\xe6\x3e\xd9\x63\x3f\xbd\xf0\xed\x02\x7e\x7a\x65\x79\xc3\xe1\xea\x1a\x92\xe0\x3c\xed\xed\xf7\x48\x0a\x21\x27\x4b\xdb\x63\x17\x9b\x10\xf9\xcc\x37\x18\x36\x37\x75\xfd\x99\x15\xb8\x7f\x73\x7f\x07\xa9\xe4\xe8\x42\x05\x0c\x4a\xbe\x81\x70\x17\x44\xa9\x34\x2b\x53\x3e\x5b\x36\x65\x3a\x71\x36\x22\xdb\xc3\x07\xfa\x3f\xb9\xad\xd2\xa6\xe0\xa5\x8e\xe1\xc3\x50\xc2\xce\xc0\x48\x1e\x78\xca\xc5\x2b\x97\x8e\x39\x2a\xf2\xfb\x01\x25\x11\x02\x10\xbb\x2b\xf0\x9f\x16\x66\x6d\x8d\xd1\x95\x73\xa9\xae\xa0\x60\x2f\x3c\x2a\x58\xfd\x64\xc3\xeb\x2b\x19\x3c\xf9\x64\xb7\x63\x4b\xbc\xac\x64\xc1\x34\xd2\x82\xf5\xb8\x37\xbb\xdd\xcd\xec\x97\x8f\x55\xa9\x10\x30\x52\xcd\x11\xc5\x6d\x7f\x71\xbf\x9f\xf7\x88\xef\x65\x95\x35\xe9\x80\xd8\x2f\x3a\xe2\x3d\x79\x5a\x72\xdd\xc8\x72\xac\xed\xcc\x66\xe8\xc8\x32\xbb\xe4\xae\x5c\x56\xc8\x51\xa5\x52\xd4\x5a\x54\x25\xd2\xea\x6d\xcd\x47\xa4\xa8\x4a\x93\x6a\x63\x4b\x63\xf5\xe0\xaf\xef\x00\x24\x48\xab\x52\xf3\xff\xe8\x8e\xa0\x8b\xe2\xe4\xa3\xdd\x9b\x75\x36\xf5\x54\x07\x8c\x3a\x6b\x0d\xda\xf2\x73\x66\x7d\xe0\x2b\x81\x1f\xb7\xb3\x91\x51\xc1\xf2\x99\x8d\x0c\xd8\x6d\xb4\x39\xd1\xd9\xdc\x1a\xe8\x63\xce\x94\xb2\x7a\xbb\x2d\x89\x66\x25\x49\x84\x95\x91\x72\x76\x11\x51\xe1\x57\x72\xc8\xdf\x79\x26\xd8\x17\xb4\x1a\xba\x02\x6b\x58\xc1\x81\x4c\x68\xa3\x6e\x8a\x9d\x4b\x52\x2f\x5a\x4e\x66\x5d\xd2\xf9\x77\x04\xcc\x6d\xf5\x81\xd5\x7e\xf1\x6c\x60\x2d\x3b\x0f\xcc\x2f\x4c\x03\x7b\x74\xb5\x05\xe3\x50\x94\x82\x82\x46\x39\x02\xb1\xc4\xe2\xa0\xfe\xc4\x94\x48\x6f\x1a\xbd\x9e\x40\x4e\xcb\x3d\xd4\x94\xda\xc4\x02\x0b\x3b\xd3\xa0\x31\xbb\x14\x34\x8a\xcb\x12\xc9\x01\x23\x00\x6a\x3c\xbb\xa9\x64\x66\xbe\xd8\xf8\xb6\xda\x8a\x32\x15\x35\xcb\x51\x30\x4a\x11\xd8\x36\xb8\xa4\x40\xc1\x4d\x94\x81\x81\x28\x52\x66\x18\x6f\xb0\x66\xc2\x33\x61\x32\x3b\x23\xed\x0d\x24\x82\x11\xd9\xe0\x58\xb8\x20\x89\x21\xa2\x52\x72\xef\x05\xed\xf7\x0b\xe0\x52\x56\x32\xee\xcc\xe2\x55\xc6\x0c\xf9\x2b\xdf\xbe\x45\x67\x86\x7d\xf1\x05\x5b\xdd\xf7\x6a\x89\x0a\x62\xab\xad\x88\x01\xb0\x5a\x00\xd6\x65\x82\xe1\x8a\x1d\xb5\x54\x91\x21\x81\xb0\x1d\x14\x77\x1e\xab\x46\xa6\xbe\x46\x1f\xb3\xc7\x29\x76\x98\x0e\x94\x7f\xd4\xd4\x9e\x6d\x7c\x8c\xac\xe2\xd2\x1b\x14\xc7\xcc\x26\x4c\x95\xa7\xf6\x95\xc1\x04\xb2\x43\xfb\xa9\xc1\x06\x1f\x9c\xee\xa8\xdb\xc0\x6b\x87\x91\x69\x39\xe1\xb8\x92\x4c\x92\x58\x25\x72\x75\x8c\xc5\xa1\x53\x23\x23\xa0\xbe\x8f\x5c\xbe\xf2\x5f\xc9\x52\x80\x03\x4e\xca\xf2\x1c\x1d\x60\xe6\x19\xf4\x11\xf7\xeb\xd2\x16\xea\x6c\x41\xaa\x4a\x4e\x4b\xcc\x97\x2d\x6f\x09\xcb\xef\xb9\xd1\x66\x12\x4a\xf1\x38\x5a\x8d\x3e\x4b\xa8\x36\x2e\xc2\x69\x8a\x42\xba\x40\xa8\xe9\x45\xe4\x47\x53\x4e\x1f\xb8\xaa\xd1\x13\xfc\x5f\x98\xba\x5c\x2e\xe0\x83\x5b\xfd\xad\xe1\x4a\xb7\x1e\xb5\x7d\xe2\x91\xeb\xdb\x61\xe1\xf4\x6e\xf2\xd0\x6a\xbf\x53\x50\x91\xb1\x85\xc5\xf4\xe9\x68\xdc\x6b\x87\x2d\x39\x9e\x90\x10\x15\xbe\x58\xb5\xf9\xb7\x9b\xfd\x6e\xc4\x2b\x19\x56\xf4\x6b\x68\x0f\x8e\xd0\xb7\xfd\xc0\x67\x54\xa8\x40\xea\x37\xdf\xa8\x80\x17\x72\xa6\x02\x2d\xb6\xb1\x02\x43\xdb\x4f\xa1\x7f\x9b\xf9\x87\xb6\x8f\x1d\x64\x42\x7c\x68\x86\x18\x5a\xbe\x0f\xf6\x07\x9a\x7a\x68\xe7\x73\xc0\xfa\x43\x0e\xec\x9f\xdd\x24\x11\x82\xf4\x95\x19\x93\xd3\xf1\x75\xf3\xc6\x19\x10\x1d\x5f\x0b\x2d\x9c\x4d\x8e\x62\xf4\x72\x2c\xb6\x07\x87\xc3\xf2\xea\xcf\x1c\x8d\xd2\x55\xe1\x70\x01\x0e\xd7\x22\x63\xba\x92\x67\x00\xec\x33\x8f\x4c\x77\xf5\xed\xce\xb1\x75\xc8\x2d\xc5\xa2\x93\xe2\x37\xfe\xe9\x17\xe2\xe9\x89\xda\xab\x93\xdc\x64\x99\x11\xe0\x39\x07\xbc\x7c\x81\x71\xbc\xb8\xdf\xe1\xa1\x2b\x5c\xcf\x08\x7a\x55\xa8\xcb\x19\x4a\x7b\x29\xe8\x16\x5b\x6e\x09\xf7\x2b\x93\xd0\x94\x81\xd3\x9f\xbe\x1e\x1b\x0a\x71\x15\x9b\xcb\x58\xd9\x03\xa3\xdd\xf5\x35\x94\x22\x07\x7b\x93\xe8\x89\xb9\xc6\xb6\x5c\x63\x77\x88\xc2\xd5\x85\x19\xd3\x26\x18\xcd\x63\x33\xd2\x7f\x63\x30\x3c\x0d\x5c\x3b\xde\xbd\x15\x9c\x67\x74\x0c\xdc\xa1\xe1\xf0\x04\x9c\x66\xf0\x78\x2b\x46\x62\x72\x0c\x5f\x38\x93\x9c\x06\xcb\x77\xff\xb7\x22\x73\x7c\x46\xe0\x2c\x8a\x9c\x97\xbd\xe3\x31\xfc\x11\x2e\x9d\x30\x57\x40\x28\x09\x4d\x67\x5f\x46\xf3\x42\x28\x45\xa5\x2a\xcc\x98\x2b\xf8\x59\xcd\xfd\xf4\xaa\x92\xbf\x54\xa2\x1c\x22\xc2\x7f\x71\x3c\xb8\x2c\xa2\x52\x98\x95\xbd\x79\x05\x6b\x00\xac\xa8\xe1\x33\x97\x38\xe1\x44\xc6\x60\x85\xb6\x2a\x83\x79\x4d\x64\x67\x35\xce\x40\x4a\xd4\x32\xb9\xbb\x6d\xbb\xe6\x99\x33\x8b\x31\xd2\xc1\x1a\xdb\x89\xb3\x4a\xde\x74\x63\x73\x25\x55\xab\x28\x15\x1a\xd6\xdb\x6a\xa7\x4f\xba\xdd\x8a\xa5\xa0\xf6\xe0\x62\x1b\x54\xba\xe6\xd4\x54\x4e\xd7\x7a\x24\x36\x72\x3c\xc2\x6b\xaf\xb9\x47\xfb\x04\x7a\x34\xfb\xf1\xf0\x5a\x4c\xd7\xb3\x1e\x33\x57\x8c\x69\x02\x3e\x94\x7b\x92\x2b\xea\xc2\x57\xd7\x93\xaf\x17\x23\x8e\xb1\xbd\x72\x83\xad\xe1\x16\x27\x1d\xb6\x19\xe4\x71\xbb\xc7\x12\x9c\x3d\xd3\xb5\x21\x75\x2b\x27\xd4\x02\xfa\x4b\xf1\xbe\x62\x32\xc4\x1a\x69\x7e\x35\xf3\xb7\xfb\x89\x6b\xa4\x55\xe0\x89\xa4\x7c\xc5\x6c\xf3\x7e\x48\x5a\x92\xc8\x7a\xa2\x59\x40\xdd\xdd\xde\x44\x89\x41\xb3\x64\x29\xdf\xed\xbb\x58\x39\x1c\x29\xe3\x3a\x62\xf8\xc5\xfb\xb8\x2b\x23\x7d\x84\xe1\xad\xef\x10\xc4\x8e\xc6\x79\xdc\x28\xec\xcd\x9a\xdc\x95\x0b\x1b\xef\x78\xfb\x7b\x4f\xe4\xc8\x2e\x86\x21\xf2\xf0\xdb\xde\x55\x21\xc7\xd4\xc2\x0f\x6e\x40\xfd\xfa\xd0\x9d\xb5\xfd\xdb\xb7\xa9\x7e\x02\xf9\xa7\x91\xa9\xdc\xe9\x26\xbf\x73\xd2\x26\x94\xd3\xcd\xd7\xaa\xed\xd9\x93\xe9\xd1\x36\xe3\x2e\x33\x7a\xfd\xfc\xdb\xe9\xe0\x39\xf8\x4c\xf8\xf7\x02\x0a\xdd\xa5\x40\x00\xa4\x97\x05\x85\x1e\xe7\x40\x4f\x72\x6f\xe7\x26\xcf\xb1\x38\x09\x9c\x51\xfe\x8b\x0a\x8e\x13\x23\x7c\xbc\xe9\xb2\xc3\xc5\xd9\x90\x80\x62\xee\xd4\x21\x65\x22\x1a\xde\x33\x36\xfc\x94\xd0\x8f\x0d\xff\x3a\xf5\x7e\xb1\x11\xca\x39\x39\x36\xda\x59\xc8\xc7\x46\x7f\x9a\xfa\x76\x68\x78\x06\xef\x10\x1a\x3d\xc9\xff\xdf\xd0\x08\x1e\xfc\x7e\x64\x68\xb8\x11\x28\x18\x2f\xc2\x97\xde\x36\x32\xda\xd7\xaa\xef\x1c\x31\x3a\x31\x93\xf3\x45\x14\x0a\x5d\xc0\x73\x55\xe5\x76\x88\x98\x1c\x06\xdb\x67\xea\xde\xfc\xd7\x29\x89\xf5\x9b\xa1\xea\xce\x2e\xeb\x05\x60\x21\xbf\x9a\xb2\xb8\x67\xf4\x14\x60\xfa\xda\xd9\xcb\x9c\x24\x3b\x9d\xae\x27\x35\x55\xa7\xc6\x47\x86\xfd\x24\x3a\xa2\x86\x7f\x93\xef\x69\x71\x84\x0c\x82\x37\xfb\xcf\x7c\xf3\x50\x35\x9a\x3d\xe7\xdc\x3d\xdf\x8f\xe1\x25\xe6\xc7\x92\x31\xc7\x05\x89\xeb\x46\x5e\x2a\xc6\x83\x11\xfc\x98\xc9\x8f\xff\xdc\x72\x64\xae\x1f\x3c\x09\x1e\x15\xf3\x14\x8c\x21\x2e\x59\xba\x97\x42\xfb\xab\x53\x90\x2a\x13\xaa\x3b\xa3\x4d\x68\x3f\x7d\x95\x88\xfb\x09\x73\x3a\xb2\x1f\x08\x66\xe2\x15\x37\xcc\x5c\x33\x46\x07\xbf\xd5\x91\x1f\xda\x5b\x81\xae\x70\xde\xa1\x7d\x4a\x5e\xfa\xb1\xa8\x42\x99\xf0\xe9\xcb\x97\x7b\x3a\x4a\xcf\x95\xcf\x9c\x1e\xf5\x33\xc8\x84\xe4\xa9\xce\xb7\x74\xb7\x37\xae\xfc\x1b\xdd\x4d\xca\x9b\x32\x33\x02\xa2\xf9\xd5\x1f\x2e\x2f\x2f\xf1\x9a\xc2\x6a\x61\x47\xf7\x08\xef\x2b\x67\x5e\x2e\x30\x0d\x7a\x65\x65\xd7\xdd\xb0\x0e\x9b\x3a\xa6\xcc\xb8\x3c\x98\x17\xe3\x54\xfb\xd6\x4f\x6e\xde\x11\x34\x01\xba\x93\x11\x3d\x7f\xfc\x2f\x00\x00\xff\xff\x11\x72\x87\xb2\x3f\x1f\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 7999, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x54\x5d\x6f\x9c\x3a\x10\x7d\xdf\x5f\x31\x42\xb9\xba\x10\xed\x25\xef\x57\xca\x43\x9a\xb6\x6a\x54\x35\x89\xb2\x95\x2a\xf5\xcd\x0b\x03\xb8\x0b\x36\xb5\x4d\x36\x5b\xe4\xff\xde\x31\x86\x85\xdd\x4d\xf3\xd9\xbe\xf5\x09\x33\x9e\xaf\x73\xce\x8c\x6b\x96\xac\x58\x8e\x50\x31\x2e\x66\x33\x5e\xd5\x52\x19\x08\x67\x00\x41\xce\x4d\xd1\x2c\xe3\x44\x56\x27\xb9\xfc\x4f\xaf\x59\x9e\xa3\x9a\x1e\x51\x29\xa9\x74\xf0\x24\xdf\xc2\x98\x7a\xc5\x4d\x30\x23\xef\xb6\x55\x4c\x50\xc9\xf8\x2d\x66\xac\x29\xcd\x45\x57\x54\x5b\xdb\xb6\xb5\xe2\xc2\x64\x10\xfc\xf3\x3d\x80\xd8\xda\xce\x19\x45\xda\x9f\x7c\xd8\xd1\x0a\x37\x73\x38\xba\x65\x65\x83\xf0\xff\x29\xc4\x93\x78\x77\x67\x2d\xb9\xc2\x34\x93\xf7\xdd\x49\x17\xcd\x66\x27\x27\xf0\xb9\xe0\x1a\x32\x5e\x22\xd0\x57\xb3\x0c\xc1\x48\xc0\x94\x9b\x18\xae\x44\x42\x56\x03\x78\xc7\xb5\xd1\xee\xb4\x96\xe2\x5f\x03\x4b\x04\x79\x8b\x6a\xad\xb8\x31\x48\x8c\x65\x8d\x48\x20\x91\x22\xe3\x79\xa3\xf0\xec\xfa\x22\x64\x35\x87\xe3\xb6\x8d\xaf\x3d\xb3\xd6\xc6\xf4\x73\x56\xd7\x97\xac\xa2\x1f\xf2\x88\xa0\xa5\x4e\xa8\xfc\x36\x0c\x4c\x81\xe0\xe2\x0a\x54\x48\x77\x74\x8c\x17\xa8\x6e\xf1\x9d\xa3\x18\x4e\xc1\x53\x3d\xb1\xed\xf0\x78\x2e\x85\x6e\x2a\xec\x18\xe0\x59\x47\x48\x89\x15\x0a\xc3\x0c\x97\xc2\x5a\x97\x8e\x7a\x38\x2f\x99\xd6\xbe\x8b\x3e\xc2\xa5\xa6\x8b\x7d\xff\x30\xf2\x4c\x95\x1a\x1f\x09\xee\x65\x1d\x3a\x50\xef\x89\x8d\xd0\x51\x12\x2a\xe0\x32\xbe\x41\x96\xa2\x9a\x83\x61\x2a\x47\x03\xa4\x08\xaa\x8c\x25\xd8\xda\xc8\x43\xea\x98\x00\x50\x68\x1a\x25\x06\x94\x97\xd2\x6c\x3b\xc2\x34\x0c\xa8\xba\x2f\xec\x08\xf3\x95\x0b\xa6\x41\x48\x03\x1b\x74\x8a\xa0\x00\x3e\x06\x04\xae\x7b\x1b\x4d\x07\x67\x7f\x84\xe2\x6b\x25\xd3\x26\x79\x0e\x63\x7d\xc4\xcb\x18\x9b\x04\x0f\x8c\x0d\xa6\x91\xb1\xb5\x63\xec\x0b\xcd\x95\x63\x2c\x65\x86\xbd\x9e\xaf\x7a\xa8\xfb\x5a\xbe\x16\x98\x34\xd4\xd9\x86\x36\x96\x0b\xee\x30\xeb\xde\xa1\x63\x4f\xbf\x61\x9a\x27\x67\x8d\x29\x3a\xeb\x21\x01\xee\x8a\xc0\x77\x38\x1b\x4d\x0d\x69\x43\xfb\x99\xcf\xa1\x26\x97\xfe\x27\x82\xb0\x5b\x1b\x3a\x27\xbc\x66\xa5\xb5\x73\x8f\x30\xda\x45\x2d\x78\x39\xff\x15\xf4\xa5\xeb\x03\x98\xab\xf6\x38\xe4\x11\xea\x00\x83\x96\xf3\x23\x6e\x9e\x88\xc3\xc8\x15\x65\xfd\x7d\xbd\xbb\xfd\xa7\xe7\xcb\x77\x3f\x6a\x98\x29\x59\xb9\xdf\x85\x6c\x54\xe2\x0c\xcf\x01\x76\xbf\x9a\x57\x35\x2a\xd6\x8b\xe8\xa1\x6f\xdf\xaa\x43\xc8\x1f\x98\x48\xcb\x61\xee\x77\xde\xb4\x43\xa7\x71\x98\x87\xb4\x8a\x55\x54\xa4\xee\xbe\x0f\x25\xf0\x9e\x53\x39\x28\x23\xc4\x8e\x6f\xa9\xf8\x0f\x4c\xc7\x64\xf3\x5d\xd5\x46\x17\xaa\x33\xf0\x0f\x7b\x6a\xf4\x11\x24\x93\x0f\x5a\x34\x09\x6d\xbf\xfe\x24\x53\x2c\x87\x44\x37\x9d\x44\xfa\x5c\x3a\x3a\xef\xae\x96\xdf\x30\x31\xd6\x1e\x6f\x8b\xed\x05\x6d\xdb\xb8\x4f\xe7\xfb\xab\x0c\x86\xaf\xa8\xe4\x7e\x82\xc3\x79\x90\x83\x4a\x93\x61\x78\xc2\x1e\x3f\xf8\x10\xed\x88\xf9\x12\xfd\xfe\x4a\xf6\xc7\x24\xdb\xdb\x57\x3b\xfb\x19\x00\x00\xff\xff\xf9\x55\xab\x19\x9b\x09\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2459, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\x3d\x5b\xbf\x62\x42\x24\x80\x8c\xb5\xe8\x3d\x7b\xe1\x83\x81\xc5\x6e\x5c\x34\x1f\x88\x13\xf4\xd2\x0b\x23\x53\x32\x1b\x9a\x54\x49\xca\xae\x61\xf0\xbf\x77\x86\x92\x1c\x35\xbd\xf4\x62\x4b\x33\x8f\x6f\xde\xbc\x19\xaa\x11\xe5\x9b\xa8\x25\xec\x85\x32\x59\xa6\xf6\x8d\x75\x01\xf2\x0c\x80\x69\x5b\x33\xfa\xb7\x3e\xfd\x19\x19\xe6\xbb\x10\x1a\x96\xd1\x5b\xad\xc2\xae\x7d\xe5\xa5\xdd\xcf\x6b\x5b\xf8\xa3\xa8\x6b\xe9\xc6\x8f\xbe\x91\x65\x82\x9e\xcf\x4e\x18\x2c\xc0\xff\x95\x95\x68\x75\x58\xa7\x12\x3e\xc6\xf3\xb9\x71\xca\x84\x0a\xd8\xcd\x77\x06\x3c\xc6\x04\x96\x66\xdb\x3f\x75\xc7\xae\xdf\xe4\x69\x06\xd7\x07\xa1\x5b\x09\x8b\x25\xf0\xd1\x79\xca\xc5\x88\x50\x18\x33\x75\xd8\x5f\xe8\xa6\x59\x36\x9f\xc3\xf3\x4e\x79\xa8\x94\x96\x70\x14\x1e\x6a\x69\xa4\x13\x41\x6e\xe1\xf5\x04\x61\x27\xa1\x57\x0e\xc1\x5a\xcd\x09\x7f\x27\xde\x30\xda\x3a\x09\xc6\x06\x0c\x83\x3d\x48\x77\x74\x2a\x48\xc4\x0f\x54\xa2\x0a\x78\xe6\x64\xdb\x11\xa1\x0a\xf0\x2a\x4b\xd1\x7a\x4c\x6b\x4d\x49\x07\x72\xab\x82\x87\xa3\x6d\x35\x16\x94\xa0\xad\x0f\x57\x54\x64\x1d\xfa\xa0\x35\xfa\x44\x99\xa1\x48\x90\x06\x54\x95\x98\xe5\x8f\x46\xab\x52\x05\x04\x90\xad\xaa\x3a\x41\x51\x28\x53\xea\x76\x2b\x0b\x1a\x1c\x54\xd6\xa5\x1e\x06\x0d\xa9\x2e\xc6\x7c\xdb\xa4\x81\xe2\x9c\xf6\xc2\x6c\x3d\x56\xac\xed\xe2\x82\x1a\x5a\x7e\x0f\x48\x87\xe5\xa1\x08\xc0\xf9\x9c\x73\x28\x56\xe8\x21\x5f\x35\xcd\xbd\xd8\x4b\xb2\x1c\x15\xf1\x47\x34\xbb\x54\x8d\xd0\xe8\x7d\x51\x34\xc3\x1b\x21\x47\xa9\xc1\xfb\xec\x20\xdc\x50\xe8\xd3\xe6\xe1\x1e\x96\xf0\xcd\x5b\xc3\x9f\xc4\xf1\x4e\x7a\x8f\xbb\x97\xe3\xc1\xcd\x3b\x20\x46\x1c\x57\xd5\x9a\x32\xed\x64\x3e\x85\x33\x4e\xb2\x27\xd8\x60\xfb\x33\x90\xce\xd1\x2a\x90\x17\xfc\x5e\x1e\xf3\x11\xfb\x0c\x18\x9b\x22\x1e\x75\x12\xea\x6a\x09\x46\xe9\xc4\x00\xe8\x79\xcd\xff\x13\x01\xad\x31\x39\x26\x09\x16\x69\x43\x93\x43\xc8\x67\x3d\xff\x5f\xa2\xed\x87\x9c\x3d\x3e\x3c\x3d\x0f\x3c\x29\xbd\x5c\x22\x71\xcf\xd3\x05\x80\xfd\xcd\x06\x86\x1d\x4e\xf3\x03\xc3\xed\xc3\xe6\xc2\x90\xd2\x63\x86\x2e\x40\x57\xac\x14\x9a\x5e\x2e\x4c\xa2\x51\x44\x44\x56\x76\x17\x33\x46\x6a\x71\x3c\x84\xd5\xe3\x3a\x1f\xd9\x41\x35\x4a\x6b\x2a\x55\xe3\xa6\x52\x0e\x29\xa6\x44\xa5\x95\x0f\x34\xd7\x8b\x5f\x78\x83\xf9\xe7\x14\xcc\x59\x28\x1b\x36\xeb\x74\xfc\x05\x6c\xc1\xf0\x97\xda\x9a\x66\x93\x8f\xce\x4d\x26\xbf\xf9\x36\x41\xa9\x93\x6a\x1f\xd2\xb8\x43\x95\x33\x5a\x1b\x65\x6a\x92\x7d\xdb\xe2\xa2\x5d\xb4\x82\x08\x40\x1f\x8d\xc5\x7c\x7e\xe3\xbf\x1a\x2c\x39\xa8\xe2\xab\xed\xd6\xe5\xd3\xa4\xb4\x2f\x89\x12\x09\xcb\x37\xb4\x84\xf9\xbb\x7c\x6c\xa8\x8b\x75\xeb\xb7\xee\x16\xff\x65\x1d\xe3\x17\xfc\x0a\xbd\xac\xfb\x4d\x43\xb2\x7f\xfe\x70\xe8\x31\xfb\x19\x00\x00\xff\xff\xc6\xe5\x03\xba\xf7\x04\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 1271, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\xdf\x6f\xe4\x34\x10\x7e\xcf\x5f\x31\xac\x8e\x63\x53\x85\xf4\xbd\xa8\x0f\xd0\x03\xf5\x1e\x38\x4e\x6d\x05\x8f\xc8\x4d\x26\x1b\xd3\xc4\x4e\x1d\x7b\xb7\x4b\x94\xff\x9d\xf1\x8f\x64\x93\x6d\xba\x42\x40\x2b\x74\x52\xa5\x6e\xe2\xf1\x37\xfe\xbe\x99\xf9\x9c\x86\x65\x0f\x6c\x83\xd0\x75\xe9\x67\xff\xb3\xef\xa3\xe8\xfc\x1c\xee\x4a\xde\x42\xc1\x2b\x84\x1d\x6b\x61\x83\x02\x15\xd3\x98\xc3\xfd\x1e\x74\x89\xd0\xee\xd8\x66\x83\x0a\xb4\x94\x55\x6a\xe3\x7f\xcc\xb9\xe6\x62\x43\x8b\xc3\xbe\x9a\x6f\x4a\x0d\x8d\x92\x5b\x84\xc2\x68\x07\x55\xa2\x80\xbd\x34\xa0\xf0\x5b\x65\x84\x43\x1a\xa0\x21\x93\x75\xcd\x44\x1e\x45\xbc\x6e\xa4\xd2\xb0\x8e\x00\x56\x02\xf5\x79\xa9\x75\xb3\x8a\xe8\xa9\xeb\x14\x13\x74\xd8\xf4\x03\x16\xcc\x54\xfa\xa3\x0b\x6c\xfb\xbe\xeb\x1a\xc5\x85\x2e\x60\xf5\xf5\xe3\x0a\x52\xa2\x60\x83\x51\xe4\xe1\x97\xdf\xf6\xee\x01\xf7\x09\xbc\xdb\xb2\xca\x20\x5c\x5c\x42\x3a\xd9\x6f\xd7\xfa\x9e\x42\x61\x8a\xe4\x63\x67\x70\xb1\x53\x87\xe4\xba\xaa\x58\xdb\x7e\x62\x35\x2d\x5f\xd3\xb1\x2b\x54\x3f\x19\x91\x81\x36\x4a\xb4\xc0\x88\xb1\xc8\x34\x97\x02\x76\x5c\x97\x8e\xa8\x72\x7a\xb4\x7c\x23\x18\x05\x21\x50\x1a\x49\x81\x04\x75\x6d\x88\xf8\x04\x0f\x4a\x0f\x18\xe9\x7d\x83\x27\x72\xd9\x1c\xeb\xae\xe3\x05\x50\xf1\x14\xab\x1d\x93\x69\xb0\x7f\x1b\x8e\xee\x02\x69\x37\xa4\xdf\x1b\x5d\x4a\xc5\xff\xa4\x72\x8e\x1b\x13\x98\x86\x4d\x42\xfa\xfe\xcc\x36\x07\xa9\x92\xf1\x86\x55\x36\xc0\xc5\xc5\x10\x52\xdf\x9a\x2c\xc3\xb6\xfd\x59\xe6\x58\x0d\xdb\x6f\xd0\xe9\x70\x25\xeb\xa6\xc2\xa7\x5f\xee\xff\xc0\x4c\x3b\xa0\x90\xe2\x68\xd3\x98\x1c\x95\x92\x8a\x24\xb6\xcc\x60\x5d\x88\x97\xc9\xc7\xe0\x1f\x8e\xf8\x37\xee\x3f\xbc\x86\x0c\xcd\x20\x01\xbc\xb9\x20\xd0\x51\x07\x2a\x07\x01\x85\x58\xa4\xfc\x9f\xb1\x1b\xd8\x44\xfd\xcb\x9d\x6e\x7b\x17\x55\xc1\x32\x9a\x6c\x49\x26\x50\x32\x0d\x19\x13\xa1\x6f\x81\xa6\x86\xe7\x8b\x8d\xed\xcf\x7a\xa2\xaf\x27\xc8\x96\xf3\x62\x8d\xbf\x8c\x1e\xf7\xf2\x7e\xc2\xdd\x9c\x0e\x64\x0a\xc9\x0d\xad\x85\x08\xdc\x81\xf5\xbe\x74\xd0\xc6\x6b\x8d\x8b\xca\xca\xc6\xba\x28\x19\x8e\x9f\x9d\x67\xb8\xeb\x4c\x3f\xc1\x59\xcd\x73\x42\xda\x31\x85\xe9\x95\x24\xa5\x9f\x74\x32\x98\xcd\x72\x3d\x62\xd7\xec\xd3\x44\x93\x56\x7c\x3f\x5f\xea\x02\xe4\x05\x50\xae\x24\xd4\x4e\x5d\x0c\x09\x7a\x4b\xd9\x4b\xf7\x41\x66\xb7\x9a\xd4\xde\x38\x9d\x66\x4f\xde\x65\x17\x1a\x04\x5a\xad\x4c\xa6\x5d\xfe\x90\x68\x89\x8f\xb3\xea\x69\xb7\xf8\xff\xb0\x68\x09\x07\x5f\xbf\x3e\x25\x82\x3d\xb8\x77\x24\x5a\xbe\xc1\x0c\xf9\x16\x55\x38\xd5\x91\x3c\x31\xdc\xa2\xda\xe2\xf5\xdd\xdd\xe7\xb5\x0a\xe5\xbb\xc1\xb6\x91\xa2\xc5\xdf\x14\xa7\xde\x4e\x40\xc1\x59\x78\xff\x68\xb0\xd5\x61\xba\xa5\xd1\x98\xc0\xef\xf6\x62\x7a\x96\x65\x20\x97\xde\xd8\xa8\x8f\xa2\x90\x6b\xeb\x92\x03\xd5\x69\x23\x1b\x37\xc8\x09\x50\x97\x9d\x86\x1a\x37\xad\xed\x91\x2c\x6e\x4c\x80\x04\x67\x77\x7e\x75\x09\x82\x57\xee\x60\x70\xea\x38\x8e\x59\x4e\x4c\x09\x22\xa0\xd0\x18\xc9\xdc\x50\xe3\x27\x03\x27\x02\x8c\x1d\x90\x6f\x1b\xfa\x69\x2f\xd4\x2d\x53\x70\xb0\x54\x47\x44\x48\xba\xf5\xf1\x11\x0e\x93\x08\xab\xd1\x0f\xba\x7e\x15\xcf\xc6\x6b\x32\xae\xfe\xe0\x9e\xfa\xfc\xec\x87\x0c\x97\x3e\xc7\x09\xf8\x41\x3c\x4a\x51\xb5\x38\x3c\xa5\xeb\x23\x6f\x88\x81\xe6\x96\xeb\x6f\x5a\x90\x0f\xfe\x73\x87\xfe\x68\x68\xab\x6a\xef\xaf\xf3\xe7\x3e\xe2\x28\xcf\xbe\x49\x82\xce\x27\x2b\xf4\x03\x17\xf9\xaf\xd6\x4a\x43\xa3\x8c\x85\x4a\x8e\x5a\xfc\xfd\x73\x8c\xd1\x15\x1d\x13\xd2\x63\x70\xb4\xef\x66\xf5\xb5\x54\xee\x29\xcd\x60\xcc\xaf\x55\xee\xc5\x56\x1d\x5f\xce\x8d\x52\x59\xac\x83\x57\x2e\xc6\x5c\x84\xf5\x25\xf9\xc2\xd0\xa6\x2f\xdd\x1d\x8b\x4a\x8d\x19\xc7\x86\x71\x65\x66\x99\x36\xae\xb0\xe1\x66\x73\xdf\x71\xbe\x1a\x6f\x38\x2c\xd1\xbf\x87\x7d\x41\xe8\x85\x06\xf1\x6d\xea\xde\xfe\xcd\x02\x2d\x36\xf1\x3f\xaa\xc2\x78\xed\xfe\x6f\xa4\x7f\x7b\xe5\x9d\x41\xf4\xd1\x5f\x01\x00\x00\xff\xff\xf6\x60\xe1\x76\x99\x0d\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3481, mode: os.FileMode(420), modTime: time.Unix(1441639065, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x5b\x53\x1b\x3b\x12\x7e\xf7\xaf\xe8\x75\x25\x29\x9b\x38\x03\x0f\xa9\x7d\x48\x96\x7d\x08\x21\x1b\xaa\xb2\xa9\x2c\x24\xbc\x24\xa9\x2d\x31\x23\xdb\x2a\xe6\x86\xa4\x01\x1c\xca\xff\x7d\xbb\x25\xcd\x8c\xe6\x0a\x66\xa1\xce\x79\x38\xf1\xe8\xd2\xfa\xba\xfb\xeb\x8b\xc4\xdd\x5d\xc4\x97\x22\xe5\x30\x55\xb1\x08\xf9\x35\x8b\x45\xc4\x74\x26\xa7\xdb\xed\xe4\xee\x4e\x2c\x21\xf8\xca\x79\xa4\xce\xc4\x1f\x6e\x46\x82\x6f\x4c\xb2\xe4\x2b\x4b\xf0\x93\x06\xe1\xdd\x21\x88\x54\xff\xfd\xed\x2c\xe6\xe9\x0c\xe7\xcf\x59\x5c\xf0\xe3\xdb\x5c\x72\xa5\x44\x96\x6e\xb7\xf3\x39\x6e\xe3\x69\x54\x09\xfc\xb7\x48\x4f\x34\x4f\x14\x0e\xe0\x27\x97\x92\x64\xb8\x83\x79\x35\x3b\x33\x67\xe9\xf5\x76\xbb\x80\x29\xfe\xfe\x92\x85\x4c\x1b\x81\xd3\x05\x74\x71\x98\xb1\x5a\xf2\xfc\xbd\x11\xfc\xb7\x43\x48\x45\x0c\x77\x13\x00\xc9\x75\x21\x53\x1a\x9d\x6c\xdb\x80\xd8\xed\x18\x20\x37\xfb\x28\x40\x95\xe4\x9d\x00\xfd\x48\xc5\x55\xc1\x47\x30\x79\x0b\xee\x83\xd5\xf5\xc7\x2e\x48\x8e\xd3\x22\xe9\x87\x40\x33\x3b\x9f\x6d\x46\xad\xcc\x07\xc3\x30\xff\xd6\x34\xcd\x65\x96\x73\xa9\x37\x3d\x4c\x3d\x51\xdf\xa4\x48\x84\x16\xd7\x9c\x76\xa0\x75\xf2\x18\xa1\xd2\x1e\x37\x5c\x6f\x82\x80\x96\xf8\xaa\x9e\xa8\xa3\x42\xe9\x2c\xf9\x94\xc9\x84\x69\xcd\x65\x53\x46\x68\x26\x97\x66\xf2\x1e\x31\x59\xaa\x19\x62\x6d\x09\x68\xc5\x57\x73\x67\x4b\xc9\x0b\x91\x46\x15\xe8\x69\xdf\x0a\x23\x8d\x96\x71\xcf\x00\x48\x41\x9e\x6a\x5a\x16\x9c\xe0\xcc\xed\x39\x43\x0c\x21\xb9\x4d\xdd\xb0\x55\x70\x96\xc7\x42\x7f\xd8\x58\x05\xad\xef\x68\xbd\xbf\xf6\x67\xdf\xe8\x6f\xeb\xdd\xa3\x2c\x8e\x79\x48\xfe\xb5\x12\xd0\xcb\x26\xb4\x63\xc5\xfb\x8e\x94\xec\xa6\xd6\xcf\x9b\x54\x7f\x0c\x20\x0c\x91\xc9\x35\x93\xd0\x98\x33\x9f\xdf\x37\x39\x6f\x6f\x3a\x77\xb4\x3b\x8e\x79\x82\xe0\x48\xc2\xb2\x48\xc3\x59\x63\x11\x25\x22\xc3\xb0\xa3\xb5\x88\xa3\x2e\xfb\xea\x29\x7b\xc4\x1c\xf6\x90\x6c\x99\x54\x81\x13\x8f\xab\x0c\x13\x9b\xdc\x69\xf3\x0d\xac\x10\x84\x58\x71\x16\x29\x8c\x9c\x9d\x20\x3b\x9a\xfa\x10\xce\x83\xf7\xad\xb1\x7f\x40\xcb\x1e\xad\x05\xaf\x5f\x3b\x10\xe8\x52\x14\xe8\x20\x77\xe8\x59\x4f\x34\x58\x4f\x3c\xb0\x13\xc8\xc3\x6b\x44\x4e\x3c\xbc\x26\x53\x2c\xca\x18\xae\xcc\xe0\xad\x68\x5a\xd2\xf0\xc0\x23\xc0\x1c\xf1\xb8\x1c\xe0\x05\xac\x1f\xb2\x64\xc5\x93\xd4\x18\x89\x8c\x3b\xab\xce\x18\xcc\x0f\xd3\x96\x37\x6c\xca\x18\xc7\x80\x36\xae\x80\x58\x45\x06\x29\xd2\x54\x68\x8c\x16\xdd\x4c\xd4\xc8\x45\x74\x2a\xb4\x69\x7a\x08\x2c\xcf\x91\xdc\xcd\x53\xe4\x02\x8c\xa5\xe7\x66\x83\x0d\x0c\x23\xee\xd1\x90\x47\xcc\xd1\x83\xba\x85\x7b\x37\xe4\xe3\xa7\x55\x09\x88\xb4\x82\x9a\x64\x8d\x74\xd7\x0a\x1d\x3f\x47\xf9\x41\xf3\x7f\xbb\xd0\xc3\xfd\x1c\x66\xe8\x1e\x52\x26\xb2\x2a\x11\xe7\x2c\xbc\x64\x2b\x6e\xeb\xbe\xf9\x89\xb3\x93\xfd\x7d\xf8\xbe\x16\x0a\x96\x22\xe6\x70\xc3\x14\xac\x38\xda\x05\x15\x8a\xe0\x62\x03\x7a\xcd\x4d\x1e\x5e\x61\xec\xea\x2c\x8b\x03\x5a\x7f\x1c\x61\xe4\xa6\x2b\x9c\x2c\xf7\x25\x62\xb5\xd6\x80\x69\xe7\x9a\x63\x8e\xd3\x46\xd4\x9a\xa7\xb0\xc9\x0a\xd4\xeb\x8d\x2c\xd2\x86\xa4\xf2\x08\x08\xb3\x24\x61\x69\x34\x99\x88\x24\xcf\xa4\x86\x19\x2a\x3d\x4d\xb9\xde\x5f\x6b\x9d\x4f\xe9\x63\x25\xf4\xba\xb8\x08\x70\xe1\xfe\x2a\x7b\xe3\x04\xf8\x3f\x69\xe5\xa5\xd0\x0f\x5b\x4c\xff\x3e\x6c\xa5\x4d\x0f\x3b\x41\xd8\x2f\xfb\x8c\x1d\x81\x1b\x47\x4b\x96\xa2\x6b\x82\x8f\x7c\xc9\x8a\x58\x9f\x18\x73\x28\xe2\x2e\x96\xd4\x54\x2f\x61\xfa\xf2\xca\x94\x5f\x1b\xa5\x69\xe4\x7e\xd9\x6d\x2f\x2e\xf9\x66\x01\x2f\x4c\x1c\x13\x41\x03\x6f\x3f\xcd\x99\x32\x02\xbe\x24\xbb\xb6\x21\x6e\x6e\xb8\x40\x54\x8a\x99\x52\xb6\x29\x34\xfd\xa1\x42\x37\x99\x70\x51\xc0\xe2\xd8\x38\xf2\x22\x2b\xd2\x08\x72\x3b\x4b\x15\x84\x06\x71\xeb\xe7\x02\xdd\xe9\xed\x07\xaa\x43\x26\x7d\x92\x6c\xbd\xc9\x45\x88\x22\x0c\xad\x30\x22\xb1\x66\x43\x76\x61\x02\x31\x82\xa5\xcc\x12\x60\x40\x56\x09\x4e\x39\x76\x8a\x4a\x4f\x70\x03\xef\x47\xa4\xb4\x2c\x42\xed\x6a\x8e\xb3\x9d\x9d\x2a\xeb\xc9\x47\xae\x42\x29\x72\x9b\xba\xad\x62\x8d\x21\xdf\x8a\xc1\x37\x57\x30\x1d\xea\xba\xa0\xd7\xe6\xb1\xa1\xf2\x01\x33\x83\x43\x87\x46\xd0\x6b\xa0\x54\x81\x76\x41\x6b\x94\xde\xc7\x2f\xe4\xbc\x59\xb2\x00\xa1\x01\xa1\x17\x09\x8e\xea\x35\xd3\x44\xf8\x3c\xe6\xb7\x14\x3a\xe9\x4a\x81\xa0\x2f\xd3\x1c\x30\x70\x89\x84\x5d\xc4\x7c\x86\xea\x2d\x13\x8d\x76\x58\x09\xfc\xb9\x99\xdb\x6a\x45\xbd\x02\x97\x4b\x16\x72\x82\x42\x66\x57\x46\x80\x4d\xe0\x8a\x0e\xbb\x11\xe8\xa1\x02\x6d\x8b\xdb\x98\x09\xca\x84\xeb\x75\x16\x01\xd9\x5d\x4d\xa8\xff\x00\x4a\x1f\xa7\x3c\xe4\x58\x7c\xa5\x53\x78\xaf\xcf\xc8\x73\x5f\xdb\x99\x84\x3d\xdf\x37\x0b\x90\x59\x81\x11\xbc\x97\x88\x28\x8a\xf9\x0d\xfa\x12\x6f\x0e\x3a\x5c\xf3\xe8\x94\x26\x4a\xc8\xe4\x21\x6a\x99\xb0\x72\xc1\xcf\xdf\x66\xac\xec\x13\x82\xcf\x4c\xfd\xa7\xe0\x72\x53\x3a\xee\x4a\x99\x1e\x2c\xf8\x71\xfa\x25\x30\x13\xb3\xba\x28\x81\xdb\x40\xad\x44\xb9\xde\xf3\x4e\x1f\x0f\xca\x73\xd2\x4c\x77\x5a\x5c\xdb\xf5\xd6\xa7\x6f\xb7\x8d\xf4\xde\x34\x4f\x40\x4e\xee\xb0\x64\x76\xa5\x82\x7f\x71\x5d\xdf\x27\xe6\xce\x26\x81\x6d\x77\x54\x7f\x8d\x56\x75\x1a\xc7\x0f\xd3\xdf\xcc\xab\x7a\x5d\x69\x8a\x0d\x12\xca\x7c\x34\x34\x8b\xc3\x1a\xe2\x39\x41\x7e\xe6\x0c\x0b\xe5\xe3\x61\x06\x56\xc0\x73\x42\xac\x08\x53\xbb\xfd\x13\xd6\xa7\x6a\xc8\xbf\x03\xb7\xef\xc4\x16\x5d\xd5\x83\x4a\x83\x88\x76\x7b\x60\x07\xbb\xcc\x1e\x80\xd4\x70\x7e\xe5\x37\xb3\xb7\x07\x07\xd8\x4b\x4a\x94\x4e\x65\xd4\x54\xd0\x5f\xd3\xe6\xd1\xbf\xa6\xb0\x64\x38\x11\xbd\x83\x97\xd7\x53\xab\x9e\xd1\x0f\x8c\x6e\xf6\x90\xae\x9d\xbb\xb9\xec\x10\x5c\xa1\x09\x08\xf8\xdd\x47\xcc\x30\xef\xa0\xad\xb6\x55\xb4\x3d\x6e\x47\xb7\x0d\xab\x3e\xce\xcd\x64\x37\xd3\xc3\x3e\xad\x97\x5d\x77\x57\xe5\x71\xcf\xed\x4f\x1e\xed\x3d\xb7\xd1\x9e\x04\x30\x74\xe7\x7c\x3a\x4a\x53\xa9\x69\xd2\xfa\x49\x74\x19\xf2\xd1\x33\x2a\xe4\x7b\xaf\xaa\x09\x27\xea\x43\x16\x95\x5e\x6a\x5c\x9c\xec\x79\xe8\x57\x2a\xa7\xb2\xfc\x81\xc0\x69\xc3\x02\x5e\x3d\x20\x18\x1e\x8c\xd2\x05\x2a\xc2\x50\xfc\x98\x3e\x67\xad\xf0\x9c\xf6\x5d\x0e\x87\xc3\xb4\xc3\x49\x2a\xde\xff\x6d\xdd\x5f\xba\x65\xd9\xbc\x48\xa4\xb6\x65\xbf\x37\xd0\xcb\x7b\xc4\xc0\x3d\xa5\x2b\xa2\xbc\xb9\xcc\xee\xf5\xe4\xa8\x37\xed\x7f\x17\x98\xcd\x2e\xdd\xd7\x76\x52\xff\xff\x21\x59\xa3\xa3\xcb\x4e\xd0\x46\x80\x55\x10\x5c\x86\x70\x3c\xf3\x12\x86\xfb\x85\xe8\xe8\x29\x18\x77\xcf\xe1\x9f\x70\xd0\xfb\x52\x70\x84\xad\x5b\xa6\x84\xe6\xf5\xc3\x8b\xa5\x06\xee\x0a\x82\xa0\x24\x76\xf3\x75\x05\xdb\xee\x17\x61\xd9\x58\x99\xd6\xbc\x6a\xb3\xc0\xbc\x17\xb5\x7b\x16\xbf\x63\xf1\x23\xa1\x7a\x59\xf1\x9e\x4e\x7a\xdf\xff\xc6\x7a\xbc\x1a\x4a\xdd\xe3\x0d\xa4\x6c\x76\x43\x2d\x24\x96\xa7\x05\xd8\xf7\x43\xd3\x73\xf7\x35\xa5\xd5\xbb\x0f\x65\xa6\x99\x83\x5e\x75\x2f\x73\x30\x1d\xa3\x90\x3c\xf2\x49\x50\x3d\xc9\x96\x93\x67\xe6\xb0\xd1\xc7\x59\xc4\xf4\xc0\x67\x8f\xda\xc1\xe6\xd2\x3f\xf6\xa6\xe4\xbd\x26\x91\xfc\xc7\xbc\x19\x8d\xbe\x16\x55\xef\x44\x4e\xba\xbb\x70\x74\xdf\xf9\x0e\x6d\x17\xef\x15\xda\x81\x65\x28\xa8\x47\x49\x6c\x8d\x6b\x5e\xaa\xf1\x78\x2b\x8d\xdf\x75\xfb\x72\x2c\x9b\x0f\x9a\xb9\x41\xf9\xa1\x2a\xfc\x74\xbc\xfc\xf9\x7b\x07\x66\x2a\xf7\xf7\x1e\x13\xde\xe4\x82\xca\x62\x0d\x5a\x9a\x65\x87\x87\x03\xa1\x5f\x2e\x1d\xf1\x76\xab\xae\xd5\xc7\xb8\x1b\xfd\xb9\xbd\x6f\x47\x7c\x79\x5e\xde\xd2\xfb\xdf\xb7\x9b\xeb\x47\x5e\xb1\x0d\x53\x6b\xdc\xaf\x5e\x19\x1d\xcb\x03\xfc\x3c\x36\x40\xa4\x72\x69\xb3\xb7\x1b\xb0\x04\x3a\xd7\xcf\xa3\x63\x8f\x66\xdb\x11\x8e\x37\x5f\xae\x7c\xf6\x9e\x91\x8c\xbf\x88\xc2\x3d\x1c\xae\xff\x3a\x42\x49\xb7\x19\x5d\x03\x78\x77\x65\xf8\xbd\x3a\x8c\x67\xdc\xf1\xe7\xfe\xde\xc0\xf4\xff\x70\x53\xfd\xfb\xbf\x00\x00\x00\xff\xff\x0f\xb8\xb8\x68\x4e\x1d\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 7502, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x56\xc8\x4c\x53\xd0\x73\xc9\x4f\x0e\x2e\x29\xca\xcc\x4b\x57\xa8\xad\x05\x0a\xa1\xf3\x53\xf3\x52\x80\x0c\xae\xea\x6a\xbd\x80\xa2\xfc\x82\xd4\xa2\x92\x4a\xbf\xc4\xdc\xd4\xda\x5a\x05\xa0\x88\x4b\x62\x49\x62\x48\x65\x01\x88\x97\x90\x55\x9c\x9f\x67\xa5\x04\x32\x20\x20\xb1\x28\x31\x17\xa4\x08\xa8\x4f\x09\x6a\x49\x84\xaf\x0f\x54\x44\xa1\x22\x37\x07\xa2\x0e\x21\x06\xb7\x46\x29\x81\x0b\x10\x00\x00\xff\xff\x25\xdb\x4a\xd1\x96\x00\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 150, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x93\x3f\x6f\xc2\x30\x10\xc5\xf7\x7c\x8a\x2b\x13\x48\x88\xa9\xea\xd0\x8a\x31\x1b\x55\x3b\x75\xc6\x82\x4b\x7b\x92\xb9\x20\xc7\x46\x91\x2c\x7f\xf7\xfa\x4f\x0d\xa8\x22\x11\x0e\x53\x72\xef\x25\xef\xfd\xe4\x93\xad\xa5\x06\x56\xef\xc4\x1b\xe4\x6f\xfd\xe3\x5c\xe5\x67\x54\x0a\x5e\xd7\x70\x12\x92\xf6\x42\xe3\xc5\x9e\x5b\xbb\xfa\x14\xe1\xb3\x25\xcc\xfc\xfb\xa6\xdd\x09\x4d\x2d\x3b\x37\x5b\x82\x9f\xbf\x84\x34\x58\xf7\x47\x85\x5d\x17\xe5\xa8\x5e\xa5\x2f\xde\x62\xf8\xd3\x1a\x98\x24\xd8\x0a\x40\xa1\x36\x8a\x83\x5a\xb9\xca\x5a\xe4\xbd\x0b\xcf\x48\x25\xfa\x51\xaa\x6c\x4f\xa4\xba\xa4\x17\x51\xf9\x26\x8d\x8a\x6f\x33\xfd\x99\x13\x88\xb6\xe9\x97\x14\xbd\x2d\x3b\x27\x62\x3a\x98\xc3\xe0\xee\x82\x39\x4a\xd4\xc8\x56\xe8\x97\xe7\xf9\x2d\xb2\x45\x5e\x61\xaa\x88\x53\xdd\xef\xa4\xe9\xe8\x84\x67\xb9\x74\xaf\x23\xbc\xc9\x7c\x94\x37\x57\xfc\xe3\xcd\x72\x19\xaf\x91\x9a\x8e\x12\x3f\x9a\x01\xe4\xb3\xff\x28\xf5\x55\x51\x11\x61\xcd\x43\xc7\x19\x9c\x69\xf7\x23\x65\xde\x89\xf1\x1b\x00\x00\xff\xff\xb0\xa9\x55\x2f\x47\x04\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1095, mode: os.FileMode(420), modTime: time.Unix(1441639159, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{
			}},
		}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{
		}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{
		}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{
			}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{
			}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{
			}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{
			}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{
			}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{
		}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{
			}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

