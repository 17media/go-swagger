// Code generated by go-bindata.
// sources:
// templates/additionalpropertiesserializer.gotmpl
// templates/client/client.gotmpl
// templates/client/facade.gotmpl
// templates/client/parameter.gotmpl
// templates/client/response.gotmpl
// templates/docstring.gotmpl
// templates/header.gotmpl
// templates/model.gotmpl
// templates/modelvalidator.gotmpl
// templates/schema.gotmpl
// templates/schemabody.gotmpl
// templates/schematype.gotmpl
// templates/schemavalidator.gotmpl
// templates/server/builder.gotmpl
// templates/server/configureapi.gotmpl
// templates/server/doc.gotmpl
// templates/server/main.gotmpl
// templates/server/operation.gotmpl
// templates/server/parameter.gotmpl
// templates/server/responses.gotmpl
// templates/structfield.gotmpl
// templates/swagger_json_embed.gotmpl
// templates/tuplefield.gotmpl
// templates/tupleserializer.gotmpl
// templates/validation/customformat.gotmpl
// templates/validation/primitive.gotmpl
// templates/validation/structfield.gotmpl
// DO NOT EDIT!

package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAdditionalpropertiesserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x4d\x6f\xd3\x40\x10\xbd\xe7\x57\x0c\x91\x68\x6d\x64\x5c\x92\xde\x0a\x41\xe2\xc0\x01\xa4\x16\xd4\x02\x97\x28\x87\x8d\x33\x6e\xb6\x5d\xef\x9a\xdd\x4d\x4a\x89\xf2\xdf\x99\xfd\x68\x6c\x83\x5d\xb5\xe4\x10\x69\xd7\xb3\xef\xbd\x79\xf3\xb1\xdb\xc1\x0a\x4b\x2e\x11\xc6\x6c\xb5\xe2\x96\x2b\xc9\xc4\x57\xad\x6a\xd4\x96\xa3\xb9\x42\xcd\x99\xe0\xbf\x51\x8f\x61\xbf\x1f\x9d\x9c\xc0\x77\x59\x31\x6d\xd6\x4c\x7c\xbe\xfa\x72\x01\x9b\x87\x93\x01\xbb\xe6\x06\xd4\xf2\x06\x0b\x0b\x77\xdc\xae\xa1\xc1\x83\xfa\x00\x08\xa5\x56\x15\xb8\xb7\xa3\x72\x23\x0b\x48\x76\xbb\xfc\x12\x0b\xe4\x5b\xd4\x17\xac\xc2\xfd\x1e\x5e\x91\xa6\x9a\x99\xc2\xf3\x42\xee\x6e\x89\x3b\xed\x32\x27\x2b\x66\x19\xcc\x17\xcb\x7b\x8b\x29\xa0\xd6\x4a\xc3\x6e\x04\x40\x0a\x8d\x65\xd7\x08\x93\x0c\x96\x5c\xae\x48\x16\xb6\xe8\x29\x62\xcb\x74\x08\x99\x40\x2f\x11\x85\xf0\xd2\x21\xc2\xd9\x0c\x6e\x8c\x92\xf9\x81\xd8\x93\x66\x70\x14\x9e\xa7\x6f\x7d\xd4\x8b\x19\x48\x2e\x3c\x39\x80\x46\xbb\xd1\xd2\xdd\xd3\xd1\x41\xb9\x64\x3a\x09\x12\x03\xcc\xa2\x80\x51\x5b\xf0\x34\xa3\xd7\x95\xda\xb6\xe5\x02\xa3\x0c\xc8\x47\xb0\x0a\x2a\x56\x53\xb8\x8f\x9d\x3a\x69\x15\xbb\xc5\x84\x2e\xe7\xc6\x6a\x2e\xaf\x17\x44\x44\xba\xf3\x0f\x3d\x55\x24\x4e\x9f\xc8\x25\xbb\x3b\x47\x63\x08\x81\x82\x51\x18\x27\x86\x4b\x8b\xba\x64\x05\xee\xf6\xee\x92\xf8\xc8\xeb\xa7\x7a\x30\x7d\x82\x07\xf4\x47\xc0\x9a\x49\xca\x31\xef\x68\xa2\x2f\x2b\x14\x68\x31\x09\x60\x99\x2f\x08\x25\x63\x4b\x18\xbf\xfc\x39\x6e\x6a\x1f\x30\x82\xb8\x08\xf8\x48\xae\x6d\x57\x4f\x33\xef\x5f\x7f\x2f\x6e\x99\xd8\xf8\x9e\x20\x30\x81\x32\xca\x48\xe1\x3d\xbc\x39\xe4\x62\x36\xc2\x0e\xd8\x6d\xb1\xaa\x05\xb3\x34\x3a\xa6\x58\x63\xc5\xbe\xdd\xd7\x38\x1e\x54\x95\x7a\xc0\x92\xfa\xf4\x36\x83\xad\x83\x0c\x9e\xc4\x8a\x06\xbe\xd0\x9e\x56\x39\xcd\xcf\x66\x88\x08\x83\x95\xdb\x3a\x83\xe9\xab\x54\xb6\x1f\x23\xff\x64\x2e\x36\x42\xb0\xa5\x70\xae\x1f\x1d\x2c\xf7\x7a\xfa\x4a\xfd\x4f\xb9\xdd\xef\x41\x47\xf0\x6e\x7e\xbb\xa0\x7e\xf7\x08\xa3\xe6\xab\x9b\x8a\x1f\xce\xfd\x8f\xbf\x6a\x8a\x33\x24\x24\x0c\x46\x78\x14\x87\xa7\xe9\xd2\xd1\x23\x4f\x82\x81\x7f\xb7\x48\x94\x45\x5a\x47\x74\xa6\x7e\x38\x6f\xad\xad\xe7\x2e\x2d\x6a\x49\x05\xcc\xaf\xad\x18\x3d\xb8\xbd\x06\x96\x57\x8b\x3d\x49\x21\x09\x8b\x2b\x0b\x8b\x2b\x7d\xd8\x5c\xae\xc7\xda\x24\xa1\x5b\xa4\xba\x93\xdd\x15\xe6\x0e\x26\xeb\x54\x39\xe2\x27\x3d\xeb\xa6\x35\xcd\x7d\x73\x4a\x17\x59\x7b\x58\xe3\x2c\xf4\xdb\x9d\xc2\x6c\xd6\x1a\x0e\x0f\x10\xd5\x38\xa7\x23\xc4\x50\x2a\x6e\x17\xf7\x1a\x4c\x6f\x9a\xfb\xe1\xc4\x7a\xf4\xfc\x57\x6e\x5e\x71\x0a\xef\xe0\xb4\x1b\xde\xd6\xd0\x4d\xa7\x50\xb2\xa0\x39\x94\x6e\x16\x5d\x16\xd3\x98\xd6\xa1\x1a\xf3\x06\xf7\xf5\xc4\x75\xfc\x71\x76\xdc\x74\x21\xab\x6b\xea\xcc\x24\x3a\xd5\xd0\xcc\x27\x67\x8b\x3c\xcf\xd3\x2c\xf6\x69\xd3\xc1\x7f\x02\x00\x00\xff\xff\xcf\x40\xb0\xc5\x98\x07\x00\x00")

func templatesAdditionalpropertiesserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAdditionalpropertiesserializerGotmpl,
		"templates/additionalpropertiesserializer.gotmpl",
	)
}

func templatesAdditionalpropertiesserializerGotmpl() (*asset, error) {
	bytes, err := templatesAdditionalpropertiesserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/additionalpropertiesserializer.gotmpl", size: 1944, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientClientGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4d\x73\xe3\x36\x0c\x3d\xaf\x7e\x05\xea\xd9\x64\x2c\x57\x2b\xdf\x35\x93\x43\x66\xb3\x87\x5c\x36\x99\x24\xd3\x9e\x19\x09\x92\x38\xb1\x28\x95\xa4\x92\x71\x35\xfa\xef\x05\x3f\xfd\x11\xbb\x75\x6f\x9b\x43\x4c\x12\xe0\xc3\xc3\x03\x08\x0d\xac\x7c\x63\x0d\xc2\x34\x41\xfe\x93\x75\x08\xf3\x9c\x24\xeb\x35\xbc\xb4\x5c\x41\xcd\x37\x08\x1f\x4c\x41\x83\x02\x25\xd3\x58\xc1\xeb\x16\x74\x8b\xa0\x3e\x58\xd3\xa0\x04\xdd\xf7\x9b\xdc\xf8\xff\xa8\xb8\xe6\xa2\x21\x63\xb8\xd7\xf1\xa6\xd5\x30\xc8\xfe\x1d\xa1\x1e\xb5\x85\x6a\x51\xc0\xb6\x1f\x41\xe2\x37\x39\x8a\x03\xa4\x10\x02\xca\xbe\xeb\x98\xa8\x92\x84\x77\x43\x2f\x35\x2c\x13\x80\x85\x40\xbd\x6e\xb5\x1e\x16\x66\xd3\x70\xdd\x8e\xaf\x39\x39\xae\x9b\xfe\x9b\x07\xd8\x5f\xa2\x94\xbd\x54\x97\xf9\x9a\xdf\xcb\x3c\xcb\x0d\x47\xa1\x2f\xf3\x35\x5c\xdf\xf8\xff\x73\x5e\xbf\xb3\x0d\xaf\x48\x82\x45\x42\xd7\xa8\x20\x92\x09\xaa\x4c\x7e\x87\x35\x1b\x37\xfa\xde\xca\xa1\xa8\x40\x64\x1a\x24\x17\xba\x86\xc5\xd5\x5f\x0b\xc8\xa9\x64\xd6\x1f\x45\x05\x61\xed\xee\x7e\x7d\xc3\x6d\x06\x5f\x09\x78\x44\x28\x6e\x20\x3f\x00\x31\x56\x5a\xc1\x11\x9e\x77\x3f\x42\x4d\x6d\x5b\xfc\xc4\x0f\x28\x25\x12\x49\x05\x0c\x04\xed\xc8\xa3\x1d\xa9\x60\xfc\x6f\x8c\x1d\x04\xb7\x8f\xf7\xe0\xe4\xca\x93\x7a\x14\xa5\xb9\xb7\xd4\xc4\x49\xd9\x92\x7a\xd3\x4b\x38\xc8\xa0\xee\x65\xc7\x88\x97\xd2\xb2\xee\x74\xfe\x84\x0d\xa7\xe5\x36\x85\xd5\x77\xeb\x0b\x13\x91\x91\xa8\x47\x29\xe0\xda\x1d\x4d\x11\xaf\x00\xfd\x09\xa9\x08\x8b\x39\x31\x0d\xbd\x4a\x02\xce\x04\xbc\x86\xfc\x79\xa4\x26\x93\x5b\xa7\xc3\xe1\xce\x98\xef\x50\x95\x92\x0f\x9a\xf7\xc2\x3e\x08\xe3\x74\x78\x16\x85\x31\x8b\x8d\xc2\xe3\x6b\x0e\xf8\xf3\x1d\xe3\x3a\xcf\xc4\xed\xac\x70\x3b\xc9\x57\xeb\x44\x6f\x07\x04\x4f\x9d\x04\x19\x4b\xa7\xc4\x79\x29\xc9\x78\x46\xcb\xc4\xe5\xe1\x9b\xea\x61\x30\xaf\x8d\x78\x99\x5e\x58\xaf\x7e\x0d\x59\x4c\x23\x32\x55\xd2\x33\xd8\xd7\xe4\x22\xa1\x6c\x97\x2d\x59\xe8\x97\x14\x4e\x62\x2d\x07\x26\x59\xa7\x4e\x1b\x1f\xad\xcd\xa7\x7a\x3b\xea\xb6\x97\x64\x36\x01\x32\x60\xb4\xbd\x17\x75\x1f\xf4\xbe\xf5\xfb\x3f\x25\xd7\x28\xa7\x89\x88\xcc\x73\xba\xeb\xae\xb2\x44\xa5\x9e\x90\x4a\x22\x6c\x66\xcb\xd5\x61\xc8\x23\x8f\x40\x21\xdb\x3d\x38\x3b\xc3\xce\xe2\xa5\xd1\xcf\xf6\x83\x19\xd8\x0f\x77\x0f\x05\xfc\xe1\x47\x88\x1d\xad\x3e\xd9\x57\xa4\x8e\xa0\x41\x4b\xfe\x34\xa1\xfd\x6c\x39\x0d\x2b\x51\xd1\xa4\x89\xd8\x19\x10\x0b\x33\x37\x58\x1e\x3b\x8e\x6e\xbd\x76\x5c\x2f\xaf\xbd\x12\xb1\x91\x0c\x0f\x80\xfb\xbb\xe2\x78\x9e\xc4\xe4\xac\x83\x53\xb9\x80\x6b\xc7\xce\x1d\x3e\x21\xab\x50\xd2\xe1\xc9\xc2\x38\xeb\x14\x5f\x36\xcb\xc3\xdb\xce\x4e\x55\xcb\x22\x86\x02\x15\xb1\x74\x99\x4b\xcb\xda\xe7\x94\xfe\xd1\x45\x93\xde\x6f\x37\x20\xf8\x06\x1c\x7d\x3f\x62\xce\x0a\x44\x9e\x87\x35\x32\x60\xc9\x7f\xdf\x73\xc2\xe6\x17\xb6\x41\xba\x17\x83\x22\xd2\xcb\xdd\xf5\xba\x99\xc2\xcf\xa8\x5f\x76\x13\xa0\x35\x2f\x5a\xd9\x8a\xef\xe6\x42\xef\xbe\xae\xae\x48\x9f\x5f\xc7\x3e\xc2\xbf\x0c\xe6\xd4\xca\xb2\x57\x7d\xb8\xd9\xc5\x48\xe6\xf0\x49\xa0\xc7\xf8\xc3\xb4\xeb\xd1\xa7\xc1\x7c\x05\x6c\x1b\xc7\x6f\x40\x70\x5c\xf6\x83\x4d\x95\xe6\x12\xb5\x64\x46\xf2\x79\xa5\xa8\x6b\x50\xd6\xac\xc4\x89\x9a\xaf\xec\x2b\x7b\x92\x42\x0c\x30\x25\x5f\xbc\xd4\xe1\x88\x4e\xbe\xc4\x1e\x34\xa0\x05\x38\xf0\x8c\x0c\x41\xd8\x02\xc0\x55\xd7\x6d\x8d\xe9\x3b\x81\xfb\x63\xf3\x67\x62\xd1\xf1\xec\x93\x8a\x01\x3f\x24\x1b\x28\x1f\xe1\x12\x81\x8e\xdc\x36\xb4\xad\xa0\x64\x03\xf1\xf0\xba\x2b\xcd\xf4\xa8\x2c\x88\x1b\xd9\xf1\x7e\x1c\xda\x87\x24\x7d\xe6\x49\x64\xe8\x69\xec\xe5\x9f\x58\x8a\x3b\x86\x64\x32\xe4\x42\x29\x43\x84\x14\x9c\xa2\xa9\x87\xdc\x93\xc8\x4c\xff\x67\xf7\x12\x97\x8b\x2b\x05\x4b\x4f\xf3\xaa\x4a\x0b\xb8\xfa\xfd\x1d\x16\x34\xd8\xf2\x03\x5e\xe6\xc0\x84\x35\xbf\x81\x5a\x4a\x61\xff\x09\x00\x00\xff\xff\x96\x8d\xc4\x84\x27\x0a\x00\x00")

func templatesClientClientGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientClientGotmpl,
		"templates/client/client.gotmpl",
	)
}

func templatesClientClientGotmpl() (*asset, error) {
	bytes, err := templatesClientClientGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/client.gotmpl", size: 2599, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientFacadeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\x5d\x6f\x9b\x4a\x10\x7d\xe7\x57\xcc\xb5\x72\x25\xb8\x72\xf0\xfb\x95\xfc\xd4\x56\xfd\x78\x48\xa2\xda\x7f\x60\x0d\x03\xac\x0c\xbb\x74\x3f\x62\xb9\x91\xff\x7b\x67\x16\x70\xc0\x22\x2d\xe9\x53\xd6\xbb\x33\x67\xe6\x9c\x39\x13\x5a\x91\x1d\x45\x89\xf0\xf2\x02\xe9\x53\x7f\xbe\x5c\xa2\x68\xb3\x81\x7d\x25\x2d\x14\xb2\x46\x38\x09\x0b\x25\x2a\x34\xc2\x61\x0e\x87\x33\xb8\x0a\xc1\x9e\x44\x59\xa2\x01\xa7\x75\x9d\x72\xfc\xa7\x5c\x3a\xa9\x4a\x7a\x1c\xf2\x1a\x59\x56\x0e\x5a\xa3\x9f\x11\x0a\xef\x02\x54\x85\x0a\xce\xda\x83\xc1\x7b\xe3\xd5\x04\x69\x28\x01\x99\x6e\x1a\xa1\xf2\x28\x8a\x64\xd3\x6a\xe3\x20\x8e\x00\x56\x0a\xdd\xa6\x72\xae\x5d\xf1\x8f\x52\xba\xca\x1f\x52\x8a\xdc\x94\xfa\xbe\x47\x18\x1f\x39\xf2\x28\x1d\x07\xf3\xd1\x19\xa1\x6c\xc0\x5a\x9c\xba\xc9\x6a\x89\xca\x2d\x2b\xc7\x7f\x17\x46\xb6\x98\x2d\x8b\x44\x63\xb4\xb1\xef\xa2\xbb\x79\x16\xb5\xcc\x49\xc3\x65\x59\x03\x43\x0a\x26\x03\x90\x44\x34\xfd\xf4\x23\x16\xc2\xd7\xee\x6b\x90\xde\x92\x1b\xe8\xa9\x35\x52\xb9\x02\x56\xff\xfe\x58\x41\x4a\xfe\x08\xf1\xa8\x72\x18\xce\x5d\xee\xdd\x11\xcf\x6b\xb8\xa3\x26\x3c\xc2\xff\x5b\x48\x27\x20\xfc\x4a\x27\xb8\xc1\xeb\xc3\x6f\x50\x93\xde\x83\x08\x7d\x3f\xfc\x56\x79\xf2\x85\xfc\x49\x4d\x3e\x88\x86\x53\xe0\xcb\x7e\xff\x04\x1d\x8d\x34\x7a\x16\xe6\x1a\xbd\x85\x07\x3c\xf1\xeb\x87\xf0\x18\x2b\x59\x77\x90\x93\x6b\xc8\x0c\x92\x5a\x16\x04\x28\x3c\x2d\x28\x51\x78\x95\xdd\x20\x17\xda\x34\x82\x38\x5a\x67\x8a\xc6\xa5\xdf\xb1\x94\x74\x3c\x27\xf0\x1f\x13\x15\x36\xa3\x91\x8c\xf1\x5e\x88\x67\x3f\x80\x1d\x79\x61\x0d\x34\x67\x16\x8b\x8d\x91\x12\x74\xbc\xeb\x1e\xbf\xed\x1e\x1f\xd6\xb0\x5a\x25\x14\x2f\x8b\x10\xf5\xcf\x16\x88\x47\x40\x00\x20\x2e\xe3\xed\xe1\x74\xa0\xcd\x0b\x0e\x80\x03\x66\xc2\x5b\x04\xe9\xc2\xf6\xd2\x31\xa7\x4d\x1d\x6d\x71\xd8\xd2\x4c\xe7\x98\x06\xb0\x96\x48\x67\x31\xd5\xe0\x6a\x97\xae\xe2\x40\x6c\x3b\xae\x7a\xbd\x1c\xf8\xf6\x82\xf7\x69\x06\x9d\x37\x8a\x15\x8a\x27\x6b\x17\x88\x8d\x58\x27\xeb\x01\x29\x89\x2e\xc3\x5c\x96\x4c\xa3\x1b\xc4\x75\x0e\xf1\xeb\x62\xf7\x23\xda\x0f\x17\xd7\x0a\xef\x9a\x0c\xa1\xf0\x30\xa8\x7e\x3c\x1b\x94\x74\x31\xaf\x65\x48\x89\x6b\x0f\x93\x3d\x7a\x6c\x59\x6a\xa9\xd5\x67\xa3\x7d\x6b\x3b\x83\x73\xea\x7c\xf1\x6d\xf8\x1f\xdc\xff\x4a\x27\xd4\x46\x5a\x4d\x17\xaf\x57\x9b\x40\x7b\x11\xe7\xa1\x25\x2b\xda\xc9\xc3\x48\xb3\xc2\x46\xee\xdc\xe2\x1b\xf9\x24\x9a\xcf\x5c\x90\xe7\x0f\xf4\xe6\xf3\x59\x6e\xab\xc4\x71\x7c\x99\x76\xdb\x73\x43\x68\xff\xe6\x34\x99\x20\x33\xdc\xa1\x1b\x05\x55\xdc\x8b\x0d\x7b\xf0\x6a\x04\xdd\x7d\x56\x7a\xc2\xf4\x21\x01\x51\xd7\xb4\x09\x64\x04\x7f\x30\x68\xb5\x37\x19\xda\xce\x42\x71\xc6\xdd\xdd\xf4\x4c\x53\x9e\xd4\xf9\x8d\xc9\x92\xce\x34\x7f\x6d\x87\x79\x33\xa4\xf3\xd5\xa7\xe3\x27\x41\x7e\x05\x00\x00\xff\xff\x58\xb4\xed\xa4\xbe\x07\x00\x00")

func templatesClientFacadeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientFacadeGotmpl,
		"templates/client/facade.gotmpl",
	)
}

func templatesClientFacadeGotmpl() (*asset, error) {
	bytes, err := templatesClientFacadeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/facade.gotmpl", size: 1982, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\xdf\x6f\xdb\xb6\x13\x7f\xf7\x5f\x71\x5f\xa3\x5f\x40\x0a\x52\x79\xcf\x1b\x32\x20\xcd\xd2\xad\x7b\xe8\xb2\x36\xe8\x80\x15\xc5\xc0\xd8\x67\x8b\x8d\x24\x2a\x24\xe5\xd4\x33\xfc\xbf\xef\x8e\xa2\x55\x4a\x96\x1c\x19\xe9\x9e\xf6\x64\x8a\xbc\x9f\x9f\xcf\xf1\x74\x72\x29\xe6\xf7\x62\x85\xb0\xdd\x42\x72\xe3\xd7\xbb\xdd\x64\x32\x9b\xc1\x6d\x2a\x0d\x2c\x65\x86\xf0\x28\x0c\xac\xb0\x40\x2d\x2c\x2e\xe0\x6e\x03\x36\x45\x30\x8f\x62\xb5\x42\x0d\x56\xa9\x2c\x61\xf9\xeb\x85\xb4\xb2\x58\xd1\xe1\x5e\x2f\x97\xab\xd4\x42\xa9\xd5\x1a\x61\x59\x59\x67\x2a\xc5\x02\x36\xaa\x02\x8d\x2f\x75\x55\xb4\x2c\xed\x5d\xc0\x5c\xe5\xb9\x28\x16\x93\x89\xcc\x4b\xa5\x2d\x44\x13\x80\x69\x81\x76\x96\x5a\x5b\x4e\xf9\x61\x25\x6d\x5a\xdd\x25\x24\x38\x5b\xa9\x97\xde\x40\xb8\x64\xc9\x7b\x69\xc7\x09\xf3\xef\x38\x49\xd4\x5a\x69\x73\x52\x08\xb3\xb5\xc8\xe4\x82\xd2\x1a\xa7\x35\xcf\x24\x16\x14\x37\x09\x13\x27\x5a\x14\x44\x48\xf2\x13\x2e\x45\x95\xd9\x37\x0e\x0e\x43\x04\xd1\x51\xa9\x65\x61\x97\x30\xfd\xff\xc3\x14\x12\xa2\xcc\xc9\x63\xb1\x80\xfd\xba\xd6\x7d\x71\x8f\x9b\x73\x78\x41\x41\x54\x08\xdf\x5f\x40\xd2\x32\xc2\xa7\xb4\x82\x8e\x3d\x2f\xde\xb1\x1a\x53\x59\x9c\xb1\xa4\x30\x73\xca\xe9\x6f\x0a\xec\xad\xc8\x59\xec\x46\x68\x91\x1b\xe2\xad\xb0\x42\x16\x06\x44\x96\x39\x66\x4b\xde\x47\x8b\xda\x50\x99\x80\x61\x3b\xf4\xcb\x27\x97\x37\x6f\xd8\x6c\xa9\xc8\xe9\x64\xa9\xb4\xdb\x24\xdb\x69\x45\xcc\x87\xa6\x41\x95\x5c\x14\x52\x51\xad\x6c\x4a\x49\x8e\x33\x57\x7f\x06\x41\x68\xaa\x27\x2d\xad\xa5\x92\x22\xb3\x02\x18\xf1\xe4\x1d\x3e\x54\x68\xec\xe4\x6c\x36\x21\x05\x67\x74\x30\x60\x63\x75\x35\xb7\xb0\x6d\xa3\xed\x0f\x77\xbb\x81\x6c\xb7\x5b\xb9\x64\x4e\xcc\x5c\xcb\xd2\x45\xb6\x07\xaa\xbb\x19\xc2\x47\xf1\x40\x7f\x30\xbc\x4b\x16\xa9\xe2\x21\x2a\x94\x25\x8a\xcc\xa5\xd6\x62\x13\x43\x44\xc0\xd0\xd3\xdb\x2a\xcb\xc4\x5d\x86\x31\x9b\x69\x0c\xb2\xbf\x9f\xd5\x2d\xe7\xd8\x21\xaa\xbe\xbf\x7f\x10\x34\x78\xab\x3c\x1e\x0e\x29\x34\x1e\xba\xb2\x4e\xd1\xa1\xb6\xbf\x7e\xda\x03\xb7\xac\x8a\x39\x44\x6c\xfd\x1d\xce\x51\xae\x51\xef\xe3\x3c\x46\x7e\xdc\xf1\x17\x69\xa8\x4b\x79\x4f\xc8\x39\x39\x58\x31\xe2\xcb\x9c\xf7\x56\x92\x96\x94\xa2\xbb\x51\x35\x03\x6b\xc1\x41\x18\xf8\xf8\xc9\x6d\xba\x94\x5a\x94\xec\x11\x25\xb0\x18\x27\x8f\x8e\xc3\x8a\x17\xaf\xd4\x62\xe3\x04\xe3\x06\x10\x0f\x6b\x80\xa1\x87\xf8\x32\xcb\xd4\xe3\x75\x5e\xda\xcd\x07\x2e\x75\xd6\x20\x59\x4e\xda\x3d\x5f\x7f\x29\x29\x12\x53\xd3\x08\xff\xbb\x80\x42\x66\xb0\xf5\x10\x07\xc6\xc9\xf0\xef\x15\xea\xda\x6d\xed\x95\x90\x7f\xe0\xad\x1a\x63\x67\xd2\x03\x15\x6a\x35\xe1\xec\x76\x9c\xf6\x83\x1e\xac\x8c\x16\xc7\x4f\xc7\x48\x42\x30\x68\xee\xc2\x51\xd8\xa3\x4e\x5a\x5c\x4f\x98\x19\x96\x1b\x52\xa7\xf6\xd1\xaf\x1e\xe0\xf2\x70\xa8\xda\x68\x72\xea\xaf\x95\xce\x05\x5d\x59\xed\x2b\x38\x7c\x8e\x06\x1c\xc7\x4f\x86\xb6\xdd\x3a\xff\xb5\x8f\x3e\x82\x1b\xf8\x7a\xe2\xf3\xf0\x4d\xa7\x0d\xc3\x8d\x34\x15\x22\xc7\xae\x93\xf7\x68\xbf\x12\x1d\x75\xdb\xaf\xb7\x72\x3e\x60\x3d\xfe\xc1\x19\x6a\x51\xa4\xd1\x56\xba\xe0\x7d\xc6\xbe\x29\x8d\x81\xd8\x77\x9d\xde\xee\xd0\xa8\x2b\xe9\x46\xd8\xb4\x5d\x7e\x25\xed\xf4\x56\x5f\x27\xa1\x46\x73\x38\x9f\x31\xa4\xf5\xd5\xf4\xd9\x57\x42\x7a\xca\x25\xe0\xf3\x74\x65\x7f\x38\x16\xd3\x00\xa9\x5f\x50\x2c\x50\xb7\xb1\x4a\xdd\xde\x18\xb4\x02\xed\xff\x08\x5e\x1c\x75\x80\x56\xe3\xfa\x35\x0d\x72\x6d\x14\xe9\x05\x9e\xd7\x23\xdf\x08\x20\x1b\xf5\x27\x61\x3c\x05\xa2\x53\xd2\x6b\x85\x7d\x4a\x9b\x5e\x7e\xdb\x36\x3d\x64\x6e\x64\x9b\x1e\x52\x1f\xd3\xa6\x97\xcf\x69\xd3\x03\x8e\xe3\x27\x43\x1b\xdf\xa6\x7b\xe2\x1b\xd9\xa6\x9b\xaa\x1d\x2e\xaf\x7e\xe3\xff\x42\x97\x1e\x58\x9f\x32\x95\xec\x31\x73\x9a\xc1\xe5\xac\xa7\x9e\xb0\x5a\xaf\x52\x99\x2d\x5a\x44\x71\xc9\xba\x49\xde\xf4\xa3\xf9\xf1\x13\xcd\x60\xf4\xc9\xc6\xf5\x40\xb3\xd4\x5f\xe7\xb0\x76\x30\xba\x99\x6b\x78\x28\x3d\x9c\x48\x8f\x5c\x4c\x0f\xe4\xb1\x30\x2e\x40\x94\x25\x99\x88\x8e\x08\xb9\x9e\xd0\x93\x62\xb4\x8e\xe3\x83\xdb\x7d\xcc\x59\x53\xe2\xcf\xce\x2c\x24\xf5\x33\x7d\xc7\xe0\x62\xe8\x4e\xf1\x84\x9d\xfc\x4a\x22\xaf\x36\x75\xec\xc7\x33\x9d\x6e\xb7\xc9\x95\xca\x32\x9c\xf3\x77\x44\xad\xb1\xdb\x4d\xe3\xc1\xa9\xb3\x19\x39\x85\x2b\x8a\x11\x3d\x78\xcc\x2c\x33\x94\x13\x1d\x26\x49\x72\xea\xfb\xc4\x17\x7c\xf8\x4e\xd9\x77\xe0\xd1\x51\x8f\xb8\xda\xdf\x28\xe8\x9a\xd7\xc3\x87\x1a\xfc\xe6\x43\xa3\x7b\xa1\xdf\xcf\x53\xcc\x05\x49\x5c\xa9\xbc\xcc\xf0\xcb\x6f\x77\x9f\x89\xc4\x60\x3f\x78\x9f\x0c\xbf\x23\x2e\xc2\xf0\x86\x64\xdc\xc1\x9f\xa8\x55\xd0\x37\x77\xad\x68\x3b\xe0\x35\x41\x47\xcf\x7a\x83\x06\xcd\xc8\xaf\xc8\x4f\x86\x45\x44\x96\x62\xf8\x11\xbe\x3b\x50\x55\xda\x24\x8c\x87\x32\xf4\x7d\xf8\xa1\xfe\x33\x84\x5c\x5e\xf3\x09\x6b\x31\x2f\xde\xbc\x57\xa2\x00\xe8\x1b\xf6\x9f\x00\x00\x00\xff\xff\x8d\x14\xc9\x10\x9b\x12\x00\x00")

func templatesClientParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientParameterGotmpl,
		"templates/client/parameter.gotmpl",
	)
}

func templatesClientParameterGotmpl() (*asset, error) {
	bytes, err := templatesClientParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/parameter.gotmpl", size: 4763, mode: os.FileMode(420), modTime: time.Unix(1449388911, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesClientResponseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\xcd\x72\xdb\x36\x10\xbe\xf3\x29\xb6\x1c\x37\x23\x7a\x14\xea\xee\x8e\x0f\x8d\xe3\x49\x75\x68\xea\x71\xd2\x07\x80\xc9\x25\x89\x9a\x04\x59\x00\xb4\xa2\x7a\xf4\xee\x5d\xfc\x89\xa4\x44\x59\x4a\x7a\xa9\x2f\x92\xf7\x7f\xbf\xfd\x83\x5e\x5f\x21\xc7\x82\x0b\x84\x38\xab\x39\x0a\x2d\x51\x75\xad\x50\x18\xc3\x6e\xb7\xba\x26\x76\xc7\x54\xc6\x6a\xfe\x0f\x42\xfa\x99\x35\xb8\xdb\x45\x11\x51\x79\x01\xe9\x47\x54\x99\xe4\x9d\xe6\xad\x20\x61\x22\x1e\x51\xb0\x56\x68\x39\x07\x46\x88\x09\x44\xad\xfa\x86\x89\x31\x91\x34\x44\x4e\x1e\xae\x57\x91\xde\x76\x08\xf3\x9a\x4a\xcb\x3e\xd3\xf0\x1a\x81\x11\x90\x4c\x94\xc4\xfc\x0d\x59\x8e\x52\x59\x23\xc7\xc1\xad\x56\x30\x17\x1f\x90\x3b\xfa\xe2\x0c\xcd\xc7\x98\x7e\x6a\xbf\x9a\x50\x82\xd4\x58\xc3\xf8\xf9\x92\x55\xd8\x30\x47\x7a\x60\xdb\xba\x65\xb9\x67\x31\x92\x5c\x88\x56\x07\x99\x74\xad\x3e\x30\x85\xc6\x5a\x32\xa2\xdd\xb5\x4d\x57\xe3\xb7\x3f\x9e\xfe\x42\x4a\x6a\xb7\xbb\xde\x3b\x31\xde\xbd\xd8\x7c\x10\x54\x8a\xa2\x17\x19\x2c\x8c\xe4\x23\x66\xc8\x5f\x50\x86\xd8\x67\x6a\x47\xe4\x04\x24\x01\xf5\xe8\x8b\xbc\x08\xd5\x06\x57\xfc\x34\x30\x96\x90\xd1\x47\xdf\xa0\x84\x4a\xeb\xee\x99\xeb\xf4\xce\x13\x96\x50\xb4\xb2\x61\x5a\x99\x3a\x14\x8d\xd1\x29\x39\x7d\xdd\x26\x80\x52\xb6\xf2\x64\x5d\x88\x4c\x65\xd8\x7b\xac\x2c\x83\x24\x43\x5b\x19\x2d\x83\x28\x39\xa2\x34\x34\x4a\x8b\x40\x46\xcc\x49\x06\x4b\xe3\x06\x6e\x6e\x8d\xe6\x48\x74\x9f\x4a\xfa\x09\xb5\x73\xba\x88\x0d\x2e\x5e\x2d\x4e\x12\xf2\x40\xf6\x8d\xf6\x4f\xb7\x20\x78\x6d\x23\x05\x8a\x48\xf7\x52\xb8\xe0\x55\xba\x16\x2f\x84\x58\x6e\xe0\xb6\xb0\x3e\x30\x5d\x59\xaf\xb1\x0b\x38\xa6\x6f\x93\xb6\x20\xc2\x45\xae\x7d\xe9\x0e\xeb\x94\xce\x77\x9e\x49\xef\x38\x77\x6b\x62\x3f\x54\x17\x9b\x3a\x1b\x9f\xb3\x6b\x47\xef\x6c\x93\x4f\x48\xa3\x9e\x3e\xae\x70\xe7\xc7\x81\x29\xe0\x82\x8a\x54\xb0\x0c\xc1\xcc\x35\xc9\x79\xde\xa8\x98\x90\xfe\xde\xe6\x94\xdb\x03\xcb\x9e\x59\x69\xf3\xf9\x53\x34\x4c\xaa\x8a\xd5\xc4\xa5\x0e\xe3\x5d\xe0\x1d\x8c\xc5\x91\xe6\xd0\x0c\x1f\xda\x7c\xbb\x48\x86\x76\x3e\xdf\x04\x6f\x94\x2a\xcc\xf7\x6d\x08\xdf\xa3\x45\x05\x99\x62\x72\x38\xd3\x67\xed\x09\xdc\x2c\xe6\xc6\x3d\x19\xd7\xc3\x21\x3f\xbf\x51\x4e\xa2\x3f\xe4\x4b\x28\x07\x14\xc2\x30\x1f\xe3\x34\xe7\xe3\x30\x9b\x77\x2e\xa2\xf9\x1e\xf4\x39\x25\xbf\x5c\x86\xf1\x3e\xb3\x7d\xcb\x79\x29\x52\xa3\xfd\xb6\x67\x74\xbe\xb6\x6e\x24\x43\x9d\xa3\x88\x32\xfe\x5a\x71\x05\x05\xaf\x11\x36\xd4\x69\x25\x0a\x94\x4c\x63\x0e\x4f\x5b\xd0\x15\x82\xda\xb0\xb2\xa4\x45\xa3\xdb\xb6\x4e\x8d\xfc\x7d\xce\x35\x17\x25\x31\x83\x5e\xc3\xcb\x4a\x43\x27\xdb\x17\x84\xa2\xd7\xd6\x54\x85\x02\xb6\x6d\x4f\xe1\xbc\x97\xbd\x98\x58\x0a\x2e\x08\xce\x86\x0e\x58\x1e\x45\x11\x6f\xba\x56\x6a\x58\x50\xfc\xb1\x40\xbd\x32\x4b\x33\x36\xff\x94\x5c\x57\xfd\x53\x4a\x92\xab\xb2\x7d\xef\x2d\x8c\xbf\xfa\xf5\x7a\x99\xb0\xf9\xbc\x4c\xd2\x6d\xb3\xef\x0a\x61\x65\x17\x1f\xe5\x75\x99\x96\xbb\x18\x71\x34\xd9\xf6\x1f\xb1\x60\x7d\xad\xd7\x16\x0e\x77\x8c\x09\x57\x9a\xfe\x02\xe2\x9f\xff\x8e\x21\x9d\xdb\x30\x4e\xf7\xea\x19\xb7\x4b\xb8\xa2\x20\x7a\x34\xbd\x9a\x4e\x8c\x18\xae\xbf\xc8\x63\x7b\x5e\xfc\xc0\x6a\x12\xbd\xf1\x7c\x78\x74\x77\x67\xf4\x88\x38\x71\xcf\x7e\xe4\xbc\x3a\xe3\x09\x3c\xfe\xc7\x23\x9b\xc0\x62\xbf\x32\x5f\xdd\xc9\x6b\x89\x68\xa2\x55\x1b\xae\xb3\x6a\xd8\xe9\x77\xb4\xfb\x16\xc9\xf4\xea\x1e\x61\x19\x5c\xfa\x3b\x0c\x74\x5a\x94\xc5\xc7\xe3\x7a\x63\x89\x00\x2f\x4c\x1a\xcb\x54\xc2\x29\x78\xce\xd4\xe8\x0c\x99\xbf\x61\xaf\x38\x95\x74\xf6\x69\x31\x64\x69\xb7\xcb\xd5\xd1\xc6\xf0\xf0\xcf\x6d\x8c\xd1\xd6\x20\xe2\xd2\xaf\x0e\xf3\x17\x62\xf0\x5c\xb7\xb6\x7c\x94\x6b\xf5\xa5\xcf\x32\x54\x26\xd9\x77\x2e\xb4\xa5\xd1\x0f\xa7\xd3\x9a\xfa\x8c\x9b\x5f\x1f\xd6\xf7\x06\x57\x7b\x0c\xa7\x19\xd2\x51\xdf\x6b\x1e\x20\x9d\x8c\x2f\x65\x58\x83\xee\xc5\x69\x7b\x3f\x00\xe0\xfa\x96\x8a\x55\xcd\xb1\x6c\xf8\xb9\x23\x9f\x03\xff\xff\x0e\xfb\x8f\x01\xfe\x1d\x50\x8f\xee\x84\x33\x38\x87\xde\x38\xe0\x89\xaf\x5e\x3c\x8b\x76\xe3\x1f\x78\xa3\xd7\xda\x9c\xbb\x61\x2f\xd9\xd7\xf5\x85\x03\x45\x62\x1a\xe9\x46\x9a\x9b\x70\xf4\x33\x6a\x58\x51\x83\xf9\x93\x1d\xf3\xb6\xa9\x13\x0a\xde\xe8\x10\x6d\x7a\xff\x4d\x4b\xe6\xee\xb7\x0d\x70\xee\x87\x9c\xdf\xa6\x83\xb7\xbc\xcd\xcc\x23\x4b\x94\xe4\xc8\x28\xf9\x45\x7f\xd3\x98\xc7\x15\x8c\x2a\x66\x7e\x9e\x4d\x34\x95\xf5\xe4\xd5\x86\x80\xfe\x0d\x00\x00\xff\xff\x56\xd5\x77\x15\x5c\x0e\x00\x00")

func templatesClientResponseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesClientResponseGotmpl,
		"templates/client/response.gotmpl",
	)
}

func templatesClientResponseGotmpl() (*asset, error) {
	bytes, err := templatesClientResponseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/client/response.gotmpl", size: 3676, mode: os.FileMode(420), modTime: time.Unix(1448757061, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDocstringGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xc9\x4f\x2e\x2e\x29\xca\xcc\x4b\x57\xaa\xad\xad\xae\x56\xc8\x4c\x53\xd0\x0b\xc9\x2c\xc9\x49\x55\x00\x73\x91\xd9\x20\x29\x97\xd4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\xa0\x20\x17\x17\x48\x09\xaa\x18\x50\x24\x35\x2f\x05\xca\xc8\x29\x4e\x45\xd7\x06\x31\x16\x53\x0f\x48\x29\x98\x55\x90\x58\x9c\x9c\x98\x93\x59\x95\xaa\xa0\xe7\x97\x98\x0b\x12\x54\x00\x8a\x66\x94\xe6\x26\xe6\x21\x0b\xc2\xed\x01\xba\x01\xc8\x00\xd2\x80\x00\x00\x00\xff\xff\xd8\xea\xca\x52\xd4\x00\x00\x00")

func templatesDocstringGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDocstringGotmpl,
		"templates/docstring.gotmpl",
	)
}

func templatesDocstringGotmpl() (*asset, error) {
	bytes, err := templatesDocstringGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docstring.gotmpl", size: 212, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHeaderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\x57\x55\x24\x90\xc0\xdd\x23\xb1\x83\x05\x3b\x16\x5c\x60\x68\xc6\x8e\xd5\xc4\x0e\xce\xb8\x55\x64\xe5\xee\x38\x09\x46\x2a\xdd\x7d\x6b\xde\xbc\xf1\x1f\xe8\x78\x22\xcb\xc8\x59\x7f\x6c\x71\x9e\x95\x3a\x1c\xf0\xd9\xba\x11\xc6\x75\x8c\x0b\x8d\xb0\xec\x39\x92\x70\x83\xaf\x09\xd2\x32\xc6\x0b\x59\xcb\x11\x12\x42\xa7\x17\xfe\xad\x71\xe2\xbc\x2d\xc3\xba\xd7\x3b\xdb\x0a\x86\x18\xce\x0c\x93\x64\x55\xb5\xec\x31\x85\x84\xc8\x4f\x31\xf9\x2b\x53\x3d\x81\x63\xe8\x7b\xf2\x8d\x52\x39\x3b\x83\x10\xa1\xdf\xfb\x21\x44\x19\xa1\x5f\xd9\x50\xea\xa4\xbe\xe7\xd9\xad\x09\xf7\x0a\xa5\x41\x24\x5f\x9a\xdc\x42\x39\x97\x5f\x38\x2f\x06\xbb\xbb\xef\x1d\x74\x69\xb8\xe0\xec\x9b\xdf\xb4\x2d\xee\x4f\x3c\x3d\x62\x7f\xa6\x2e\x31\x9e\x5f\xfe\xce\xae\x82\x65\x58\x54\xf8\xe7\xda\xe8\x2b\xe1\x83\xaa\xe9\x27\x00\x00\xff\xff\xde\x13\x57\x0b\x5c\x01\x00\x00")

func templatesHeaderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesHeaderGotmpl,
		"templates/header.gotmpl",
	)
}

func templatesHeaderGotmpl() (*asset, error) {
	bytes, err := templatesHeaderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/header.gotmpl", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x8f\xbd\x0a\xc2\x30\x14\x85\xf7\x3c\x45\xe8\xd8\x21\xdd\x1d\xc5\x0a\x2e\x2e\xfa\x02\x97\xe6\x9a\x06\xf2\x53\xee\x0d\x58\x29\x7d\x77\xfb\x23\xb6\x59\xdc\xdd\x0e\x39\xe7\xbb\xe4\x1b\x06\x99\xd0\x77\x0e\x12\xca\xa2\x45\xd0\x48\x85\x54\x72\x1c\x85\x98\x2a\xfb\x90\xea\xc2\x75\xdf\x45\x4a\xa8\xa7\xd7\xaa\xcc\x00\x1d\x1b\x4e\x64\x83\x59\x99\x95\x08\x31\xcd\xd4\x11\x18\xef\xaf\x0e\xe7\x5b\xfc\x04\x63\x90\x0e\x3e\x6a\x74\x72\x9a\xa9\x2b\x78\x5c\x09\x74\x9c\x6d\xb4\xe5\x86\xac\xb7\x01\x52\xa4\xfd\x76\xc9\xa7\x7d\x7b\xb6\xe8\xf4\xe7\x4a\x98\x83\x28\xab\x2d\x67\x3f\xe5\xa6\x45\x0f\x3b\x35\x82\x60\x50\xaa\xba\x4f\x04\xb7\xa5\xe4\xaf\x41\xee\x2c\xfe\x45\xfa\xa7\xf3\x36\x7f\x07\x00\x00\xff\xff\xa8\x7f\x8f\x01\xf3\x01\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 499, mode: os.FileMode(420), modTime: time.Unix(1448757061, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelvalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xcd\x4e\xc3\x30\x10\x84\xef\x7e\x8a\x51\x55\x24\x90\x20\xbd\x23\x71\x83\x03\x37\x0e\xbc\xc0\x92\x6c\x1c\xab\xfe\xc3\x5e\xb7\x8a\x22\xbf\x3b\x4e\x43\xa5\xf6\xb6\xd2\x7c\x33\xfb\x45\xea\x8f\xa4\x19\xcb\xd2\x7d\x6d\x67\xad\x4a\x1d\x0e\xf8\x9e\x4c\xc6\x68\x2c\xe3\x4c\x19\x9a\x3d\x27\x12\x1e\xf0\x33\x43\x26\x46\x3e\x93\xd6\x9c\x20\x21\xd8\x6e\xe5\x3f\x06\x23\xc6\xeb\x16\x5e\x7b\xce\xe8\x49\x10\x53\x38\x31\xc6\x22\x97\xa9\x89\x3d\xe6\x50\x90\xf8\x25\x15\x7f\xb7\x74\x7d\x81\x3e\x38\x47\x7e\x50\xca\xb8\x18\x92\xe0\x51\xa1\xe9\x25\xf2\x4d\xb3\x7b\xe7\x91\x8a\x95\xcf\x4b\x94\x6b\x5d\x96\x98\x8c\x97\x11\xbb\x87\xdf\x1d\xba\x26\xbf\xc2\xec\x87\xff\x6b\xab\xed\x8f\x3c\x3f\x63\x7f\x22\x5b\x18\xaf\x6f\xe8\x6e\xfa\x6b\x56\x6b\x43\x71\xbb\xb4\xb1\x77\x73\x4f\x4a\x35\x48\xd8\x45\xbb\x6a\xee\x72\x3f\xb1\xa3\xc6\x99\x81\xc4\x04\x9f\xdb\x7f\x34\xee\x2f\x00\x00\xff\xff\x74\xd0\xe4\x0b\x53\x01\x00\x00")

func templatesModelvalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelvalidatorGotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templatesModelvalidatorGotmpl() (*asset, error) {
	bytes, err := templatesModelvalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/modelvalidator.gotmpl", size: 339, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemaGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\x4d\x6f\x1b\x37\x13\xbe\xeb\x57\xcc\x2b\xe8\x2d\xb4\x86\x20\x17\x41\x4f\x2e\x72\xb0\xe3\x7e\xe8\xd2\x14\xb5\x9b\x4b\x50\x20\xd4\xee\xac\xc5\x78\x77\x29\x93\x5c\x3b\xaa\xa1\xff\xde\x19\x92\x2b\x71\x57\x2b\x59\xea\x67\x80\x04\x31\x40\x91\xc3\x99\x67\x3e\x38\xf3\x48\xcf\xcf\x20\x73\x10\x55\x06\xd3\x99\xb9\x12\x06\x6f\x57\x4b\xe4\xf5\x77\x9f\x96\x4a\x5b\xcc\x60\xbd\xb6\xbc\x45\x82\x4b\x61\x52\x51\xc8\xdf\xe9\xfc\x27\x51\x22\x9d\x80\xac\x2c\xea\x5c\xa4\x74\x3e\x00\x92\x09\xba\xc6\x95\xb2\xac\x64\xd6\x1c\x27\x30\x56\x1a\xa6\xbf\xe0\x43\x2d\x35\x29\x9d\xfe\x28\xcc\x3b\xd2\x95\x09\x2b\x55\x65\x12\xd2\xb5\xb0\x76\x79\x2f\xed\x34\x6c\x8b\x79\x81\x64\x13\x2b\x46\xe0\x74\x83\x16\xd5\x1d\xd9\xbe\x2c\x8a\xb7\xf9\x66\x93\x2c\x92\xa1\xcb\x4a\x55\xab\x52\xd5\x86\xf6\xb7\x92\x3f\x6b\xb5\x44\x6d\x25\x9a\x58\x7c\x44\xf2\xb7\xf5\xb2\x40\x2f\x6b\xb1\x5c\x16\xc2\x22\x0c\x2d\x6f\xe6\x12\x8b\x6c\xc6\x98\x87\x30\xf5\x12\x58\x18\x2f\xbb\x15\x35\x56\xd7\xa9\xed\x93\x8d\xf0\xfa\x75\xc0\x48\x0e\x5f\x66\x99\x64\x77\x45\xd1\x02\x76\x7e\x06\x2d\x18\x99\x4a\x49\xbd\xac\xee\x48\xe9\x9e\x2b\x2d\xf9\xa5\x3f\x59\x6d\xe3\x79\xad\xd2\x9b\x43\x1a\x28\x71\x67\xe7\x1e\x63\x94\xd3\x3e\xc9\x26\xd1\xe3\x04\x4a\xb1\x7c\xef\x71\xfd\xd6\x32\x6f\xd2\x05\x96\x82\xcb\x66\x3f\x5e\x36\x45\xd1\x88\x73\xb6\x95\x9c\x91\xae\xe3\xe3\xd0\x48\xff\xa9\x10\xb8\xcb\x2f\x79\xef\x84\x22\xc7\xdf\x1f\xe5\x6f\x83\x2b\x4e\x7d\x58\xfb\xf2\xf1\x1f\xa6\x3f\x28\xf7\xc2\xf6\x14\x8b\x5b\xef\x54\xef\x7f\x50\xbc\x9d\x6c\x7d\xd1\xd5\xbb\x9b\xd2\x2f\xa6\x80\xd7\x83\x41\x5e\x57\x29\xfc\x5a\x95\x42\x9b\x85\x28\x7a\xc7\xc0\x58\xa3\xc8\x50\x83\x54\xd4\xe1\x79\x35\x81\x94\xba\x7a\x5d\xd2\x5e\xd3\xd6\xdf\x84\x0d\x9a\x04\xbd\x3a\x26\x80\x5a\x2b\x3a\xe6\x41\x72\x7e\x0e\x4f\x08\x15\xd2\xa4\xb0\x0a\x58\x3b\xd8\x85\x34\x60\x9f\x64\x8a\x13\x30\x0a\x72\xa9\x8d\xe5\xf1\xa3\x40\xc0\xbc\xce\x73\xd4\x74\x8f\xe7\x86\x53\x04\x17\xaf\x09\x4d\x6d\x65\xe1\x10\xd1\xc8\x08\x18\x13\x92\xa2\xec\xb1\xc8\xff\x5e\x43\x25\x0b\x67\x0f\xc8\x86\xad\x75\xc5\x1b\xee\x3e\xed\x71\x20\x48\x31\x6b\x9a\xaf\x2c\x17\x13\x3e\x5d\x39\x43\x63\x36\x93\x0c\x3c\x4e\xbb\xc0\x00\xc6\x4a\x72\xc4\xc1\xa4\xff\x0e\x33\x23\x26\xa8\x68\xd3\x85\x93\x7b\x14\x45\x8d\xa0\x72\xf7\x81\x9b\xc1\xb5\x34\xa9\x96\xa5\xac\x84\x55\xfa\x7b\x7e\x90\xdc\x2c\x9b\x62\x98\x92\x85\x47\xa1\xe1\x0e\xad\xeb\x19\xfe\xdd\xc2\x73\x27\xf1\xfd\x4a\x7c\xe5\xc1\x87\x8f\x46\x55\x17\x7c\x81\x3e\xda\x1c\x86\xff\x7f\x18\xee\xb9\xf2\xc1\xb9\x1c\x82\x43\x5e\x37\x29\x6c\x52\x37\xa6\x68\x4c\xe0\xab\x80\x26\xf9\xf6\xb8\x20\xb6\x54\x3e\xfa\xf2\xc6\x0d\x11\xf0\x25\x3e\x3e\x0a\xdf\x04\x86\x73\x95\xad\x86\x93\x26\x20\xd3\x23\xe2\x70\x02\x4c\x4a\xe6\x6d\x9c\xa4\xfd\x09\xa2\xbc\xd6\xc6\xd7\x66\x86\xc4\x70\xe8\x1c\xe1\x69\x21\x39\xcd\x9c\x28\xda\x4f\xa9\x00\xe8\xb1\x31\x19\xaa\x9b\xb7\xe3\xd2\xce\xb5\xe3\xea\x96\x2c\x9a\x27\xc9\xa5\x71\x82\x3b\x3e\xf9\x7e\x40\x8c\xee\x27\x30\x7a\xe4\xb0\xc6\xb2\x4d\xc7\x02\x48\x89\xcd\x41\x27\xb2\xa3\x7b\x3a\xbd\x70\xc7\xbe\xb6\x34\x9a\xba\xb0\x2c\x46\xaa\xc2\xc5\x23\x8a\xc0\x5f\xeb\x0b\x6e\x7f\x80\xf9\x5f\xa3\x3c\x9c\x06\x1d\x13\x16\x73\x27\x71\x8f\xe5\xbf\x8e\x16\xa5\xdd\x13\x1c\x7f\xf3\xea\x15\x55\x82\xac\x5c\x2d\x1d\x48\x92\xcb\xe3\x05\x90\xd7\xa7\x15\xcc\x80\x9a\x5e\x3c\x37\x39\x18\xcc\x5d\x67\xe6\x8d\xa2\x16\x8a\x9f\xde\xce\x3f\x62\xea\xe8\xad\x1f\xc4\x4c\x3f\xf7\x0e\x3a\x9e\x14\xa1\xc3\x35\x34\x9a\xb6\x02\x3d\x8e\x38\x36\xfb\x11\xe4\x5a\xc6\x77\x1b\xe5\x26\x4c\x2d\x8a\xd9\x6d\xef\x57\xfc\x52\xdc\x5c\x8f\x9c\x39\x40\xe4\xf7\x4f\x88\x46\x45\x4c\x66\x67\xe6\xa6\x9e\x07\x1e\x33\xe8\x61\xe6\xfb\x28\xf8\xe6\xfa\xe6\x9b\xc6\x7a\xed\xe6\x0b\x75\x80\x11\x35\x85\x14\xe5\x23\x6a\xc6\xc4\x33\xae\x85\x74\x34\xf5\xdb\x49\x8f\x03\x6e\xca\x1d\xf4\xe0\x79\x33\xb7\xf1\x81\x54\xf5\x64\xbe\x89\x44\xa8\xba\xee\xbb\x69\x5f\x79\xe7\x7a\x44\x9c\xaa\xed\xb5\xb6\x1f\x74\x44\x55\x97\xd2\x2a\x86\xeb\x4c\x36\x24\x6b\x3d\x38\x39\x04\x37\x68\x7b\xa3\x40\x35\x7f\x38\x0e\x09\x6c\x23\x51\xe1\xe1\x48\x9c\xe2\x0b\xb8\xde\xbe\xf5\x28\x2e\x98\xce\x62\xf0\xd9\x52\xca\x7f\x8d\x50\x36\x71\xfa\x4c\x98\xe4\x3f\xc4\x23\x5b\x19\x8f\x7c\x89\x66\x55\x76\x83\x5a\x3a\xbb\xba\xd3\xac\x7c\x9b\x68\xbe\xe9\x0c\x76\xbf\xea\xbc\x70\x73\x1f\x95\x6f\x29\x12\x3d\x42\xbd\x7a\x43\x05\x1f\xf8\x75\x23\x6c\x35\x7d\xed\x85\xdf\x3b\xdc\xe7\xad\x6c\x17\x97\x8f\x6c\x20\x4b\xaa\xc7\xc1\x3b\x0b\xe3\x02\xab\xd0\x71\x13\xf8\xfa\x44\x15\x7f\x71\xae\x11\x53\x0a\xce\xe0\x86\xd2\x19\x4f\x7d\x49\xef\xa2\x2e\x45\x15\x0f\x97\x4d\x7f\xeb\xb6\xb7\x18\xc4\xc6\xe6\x0e\x9a\x3d\x20\xce\x3a\x43\xe9\x6f\x99\xa9\xc9\xc6\xb1\x71\xae\x74\x29\xac\x61\x22\x9d\x97\x96\xa0\xdf\x49\x5a\xae\x12\xcf\x45\x5c\x1f\xdd\x32\x94\x41\x4f\xa3\xeb\xf9\x05\x28\x1a\x7b\xad\x6c\x2d\x84\xb9\x3e\xf4\x2c\xb6\x4f\xe9\x8f\x00\x00\x00\xff\xff\x32\xb7\x48\x50\xb0\x13\x00\x00")

func templatesSchemaGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemaGotmpl,
		"templates/schema.gotmpl",
	)
}

func templatesSchemaGotmpl() (*asset, error) {
	bytes, err := templatesSchemaGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schema.gotmpl", size: 5040, mode: os.FileMode(420), modTime: time.Unix(1449556235, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemabodyGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xbb\x6e\xdb\x30\x14\xdd\xf3\x15\x84\x90\x21\x09\x5a\x65\xef\xe6\x20\x7d\x78\x69\x0b\x24\xe8\x12\x14\x30\x2b\xd2\x09\x0b\x89\x14\x48\xaa\xad\x6a\xe8\xdf\xcb\x97\x24\xea\x61\x4b\x0d\x3c\x24\x32\x37\xd9\xbc\xcf\x73\x79\xcf\xe1\x6e\x07\x10\xde\x12\x8a\x41\x24\x92\x27\x9c\xc1\x1b\x86\xca\x08\x54\x95\x90\xbc\x48\x24\xd8\x9d\x01\xa0\x6c\x38\xa4\x8f\x18\xc4\xab\x34\xfd\xb2\x55\x87\xf6\x4f\xb2\x05\x8c\x83\x0b\x48\x11\x38\x8f\xd7\xe2\xae\xf8\x71\x5f\xe6\xca\x6a\x2d\x6e\xa0\xc0\xf5\xf7\xfb\x3f\x39\xe3\x12\xa3\x4b\xfd\x63\x45\x19\x2d\x33\x56\x08\x15\xa4\x0d\xfb\x95\xb3\x1c\x73\x49\xb0\xf0\x63\xab\x9a\xce\xe3\x5b\x22\x12\x4e\x32\x42\xa1\x64\xfc\x03\xc1\x29\x02\xf1\x67\x98\x61\xeb\xef\x2a\xa0\x4c\x9a\x0a\xda\x54\x87\x8a\xba\x6c\x7c\xb5\xc1\x7d\x91\xa7\x2e\x9a\xc4\x59\x9e\x42\xa9\xa0\xc8\x39\xf9\x25\xf5\xc1\x56\x67\x8c\x40\x6c\x0d\x70\x2a\xac\x69\xd7\xd2\x42\xd5\x33\x55\xf9\xbb\x3e\x07\x13\xce\x4b\x76\x38\x11\x45\xde\x1f\x16\xc5\xe6\x50\xe5\x8e\x3f\x41\xb1\x42\x88\x48\xc2\x28\x4c\x3b\x90\x5f\x5f\x81\x4e\x35\x88\x25\x2a\x15\xa1\x8f\x2a\xcb\x1e\x97\x1e\x5c\xe6\xa4\xfc\x06\x53\x82\xa0\xb6\xbe\x65\xc9\xdd\xa1\x08\x55\x05\xae\xae\x9b\x49\xeb\x61\x79\xe3\xb3\x03\x6d\x87\xe7\x06\x96\x43\x91\xa8\x04\x7f\xf1\x78\x48\xef\x5a\xb4\x98\x4f\x5a\x1a\x80\x40\x06\xf3\x07\xdb\xf1\xf7\x4e\x63\x76\x25\x74\x0d\xfb\x91\x00\x9b\x9f\x82\xd1\x77\xd1\xdb\x68\xa3\xfb\x31\x63\x68\x3a\xf3\x9c\xd6\x2a\xec\x7c\xb0\x6b\xeb\x67\xe1\x6c\x9c\x8f\x06\xb1\x89\x36\x85\xee\xc0\xc8\x02\xfb\x30\x0b\xcf\xba\x59\x0f\x4a\xff\xfe\xba\x6f\x9b\xb6\xa5\x07\xd5\xc0\x85\x6b\x6b\x9c\x6f\x6c\x8d\x1f\x99\x39\x19\x2c\x4b\x6f\x49\xcc\xf7\x80\x8f\x7a\x54\x17\x88\xa6\x26\x9a\xb3\x91\xbb\x7e\x8a\x04\x33\xd3\xc7\x28\xd7\xd1\xf9\x66\xb8\x24\x8b\xa7\x9c\x69\xf3\x1e\xd4\xc7\x61\xa0\xaa\xbe\xec\xfe\x7b\xc9\xf6\xf1\xbc\x07\xd3\xd1\x1e\x49\x3d\x46\x5a\x3a\xe5\xcc\x7d\xd2\x38\x83\x3e\x30\x0b\x79\x43\x8c\x2f\x58\x90\xf0\x09\x09\x3f\xb5\x65\x99\xad\xcf\xff\x7b\x9f\x96\x20\x8a\x8b\x14\xa9\xfa\xd3\x93\xa9\xdf\x44\x3e\xd5\xcb\x15\xb4\x2a\x68\x55\xd0\xaa\x97\xac\x55\xcd\x5d\x68\x72\x4c\x2d\xd0\x8c\x1d\x18\x23\x26\x8d\x9d\x82\x60\x3f\x5e\x1e\x40\xba\x2f\x87\xf5\x1b\x96\x11\xed\x20\xcb\x68\x33\xd4\x9a\x11\xe2\x0d\xa2\x73\xaa\xa2\xc3\x0a\x19\x74\x27\xe8\x4e\xd0\x9d\xd7\xa3\x3b\x8e\x87\x82\xf6\x04\xed\x79\x65\xda\xf3\x2f\x00\x00\xff\xff\x80\x4b\x58\xd4\xc8\x1c\x00\x00")

func templatesSchemabodyGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemabodyGotmpl,
		"templates/schemabody.gotmpl",
	)
}

func templatesSchemabodyGotmpl() (*asset, error) {
	bytes, err := templatesSchemabodyGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemabody.gotmpl", size: 7368, mode: os.FileMode(420), modTime: time.Unix(1448757061, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchematypeGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x3b\x0e\xc2\x30\x10\x05\x7b\x4e\xf1\x94\xca\xa6\xb0\xb8\x42\x68\x10\x05\xd0\x70\x01\x43\x36\x10\x69\xb3\x1b\x61\xa7\x88\xa2\xdc\x1d\x7f\xa4\x94\x9e\xd1\xf8\xed\xba\xa2\xa3\x7e\x10\x42\x13\xde\x5f\x1a\xfd\x73\x99\xa8\xc1\xb6\x25\x31\xf4\xf0\xd2\xc1\xe8\x0f\xc6\x30\x09\x5c\xcb\xfc\xe8\x2d\x3e\x11\x27\x0b\x77\x0d\xad\xa8\x2c\xa3\xce\xc1\xc2\x40\x34\x66\x76\xf3\x93\xad\x7d\xa4\x71\x62\x1f\xf7\xaf\xcf\xda\x2d\x0d\x5c\x95\xc4\x81\xf6\x99\x94\xdd\x67\x66\xff\xe2\xcc\x8e\x59\xa7\xe1\x62\xdd\x45\xf3\x49\xe5\x91\x60\x6d\x8b\x3c\xfc\x03\x00\x00\xff\xff\x8f\xd0\x8a\x11\xbc\x00\x00\x00")

func templatesSchematypeGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchematypeGotmpl,
		"templates/schematype.gotmpl",
	)
}

func templatesSchematypeGotmpl() (*asset, error) {
	bytes, err := templatesSchematypeGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schematype.gotmpl", size: 188, mode: os.FileMode(420), modTime: time.Unix(1445053809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemavalidatorGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\x5b\x6f\xdb\xb6\x17\x7f\xf7\xa7\xe0\xdf\xe8\x7f\xb0\x5b\x43\xed\xc3\xb0\x87\x75\x1d\x90\x75\xe9\x16\xac\x37\xb4\x5d\x5f\x8a\x62\x61\x24\x3a\x56\xa1\x8b\x2b\x4a\x59\x3c\x43\xdf\x7d\x87\xe2\x45\x14\x45\xc9\x52\x2c\x7b\x69\xa2\xbc\x44\xe2\xe5\xf0\xfc\x0e\xcf\xdd\xf6\x76\xeb\x91\xa5\x1f\x11\x34\x5d\x27\x7e\xe8\xa7\xfe\x15\xbc\x92\xc0\xbb\xc2\x81\xef\xe1\x34\x4e\xa6\x79\x3e\xd9\x6e\xfd\x25\x72\xde\x91\xaf\x99\x9f\x10\x0f\x06\xe0\x95\x24\x09\xfa\xf1\x19\x12\xeb\x88\x9a\x9d\x6d\xb7\xc8\x79\x8b\xd3\x15\xca\xf3\x05\x82\x17\xa0\x1b\xa5\x4b\x34\xfd\xff\xd7\x29\x72\x5e\xc6\x2e\x4e\xfd\x38\x92\x93\x40\x28\x8a\x53\xe4\x9c\xd1\x93\x28\x8e\x36\x61\x9c\x51\x98\x62\x24\x7e\x8b\x3f\x6c\xd6\x04\x5e\x80\x20\x89\x3c\x36\xe8\x7c\xc4\x41\x46\x4e\xaf\xd7\x09\xa1\x14\x88\x14\x0b\xed\x14\xe6\x62\xd3\xfc\x69\xc1\xe8\xff\x9e\xa1\xc8\x0f\xd0\x76\x82\x50\x42\xd2\x2c\x89\xd8\xe8\x84\x01\x2b\x56\x09\x80\xaf\xfc\xe8\x25\x89\x2e\xd3\x95\x1d\xa1\x9a\x9e\xf1\x63\x25\x4a\x0d\x30\xd0\x0b\x28\xc9\xf3\xe9\x54\x50\xde\x21\x01\x9a\xc2\xd4\xe5\xcc\x06\x6d\xce\xb6\xea\x2c\xf5\x83\x82\xaf\x5b\xa1\xc8\xe9\x63\x42\x29\x59\xea\x05\x05\xf8\x49\x49\x12\xd9\x81\x88\xc9\x63\xc1\x38\x87\x71\xc5\xcf\x79\x5f\xe5\xf2\xc3\x2c\x6c\x54\x2d\x36\x39\x1c\x8c\x65\x10\xe3\xf4\x87\xef\xdb\x35\x8b\xf3\x53\xbc\x9d\x5e\xbb\x41\x46\xc1\xf8\xd5\x70\x5f\x75\x6b\x01\xc7\x27\x8f\x0a\x4e\xf2\x63\x80\x93\xc3\xfd\xc0\x65\x41\xea\xaf\x03\xf2\x66\xd9\x80\x4f\xcd\x1f\x15\xa2\xc6\x55\x2f\x38\xa7\x91\x71\x51\x40\xec\x1d\x71\x09\xc8\x27\x79\x8d\x43\x60\xd2\x91\xd0\x18\x8b\x98\xba\xf0\xf6\x0f\x41\x0e\x9b\xe4\xa8\xb4\xc1\xf7\xd9\x72\xe9\x5f\xc3\x30\x23\x3b\x1c\x7e\x2b\xee\xae\x28\xe5\x7f\x19\xd9\x68\xe0\xbb\xa4\x1e\xd0\xe2\xa4\xb0\xca\xb3\x94\x84\xb4\x50\x61\xfe\x54\x4c\x43\x3c\x89\x3c\x72\xfd\x11\x27\x35\xc4\x42\x0c\xef\xd9\x0b\x48\x0f\x10\xc0\x3d\x05\x24\xb2\xdf\xd5\xbc\xee\x06\x8a\x63\x1a\xfd\x40\x31\x3b\xa4\x20\xbb\x41\x91\x3e\x41\x30\xd7\xd7\xfa\xdb\x30\x89\xd9\xff\x0a\x93\x62\xae\x17\xa6\x3f\x23\xff\x6b\x46\x5a\x60\x69\x0b\x6e\x89\xda\x0f\x61\xdc\xb7\xc5\x8a\x05\x0b\xd2\x22\xf9\x2b\x33\xd8\x62\x44\x25\x9b\xf2\xfd\x77\x4c\x3f\x72\x58\x70\x06\x95\xa3\x67\xf4\x17\x4c\x89\x48\x23\x27\x4b\xd8\x0e\x0c\x49\xc5\xc9\x73\x26\x9e\x27\x4f\x8d\xb1\x9f\x50\xa3\x29\x1b\x4b\x1f\x3d\x02\xee\xb7\xdb\xbf\x7d\x10\x8d\x23\x15\x05\xc1\x1a\x78\x5c\x07\x20\x60\x96\x52\xc7\x6b\x92\xa4\x9b\xd2\xf7\x20\x47\xf3\x50\xb9\x02\x6b\x7a\x2e\x24\x5d\x57\x88\xd7\xda\x66\x3e\x27\xef\x19\x19\x17\x8d\x2a\x37\x8d\x8e\x7d\xd5\xc8\x14\x19\xea\x70\xd9\x08\x68\xab\xfb\x65\xd7\x78\xe2\x79\x3e\x23\x8a\x83\xb7\x5c\x78\x3e\xa1\x25\x6e\xe4\xd8\xe6\x9d\xd7\x84\x78\x9a\x02\x68\xb7\x6d\x5d\xfe\x07\xd9\x28\x05\x48\x70\x74\x49\x1a\xb8\x2f\x18\x86\x29\x7e\xc5\x4d\x9c\x15\x4b\xda\xef\x5c\x2d\xe3\x68\x2d\xc8\xad\x7c\x2a\x2d\xbf\x53\x15\x57\x09\x5c\x3e\x98\xf1\x3a\xbe\xf8\x42\xdc\x54\x0f\xd8\x8d\xa7\x4a\x7b\x38\xa3\xaf\xb3\x20\xc0\x17\x01\xe3\x1f\x06\x1a\x2e\x54\x71\x55\xde\x45\xc5\x55\xd6\xe0\x3a\x42\xab\xc8\x0c\x14\x2a\xc4\x29\xdd\x0d\xaf\xc6\x4e\x09\xb5\x38\x16\xcc\x4a\x3c\x72\xdd\x73\x4e\x82\xe0\xcd\xb2\x3a\x54\xd3\xfd\xdd\xfa\x55\x3d\x44\x3d\x0d\x40\x50\x69\x03\x20\xc3\x11\xf3\xb9\xf4\x43\x06\x99\xa7\xae\xb5\x2a\x75\x7a\xfc\x58\x2a\x28\x94\x51\x08\xab\x05\xc8\x2f\x56\xd0\x55\x9c\x05\x1e\xba\x8c\xd1\x8a\x24\x64\x52\x73\x80\x65\x33\xc2\x64\x4a\x85\xb8\x33\xfa\x56\x76\x2a\xb8\x1a\xe9\x50\xec\x2d\x0c\xe9\x75\x99\xe8\x39\x89\xe7\x19\x4d\xe3\xf0\x45\x71\xa7\x50\xcd\x99\x84\xdc\x62\x9a\x5f\x79\x1b\x99\x93\x24\xc1\x1b\x73\xb3\x91\x6e\xd6\x77\xbd\xc2\x6b\x63\x4b\xd5\xcd\x0b\xf1\xcb\x1d\x45\xd8\xa3\xcf\x63\x58\x4c\xae\xdf\x14\xb6\xa1\xdd\xc1\x59\x93\xcb\xac\x1c\x60\x9a\x54\x71\x46\x4b\xc6\xec\xae\x48\x88\x2b\x91\xc7\x08\x3c\x57\x98\xf9\x57\xe4\x42\x2c\xa9\x45\x15\xf4\xe9\x33\x38\x20\x92\x2c\xb1\x4b\xb6\xe0\x8a\xb3\xc8\x45\x33\x4b\x7c\x42\x0f\x95\xb9\x80\xcd\xc5\x49\x4a\x3c\x6b\x3a\xc7\x2d\x88\xdb\x0d\x23\x53\x16\x22\x5c\x41\xe7\x68\x77\xa0\x5b\x83\x7f\x5c\xa0\x40\x3a\x43\x5e\xe6\x2f\xd8\xc6\x8c\x54\x1d\x38\xc7\xce\x5c\x21\x97\xd2\x9c\x99\x36\x8b\x26\x60\xeb\xdc\xb3\xd8\x41\x3f\x2b\x5d\x02\x42\x4c\x3c\xe0\x44\x40\x12\xad\xb4\x8b\xb5\xa5\x07\xfa\x42\xe3\x08\x12\xcb\x10\x27\x74\x85\x83\xd9\xa7\xcf\x17\x1b\xf0\x3c\xe7\x40\x82\xcd\x28\xe1\x9f\x43\x05\xf8\x1d\x50\xaf\xfb\x22\xf6\xa7\xf9\x23\xf6\xca\xcf\x60\xe1\xf0\x2f\x80\x5b\x86\x3c\xc6\x9d\xdc\xd2\x8c\x09\xe1\xf5\x1a\x84\x3c\x6b\x5a\x01\x24\xe7\xea\x98\x7c\xa2\x83\x51\x71\xca\x22\x7f\x21\xf8\x45\xe3\xc9\x36\x68\x15\x60\x79\xe9\x79\x61\x85\x25\xa2\x16\x1e\x49\x08\xac\x49\x59\xcb\x35\x3d\x35\xf6\x41\x8b\xca\x3e\xb0\xe9\xac\x18\xed\xa1\xb5\x8a\xb7\x9b\xaa\xae\x74\xc9\x1d\xf4\xb7\x94\x43\x6f\x25\x56\x8e\xbf\x9f\x26\xeb\xb7\x73\x14\x75\xd6\x20\xb6\xe9\xb4\x5a\x36\xb8\x62\x6b\xb4\xf7\x53\xee\xf6\x6c\xb4\xa3\x9b\xe6\x89\xce\xed\xf3\xd5\x8a\xaf\xc3\x3a\xec\x12\xfe\x1d\xf3\xda\x1a\xb0\x36\x35\x57\xcb\x0e\xe1\xbf\x15\xf1\x3d\xf4\x5c\x7b\x82\x8c\x52\x26\xe1\x8a\x27\x8a\xd2\x95\x4f\xd9\xe9\xab\x2c\xc4\x91\x7e\xba\x52\x61\xa3\xef\x81\xb4\x1e\x42\x99\x3b\xd5\xb2\xaa\x06\xbb\x7a\x58\x0b\x2f\xfb\x9a\x81\x59\x58\x30\x0d\x5f\x86\x29\x70\x7d\xe9\xc3\xe3\x46\xd7\xe2\x52\x2f\x8b\x31\x5e\x4b\x9a\xd5\x83\x50\x09\x81\xb1\xec\x90\x18\xbd\x11\xb5\x72\x9f\x5c\x9a\x53\x18\x24\x9f\xae\x91\xea\x9c\x53\xd7\x76\x76\xca\xab\x85\x98\x84\x72\x89\xd7\x5a\x95\xa4\x4b\x89\xd5\x3c\xb3\x88\x05\xf6\x5f\x7d\xea\x32\xb1\x44\x8c\xde\x0b\x26\x17\x7e\xb3\x73\x34\x6b\x93\xf9\xbc\xee\x33\x7a\xb6\xe5\x9a\xab\x4f\x6e\x53\xb4\x34\x77\x78\x59\xb0\x45\x73\xcd\x8f\xc8\x04\xbf\x8a\x5d\x1f\xdf\x5d\xdc\xe5\x55\xef\xd0\xbb\xdd\xc4\x3b\xa5\x2d\x38\x1a\x51\x98\x9c\xca\x56\xc0\x8c\xdb\x72\xd9\x0e\xd0\x1a\x7e\x73\xde\x06\x68\x61\xb6\xca\xa4\xea\x7d\x74\x28\xf8\x77\xb2\xaa\x0b\x58\x7f\xde\xcf\xe2\x06\xb3\xb7\x9b\x5a\xdb\x4d\x6c\xad\x62\x69\x4d\x76\x36\xa8\x95\x1d\xc4\xc6\x20\x06\xb1\x8e\x44\x3f\x3d\xfd\x56\x6d\x4b\x25\x8f\x7b\xf1\x54\x64\x0d\xd3\xe9\x02\x4d\x2f\x62\x6f\x33\x5d\xd8\x28\xec\x61\x5b\x9c\x39\xd6\xab\x67\x29\x15\xfa\x19\x3d\xa9\x25\x18\x71\x42\x1d\x16\xdf\x63\xea\xa7\xa4\x54\x94\x53\x36\xc3\x76\x39\x8e\x33\xb7\x27\x21\x36\x35\x55\x1f\x19\x36\xe9\x9f\xd9\x22\x31\x53\xef\x07\xf6\x0f\x50\xf7\xe8\x9b\x1c\xa1\x0a\x3d\x5c\x2a\xde\x41\x1c\x77\x24\x37\xef\x82\xd4\x96\xac\xef\xde\x37\x64\xf6\xae\x29\x4c\x2d\x97\x3d\x7c\x47\xa6\x1d\xeb\x7d\xef\xd3\x74\x95\xce\x9d\xeb\xde\x74\x06\xde\xdf\x7e\x0e\xd2\xe9\x69\x33\xa2\x81\xda\x3f\xd5\x4f\x0b\x45\xfa\x60\x1f\x1f\x23\x91\x50\xf3\xfa\xe7\x54\x47\x0e\x4c\x96\x0f\xca\xfa\x59\x5c\xc3\xcd\x8e\x71\xeb\xc0\x71\x6b\x98\xae\x6b\xbb\x44\x6e\xdc\x8b\x3d\x82\xd5\x1d\xb8\x1f\xdb\x55\x30\xf7\x22\x13\xdc\xd1\xbb\xed\xb8\x79\x78\xdb\xda\x79\xe4\x30\x7d\x5e\xf8\x1b\xae\x11\xd0\xd4\x04\x3e\x9e\xe5\x74\xe9\xeb\x76\xf8\xae\x98\x21\x39\x5d\x70\xe6\x87\xf7\x7a\x43\x38\x6f\x2d\x63\x07\x11\xf1\x58\xed\x8e\xd5\xee\x98\x35\x8c\xd5\xee\x58\xed\x8e\xd5\xee\x58\xed\xde\xa2\x48\x34\x56\xbb\x63\xdc\x1a\xab\xdd\xb1\xda\xbd\xdd\x99\xe0\xbd\xaf\x76\xef\x6a\x89\x3a\x69\xab\x51\x6b\xbf\xf2\xd1\x7f\x73\xd9\x23\xa8\xdf\x8b\x5c\xb9\x57\x20\x1f\x20\x3f\xfe\x26\xe3\x76\xc7\xf4\xf8\xa0\x89\xf0\x80\x39\x6f\xab\x5b\xa8\xeb\x58\x17\x15\xec\x66\xe6\xf2\x8b\x83\xe6\x1d\x96\x2d\x20\x73\xc6\xf6\xc5\x42\xfe\xb3\xbb\xca\xcf\x73\x77\xfd\xca\xce\x69\xe6\x5c\x88\x6e\x97\x0f\xb2\xea\xad\xf9\xf5\x2b\x43\xdc\x55\xc7\xf4\x6f\x00\x00\x00\xff\xff\x6a\x07\x6c\x13\x06\x45\x00\x00")

func templatesSchemavalidatorGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemavalidatorGotmpl,
		"templates/schemavalidator.gotmpl",
	)
}

func templatesSchemavalidatorGotmpl() (*asset, error) {
	bytes, err := templatesSchemavalidatorGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemavalidator.gotmpl", size: 17670, mode: os.FileMode(420), modTime: time.Unix(1449939631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerBuilderGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xeb\x6f\xdb\xba\x15\xff\x3c\xff\x15\x07\x46\xef\x20\x05\xbe\x4e\x3e\x0e\x01\x32\x20\xb7\xbd\xc3\xed\x1e\x5d\x91\x14\xdb\x87\x22\x18\x18\x89\xb6\x89\xe8\x55\x92\x8a\x97\x19\xfe\xdf\x77\x0e\xc9\xa3\x87\x25\x39\x89\x9b\x0e\x0b\x8a\x42\x16\x0f\xcf\xfb\xf1\x23\x55\x89\xe4\x41\xac\x25\xec\x76\xcb\xcf\xfe\x71\xbf\x9f\xed\x76\xf0\x8e\x17\x2e\xaf\x80\x57\x00\x97\x66\xe7\xe7\xf0\x65\xa3\x0c\xac\x54\x26\x61\x2b\x0c\xac\x65\x21\xb5\xb0\x32\x85\xfb\x27\xb0\x1b\x09\x66\x2b\xd6\x6b\xa9\xc1\x96\x65\xb6\x24\xfa\x5f\x53\x65\x55\xb1\xc6\x45\xde\x97\xab\xf5\xc6\x42\xa5\xcb\x47\x09\xab\xda\x3a\x56\x1b\x59\xc0\x53\x59\x83\x96\x3f\xeb\xba\xe8\x71\x62\x11\x90\x94\x79\x2e\x8a\x74\x36\x53\x79\x55\x6a\x0b\xd1\x0c\x60\x6e\xac\x46\xee\x66\x4e\xcf\x85\xb4\xe7\x1b\x6b\x2b\xf7\x63\xad\xec\xa6\xbe\x5f\xe2\xa6\xf3\x75\xf9\x73\x60\xd6\x7d\x24\xca\x07\x65\x5f\x46\x6c\x2a\x99\xbc\x90\xd2\xea\x55\xfe\x42\xae\x41\x85\xf3\x5c\xa5\x69\x26\xb7\x42\xcb\xd7\xed\x33\x32\xa9\xb5\xb2\x4f\xf3\x19\x6e\xc3\xb8\x69\x51\x60\xa0\x96\x1f\xe4\x4a\xd4\x99\xfd\xe8\xdc\x64\x30\x70\xb8\x54\xa1\x9b\xec\x0a\xe6\x3f\x7d\x9b\xc3\x92\x62\xe9\x36\xc8\x22\x6d\x9e\xfd\xe6\x77\x0f\xf2\x69\x01\xef\x1e\x45\x56\xfb\xf0\xf7\xb8\xd0\x2a\x3e\xc1\x01\xc3\x40\x7e\xc0\x35\x76\xf9\xf2\x49\x6e\x89\x5a\x98\x44\x64\xea\x3f\xa8\xdd\x27\x91\x13\xe9\xf5\xe7\x8f\x90\x68\x89\x81\x35\x20\xa0\x90\x5b\x18\x25\x03\x55\x18\x2b\x8a\x44\xce\x56\x75\x91\x1c\xe3\x16\x51\x8c\xe0\x8c\xfe\x5f\x7e\x28\x93\x3a\x97\x85\x8d\xe1\x6c\x52\xf8\xce\x29\xbb\xbc\x91\x89\x54\x8f\x52\xd3\x0a\x8a\x43\x93\x7f\x3f\xb5\x85\x76\x00\x90\x80\x4b\xe0\xa7\x85\x7b\xb7\xc1\xbc\xcc\xa4\x36\x97\x90\x8b\x07\x19\xe5\xa2\xfa\xea\x13\xf3\x8e\x42\xb5\xfc\xcd\x2f\xc7\x9e\x78\x55\xea\x5c\x58\xa4\x05\x9f\x2b\x1c\x2f\xbf\x9a\xfa\x1f\xef\xcb\xc2\xa0\x09\x48\x35\x47\x75\x98\x84\xdf\xa2\x3e\xf3\x1e\xf9\x67\x5d\xa6\x75\x72\x48\xce\x6f\x99\x7c\x4f\x79\xa2\xa5\xad\x75\x31\x34\x7d\x46\xf5\x7d\xc4\x5d\x3b\x50\x2b\x4c\x87\x62\x55\xfa\x5c\xe0\x5f\x28\xcc\x24\x5a\x55\x56\x95\x85\x5b\x19\xbc\x75\xe4\x32\x33\xc4\x8a\x2a\x1b\x7f\x6d\x6a\x2c\xe5\x5e\x9c\xc9\xbf\x9c\x3a\xcd\x03\x9c\x9d\xcf\xec\x53\x25\xc7\x73\x83\xd4\x42\x17\xd6\x89\x75\xc1\x74\xf1\xef\xfc\xf5\x53\x01\x09\x92\xb2\xb0\xf2\xdf\xb6\x25\x68\xeb\x6e\xf9\xde\xaf\xcd\xda\x58\x32\xd5\x44\x30\x67\x4d\x20\x1b\x7e\x21\x9c\x37\x72\xad\xf0\xf1\x69\x36\x08\x26\x78\x3e\xb3\x41\xd8\xda\x85\xdd\x2e\x14\x31\xef\xd9\xef\xb1\x88\x46\xcd\x0f\x14\x1a\x23\x4a\x02\x49\x65\x41\x36\xfa\x97\xa8\x1c\xfe\x74\xd9\xf0\x37\x99\x2a\xf1\x85\xdc\x88\x79\x80\xed\x17\x77\x93\x53\x7d\xb1\x1e\xe1\x1b\xda\x0c\xab\xa2\xdd\x06\x0c\x4c\xa8\xf3\xa0\x28\xdb\x30\xad\x68\xa0\xe8\x2b\x5a\xf1\xcb\xd3\x15\x6d\xf8\xb2\xa2\xfc\x62\x5c\xd1\xdb\xd0\x2d\xb1\x38\x54\xa1\x28\x31\x4d\x20\x70\xa9\x6c\x7e\x11\x46\x25\xd7\xb5\xdd\x8c\x58\xf2\xf1\x03\xe5\x1b\xae\xf5\x6c\xa0\x96\xe4\xd2\xde\x6e\x84\x05\x8b\xa5\x6f\xa0\x36\x52\x17\xa4\x1f\xa6\x09\x71\x30\xdb\x52\xa7\xee\x87\x2f\x3c\x6f\xbb\x2a\x12\x55\x89\x0c\xa5\xa3\x28\x85\xd3\x50\x6a\xca\x26\x5c\x44\x19\x98\xad\x2a\x11\x8e\xf1\x16\x47\x01\xdc\x93\x62\x6e\x65\xe0\x89\x56\x2f\xd2\x25\xf2\x69\xb4\x08\xe9\x14\x43\xe4\xeb\xb4\x28\x71\x5a\x82\xfc\x46\xc1\x0a\x92\x61\x8e\xed\x1b\x85\x8a\x44\xee\xd0\xd7\x31\xb2\x39\xeb\xd6\x5f\x87\x72\xbf\x5f\x80\xd4\xba\xd4\x71\xeb\x57\xf6\x19\x96\xe0\x5f\xe4\xd3\x77\x3b\x4d\x20\x5e\x78\x40\x08\x70\xaa\x9b\xd0\x43\x08\x41\x4a\x62\x00\xa2\x52\x40\x63\x8a\x8c\xe0\xe6\x42\x60\x43\xa5\x48\xa2\x3c\xb6\xc0\x26\x75\x5b\xd6\x3a\x91\x3c\xb2\x9e\x73\xe9\x0f\x74\xe5\x78\xb2\xfe\xbd\x22\xd0\xe3\x73\x74\xaa\xae\x42\x27\x02\x23\xb1\x09\x91\x59\x25\x6f\xe2\x26\xe6\x8a\x6b\xb2\xe5\x36\xe4\x53\x05\xc6\x02\x5c\xb4\x0b\xd9\x62\x41\x06\x88\xae\xdd\x37\xd0\x71\xd9\x24\xc7\x34\xaf\x9e\xb5\x68\xd8\xad\xd4\x8f\xf2\x57\x72\x09\x20\x3e\xc4\x3d\x19\x46\xc9\xc1\x41\x0c\xa5\xe4\xf7\xda\x4f\xaa\x74\x41\xc6\x68\x49\xaf\x04\xf7\x50\xb6\xd5\xf3\xbb\xaf\xad\x03\x92\x09\x6e\x47\xbf\xd0\xb3\x86\x72\x1b\x2a\x89\x40\x28\xd2\x75\x84\xba\x81\x4c\x71\x76\xbd\xfd\x46\x9a\x0a\x5d\x2e\xff\x89\x7d\x42\xea\x05\x9c\x85\xb7\xdf\x6a\x69\x6c\x13\x3a\x0f\x84\x6f\xa5\x3d\x1c\xb3\x4d\x20\x58\xb5\x8a\x57\x72\xea\x6c\xbe\x99\x39\x1c\x13\x0d\x91\xc7\xe4\xe8\x8d\x47\x44\x45\x79\xd3\x2a\x39\x41\x77\xb3\xdf\x0d\x98\x2e\x0f\xe7\xcc\x15\x34\x1b\x07\x66\x34\x53\x8a\x2b\xb0\x6b\x49\xc2\x8b\x6f\x65\x09\x4b\x7b\xa5\x25\x8d\x92\x43\x4b\x0e\xa3\x31\x66\xc6\x1b\x05\xe4\x30\x1a\x71\xd0\x9d\x54\x9f\xc2\x57\x87\xb1\xe8\x6b\xfd\xbf\x70\xfe\xa1\xe7\x5f\xa3\x35\x6f\x0a\x5a\xff\x29\x40\x9f\xae\xb6\xdc\xe4\xb1\x80\x03\xdf\x00\x90\x4e\xd1\x35\x08\xf0\x3a\x76\x51\xd5\x51\x65\x59\xa0\x57\xf2\x26\x28\xe4\x79\xf5\x61\x52\x6d\x6c\x99\x07\x05\x01\x8f\x2f\x2a\x15\xb6\xd4\xa7\x68\xda\x97\x12\xb9\xd9\xcf\x73\x38\xf0\x0f\x26\x78\x8a\x45\x2b\x8e\x17\xfe\xc1\x2f\xe2\xf1\x53\x09\xdb\xb5\xbc\x4e\x53\x27\x80\x39\x77\x78\x71\x5b\x0a\xbc\x24\xaf\xc8\x6e\x70\xc2\x48\x69\xc7\xe0\xb8\x51\xa7\xb8\x81\xe5\x62\xc4\x7c\xdb\x26\x4b\x1e\x85\x86\xba\xe8\x24\xc6\xd7\xbb\x63\x48\x17\xdf\xe2\xa0\x19\x9a\x7f\x1c\xa6\x5e\x5d\x41\xa1\x32\xf0\xa7\xb3\x9e\xb4\x2b\x04\x03\x15\x0e\x9b\xa8\xfb\x76\xe1\xb0\xe6\x34\xbf\x79\xec\x4e\x4a\xcf\x60\xdd\x57\xa9\xda\x00\xd5\x37\x52\x95\xf9\x1d\x53\x75\x0a\xed\xbe\x40\xeb\x16\x01\xbd\x91\xbe\xc4\xeb\x98\xae\x5d\xb0\xf3\x2a\xc7\x32\x40\x79\x23\x3d\x03\xbb\x81\xaa\x5e\xa7\x4c\x16\x3d\x2e\x31\xfc\x11\x2e\x82\xcc\xd0\x91\xa8\x98\x1d\xae\x58\x45\xf3\x5c\x19\x43\x4d\xb0\x5b\x79\x97\xf0\x93\x99\x33\x3c\x37\xcb\x3f\x97\xaa\x38\x54\x0c\xff\xc5\xf1\xc1\x59\x1d\x6d\xc3\xea\xee\xa1\x25\xec\x25\xb0\x26\xb8\x21\x42\xb9\x75\x11\x9f\x80\x35\x7a\xae\xe8\xe0\x41\x95\x9e\x36\xad\x3b\xe2\xa2\x86\x1b\xe6\x07\x8f\xea\x57\x42\x27\xe7\xad\xc9\xee\xdd\x8a\xf3\xd6\x5e\xb7\x20\xbf\xd4\xa6\xb1\x98\x3a\x97\xe8\x2d\x35\x30\x97\x4e\xfc\x6a\xa5\x68\x02\x85\xf4\x07\x93\x6c\x24\xcd\xad\x13\xcc\x1f\xc8\x8f\x02\xb3\xee\x9d\x80\xbb\x64\xe0\x62\xbb\x75\xeb\xf1\xe1\x9d\x01\x9d\x4d\x7b\xcc\x42\x9b\xa7\x33\xd4\x54\x9d\x6a\x69\x68\xf4\x5f\x5e\x8d\x5e\x29\x0d\x38\xc6\xfe\x3e\x02\xfc\x74\xf0\x7a\xd2\x66\x5f\x61\xac\x77\xb8\xc1\x42\x2c\x9c\x6c\x1c\x69\x78\xf3\x82\xbe\x41\x7f\x09\x1e\xb3\xa8\x74\xb0\x43\xe0\x01\xfd\x72\xc6\x17\x1f\x23\x27\x68\xaf\xfe\x57\x92\x71\x87\x45\xc8\xe1\x58\x36\x24\x91\x0f\x48\xbd\x80\xaa\x3d\xae\x76\x0e\x52\x6d\xca\x4c\x27\xcc\x44\xdb\x72\x4c\xe3\x7d\xdc\x76\x9a\xbe\x9a\xdd\x43\xeb\x94\x9e\x2d\x4d\x08\xba\xcb\x0c\xf6\xec\xf2\x63\xb1\xf0\xb9\x8f\xe7\xd6\x37\x57\x1f\x79\xe2\x21\xf2\x40\xfd\xee\xaf\x7d\xe8\x4f\x81\xb3\xb7\xc1\xf7\xab\xcc\xc8\xfd\xbe\xdf\x39\xda\xbd\x1e\x21\xf0\xa0\xeb\x57\x14\x5f\x1c\x8d\x15\x53\x0b\x3b\x4f\xaa\xa3\xae\xc0\x16\xee\x9b\x06\x0c\x8c\xd6\x4b\x33\xde\xdb\x52\xe9\x01\x85\xe7\xeb\x83\x39\x70\x69\xfc\x6b\x01\xb9\x6d\x6b\xa2\xa3\x48\xaf\x2c\x72\x3b\x2c\x8a\x9e\xe4\xde\xca\x75\x96\x61\xdb\x52\xce\x6a\x3d\xac\x94\x83\x3b\xad\xb6\x64\x42\xde\x0d\x49\x28\x0b\x5f\x89\x80\x46\x32\xe4\x2d\xf3\x85\xd1\x46\x3f\x5f\xf8\xfe\xee\x07\xe4\x4b\x57\xe0\x8b\xf3\xa5\xc1\x58\x9c\x2f\x7d\xb0\xf6\x7c\xba\x30\x83\x37\x48\x97\x9e\xe4\xff\x9b\x74\xe9\xdc\x8e\xfe\xc8\x74\x09\x20\xaa\x03\x50\xba\xd7\xe6\x4d\xb6\x34\x57\x72\xdf\x0b\x52\x5a\x79\xa3\x08\x25\xea\x4a\x5f\xc0\x7d\x59\x66\x1e\x86\x8c\xa2\xcc\xe6\xf2\xbf\x87\x28\x5b\x6b\xb1\xeb\x0b\xf4\x41\x70\xd0\x66\x01\xd8\xfe\x2f\xc7\x22\xc0\x8c\xbe\x76\x74\xba\x6b\x1d\xe7\x76\x92\xc3\x4e\x30\x98\xc6\x72\xb0\xe7\xbd\xc0\x71\x14\x1d\xb1\x87\x3f\x79\xf4\xcc\x39\x42\x06\x9d\x4f\x22\x9f\xe4\xf6\xa6\xac\xad\xb8\xcf\x64\xf8\x3a\x32\xd4\x73\xe9\xbe\x81\x0d\x39\x2e\x48\x5c\x0b\xa3\xa9\x7b\x1f\x80\xfc\x63\xbe\x3f\xfe\x15\xed\xc8\xc9\xe1\x48\x1c\x08\xb6\xf8\x77\xa1\x66\x5e\x75\xa5\x39\xf5\xdd\x71\xc4\x23\xc1\x97\x23\x4e\x39\x7a\x86\x19\xbf\x11\xe6\x3b\x3a\x04\xc6\x9d\xaf\xa5\xe4\x8e\x06\xf0\xdb\x12\x51\x0b\xad\x53\x55\xd1\x27\xb1\x12\x05\xc2\x6f\x5f\xbe\x7c\xa6\xad\x74\x0f\x7a\x2f\xe9\xab\x44\x0a\xa9\xd2\x32\xb1\xd9\x13\x1d\xff\x9d\x47\xff\x4a\xc7\x8e\xe2\xba\x48\x9d\x80\x68\x7e\xf9\x87\x8b\x8b\x0b\x3c\x81\x88\x4a\x79\x30\x1e\x51\x14\xe3\x93\x8f\x0e\xd1\x7d\xad\xb2\x14\xb5\xe9\x64\xd5\x2f\xfe\x55\xdc\xef\x0a\xbb\xf6\x88\x35\x1d\xc3\x98\xd2\xf8\x62\x32\x89\x87\x75\xf1\xdc\x27\x4f\x8e\x15\xa1\xbd\xb0\x93\x55\xa6\xeb\x94\xff\x06\x00\x00\xff\xff\xf3\xd3\xf2\x82\x1f\x21\x00\x00")

func templatesServerBuilderGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerBuilderGotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templatesServerBuilderGotmpl() (*asset, error) {
	bytes, err := templatesServerBuilderGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/builder.gotmpl", size: 8479, mode: os.FileMode(420), modTime: time.Unix(1450129222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerConfigureapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x96\xcd\x8e\xe3\x36\x0c\xc7\xcf\xcd\x53\x10\xc6\x16\xb0\x8b\xd4\xb9\x17\xd8\xc3\xb6\xdb\x8f\x41\xd1\xdd\x41\xa7\x40\xcf\x8a\x4d\xdb\xea\xc8\x92\x57\x92\x27\x9b\x06\x7a\xf7\x92\xb2\x1c\x7b\x3e\xb6\xcd\xcc\x1c\x0a\x04\x88\x2d\x53\xe4\x5f\x3f\x52\x94\x06\x51\xdd\x8a\x16\xa1\x17\x52\x6f\x36\xb2\x1f\x8c\xf5\x90\x6f\x00\x32\x8d\x7e\xd7\x79\x3f\x64\x1b\x7e\x6b\xa5\xef\xc6\x7d\x59\x99\x7e\xd7\x9a\x6f\xdd\x41\xb4\x2d\xda\xf5\x23\x5a\x6b\xac\xcb\x2e\xb2\x65\xb7\xb7\xd2\x3f\xcb\x78\xd7\xcb\xba\x56\x78\x10\x16\xa3\xa2\xd3\xc9\x0a\x4d\xc2\xcb\xf7\xd8\x88\x51\xf9\xab\x28\xdd\x85\x70\x3a\x0d\x56\x6a\xdf\x40\xf6\xf5\xa7\x0c\xca\x10\xa2\x31\xea\x3a\x3d\x4d\xd3\xde\xdc\xe2\x71\x0b\x6f\xee\x84\x1a\x11\xbe\x7b\x0b\xe5\x6a\x3e\x7f\x0b\x81\x4c\x61\xed\x69\xb2\xbd\xe7\xae\xd8\x6c\x76\x3b\xf8\xa3\x93\x0e\x1a\xa9\x10\xe8\xdf\x89\x06\xc1\x1b\xc0\x5a\xfa\x12\x3e\xea\x8a\x46\x3d\xe0\x67\xe9\xbc\xe3\xa7\x83\x54\x0a\xb4\xf1\xb0\x47\x30\x77\x68\x0f\x56\x7a\x8f\x84\xbe\x19\x75\x05\x95\xd1\x8d\x6c\x47\x8b\xef\xae\xaf\x72\x31\x48\xf8\xe6\x74\x2a\xaf\xa7\x14\x85\x50\xb2\x22\xe1\x2a\xa1\xe4\xdf\xb4\xf0\x0f\xa2\x47\x08\x81\x4c\x0b\x60\x48\xe5\x2f\x42\x13\x21\x0b\x27\x92\x48\xba\xce\xce\xc0\x77\x08\xec\xad\x43\x8b\xf4\x8d\x1e\xcb\x1b\xb4\x77\xf8\x23\xe7\x0c\xde\xc2\x94\xbb\xd5\xd8\x04\x18\x12\xe1\x1f\x8c\x76\x63\x8f\x0e\x18\x0e\xc8\x26\xc2\x52\xd8\xa3\xf6\xc2\x4b\xa3\x69\x9c\x5d\x3e\xa9\x2e\xcd\xe5\x28\xf4\xfd\xf1\xc4\xbc\x98\x78\x2a\x87\x97\x79\x49\xe5\x30\x8b\xb2\x3f\x11\xb7\x9c\xe1\xe5\x16\xa4\x29\x7f\x47\x51\xa3\xdd\x82\x17\xb6\x45\x0f\x94\x3e\xb4\x8d\xa8\xf0\x14\x8a\x69\x99\x91\x0e\x80\x45\x3f\x5a\x3d\xaf\xfc\x83\xf1\x67\x65\x58\xe7\x19\x51\xe7\xc8\x54\x04\xd5\x1c\xb9\x13\x2e\xe6\xed\x88\x9c\x3b\xd4\x20\x97\x09\x19\x2f\x22\x14\xeb\x2a\x5b\x9e\x66\x8a\xd7\xd6\xd4\x63\xf5\x32\x8a\x69\xee\x2b\x29\xae\xbc\xcc\x14\xe7\xa1\x85\xe2\x81\x29\xfe\x49\x55\xc9\x14\x6b\xe1\xc5\xeb\x19\x0e\x73\xdc\x17\x33\x4c\x08\x6f\xb0\x1a\x49\xd9\x91\xb6\xbc\xd4\x92\xd7\xee\x92\x41\xc4\xe9\xbe\x17\x4e\x56\xef\x46\xdf\xc5\xd1\xc7\x1c\xae\xde\xf3\x7e\xa1\xef\x44\x20\x2e\x76\x74\xa4\xca\x79\xda\xe5\xed\x96\x0d\x5d\x7a\x29\x20\x8f\x3e\x59\x6c\x0e\xf8\x89\xb3\x27\x75\x25\x07\xa1\x20\x5b\xf1\xc8\xa0\x08\x81\xf6\x28\x90\xd4\x98\xd7\xc5\x2e\x84\xed\x44\xa6\xb8\x4f\x4b\x4b\xb5\xfd\x12\xb2\x3d\xeb\x07\xc1\x02\x59\x40\x12\x5c\x5c\xc0\x6d\xe1\x35\xb3\xa0\xb6\xf0\x2b\x1e\x9f\x03\xc3\x9b\x5b\x72\xfd\xbf\x02\xe0\x26\x45\xcd\x77\x42\xb0\x26\xb0\x14\x53\x63\x4d\xcf\xaf\x37\x66\xb4\x15\x0f\x3c\x07\xce\xd3\x65\xf5\x71\x40\x2b\x52\x35\x7d\x71\xf3\xcc\xcd\x95\x77\xe0\x7f\xb5\xe4\x64\xbb\x6c\xaa\x29\x29\xd7\xc2\x8a\x9e\x62\x0c\xf1\xff\x02\x3f\xd3\x84\x75\x62\xc9\x31\x94\x9c\x34\x63\xc9\xb0\x5e\x7c\x6e\xef\xe7\x7f\x31\xa1\x70\xe7\xcc\xbd\x3e\xa5\x29\x48\x01\xcb\x69\x4c\x2d\xd7\x0d\x46\xd7\xf8\xa0\x2d\xac\x2c\x1e\xa6\xd9\xcc\xc0\x57\x79\xbd\xa0\x37\xac\xb2\xb7\x39\x87\x71\xf4\x37\xfc\xac\xcc\x5e\xa8\xdf\xce\x11\xf3\xf3\x11\x97\xc7\xef\xcb\x17\x57\x14\x9b\x90\x8e\x6d\x5c\x69\x3c\x9f\x96\x93\x2e\x3e\xd1\xa9\xcf\xf1\xc1\xd9\xa5\xc4\xe3\x67\xea\x3e\x9e\xab\x96\xa7\x3a\x84\xda\x44\xc1\x62\x18\xd4\x91\x8f\x7c\x36\x4e\x97\x96\xf2\x2f\x47\x4e\x6a\x53\x8d\xbc\x80\xf2\x89\x70\x93\x37\x3a\x0d\x44\x43\xe4\xc1\x9a\xd1\xd3\xb6\x83\xfd\xc8\xab\xa7\xd0\x18\xf7\x00\x4d\x96\x55\x54\xb4\x85\xbd\xd4\x35\x9b\x70\x09\xd0\x55\x44\xd6\x71\x7c\xba\x37\x3c\x5c\x64\x3e\x8b\x5e\xdf\x0b\x1e\xdd\x12\xbe\x4a\x08\x93\xf1\x25\x5c\x3a\x5a\x2d\x6a\x77\xd6\xa8\x8f\xbe\x8b\xcd\xd3\xf3\x25\x68\x35\x4d\x28\x67\x22\x1a\x49\x6b\x24\x38\xd4\x68\xef\x58\xfd\xbf\x43\xba\x31\x93\x23\xfa\x09\x68\x8d\xa9\x61\x50\x54\x94\xec\x60\x50\x63\x4b\x47\x11\x8d\x0f\x42\x53\x97\x8c\xa2\xd9\xe3\x12\x74\x0b\xca\xb4\xed\xcc\xa8\x47\xea\x64\x95\x5b\x01\x7a\x54\x25\x2f\xa4\xf4\x4f\x00\x00\x00\xff\xff\x7d\x82\xa2\xca\x34\x0b\x00\x00")

func templatesServerConfigureapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerConfigureapiGotmpl,
		"templates/server/configureapi.gotmpl",
	)
}

func templatesServerConfigureapiGotmpl() (*asset, error) {
	bytes, err := templatesServerConfigureapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/configureapi.gotmpl", size: 2868, mode: os.FileMode(420), modTime: time.Unix(1450129222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerDocGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xcb\x6e\xea\x30\x10\xdd\xfb\x2b\x66\x8d\x74\xcd\x3e\xba\xea\xa2\x0f\xa9\x95\x68\x41\x85\x76\x6f\x25\x13\xb0\x4a\x1c\x64\x87\xa2\x16\xe5\xdf\xeb\x77\x1c\x43\x2a\x95\x0d\x9e\x33\xe7\x61\x8f\x0d\xf3\xd9\x8a\x95\x1f\x6c\x8b\xd0\x30\x2e\xe0\x7c\x06\x5e\x03\x7d\x12\x75\x4b\x37\xbc\xdb\x23\xf4\xbd\xc6\x2e\x00\xdc\x2b\xbf\xda\x1d\x1b\x26\xf8\x37\x02\x7d\x61\x8d\xc3\x50\x54\xb6\x15\x9d\xee\x51\x95\x92\x1f\x3a\xde\x0a\x4d\x20\x24\x3a\x66\x0d\x63\x2c\x2a\x18\x8b\x37\x28\x1b\xb5\xac\xd7\x28\x3f\x79\x69\x02\x88\x45\x60\x59\x83\xc7\x8a\xc4\xf1\x92\x9d\x99\xb6\x12\xe8\xba\xdc\x61\x83\x0a\xe8\x63\xab\x3a\xa0\xb7\x4c\xe1\x8a\x75\x3b\x67\xe1\x35\x26\x3f\xf0\x34\x02\xfa\xe3\xcb\xc2\x4c\x49\x32\xa1\x67\x96\x33\x40\xb7\xa8\x1b\x50\x88\x1c\x1d\xc8\xe6\x79\xae\x59\x5b\xab\x80\xe6\xe4\xb8\x2d\x2f\x08\xb5\x13\x25\x5d\x27\xb4\xdf\x27\x9e\x1c\xc3\xfb\xbc\xa3\x54\x7e\xc0\xc6\xc6\x97\xce\x65\xe8\xe5\xe9\x0b\x3d\x3e\x61\x2f\xd9\xaa\x7c\x59\xc0\xb8\x3d\x5c\xfa\x18\xea\x7b\x98\x30\xa4\x6f\xaf\x8b\x4c\x10\x91\xeb\x43\xbb\x6b\x45\xc7\xca\x38\x37\x5f\xc6\x9d\xf8\x3a\xdd\xc9\x25\x74\xcd\x90\x3e\xe8\x27\xbf\xd7\xf0\xff\x54\x13\xc0\x9b\x29\x95\xdb\x2d\xa4\x9a\x5f\x0e\x90\x5b\xa8\xa3\x7f\x2e\xe1\x2c\x16\x28\x86\x17\x95\x72\x0c\xe5\x9f\x4d\x7a\xc6\x8a\xb3\xcd\xd7\x21\xde\xc7\x64\xc6\x4a\xb6\xd5\xb1\x4c\x32\x02\x90\x64\xa4\x9c\x3f\x65\x0c\x3f\x26\xa2\x4e\x6c\xbb\x45\x59\x34\xd8\x31\x32\x9b\x93\x43\xf2\x37\x42\x08\xf9\x09\x00\x00\xff\xff\x19\xe0\xb9\xc4\x58\x04\x00\x00")

func templatesServerDocGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerDocGotmpl,
		"templates/server/doc.gotmpl",
	)
}

func templatesServerDocGotmpl() (*asset, error) {
	bytes, err := templatesServerDocGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/doc.gotmpl", size: 1112, mode: os.FileMode(420), modTime: time.Unix(1448299118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x57\x5f\x6f\xdb\xc8\x11\x7f\x16\x3f\xc5\x1c\x7b\xb9\x92\x07\x6b\x75\x46\xd1\x87\xaa\xf0\x83\xe1\x4b\x10\x35\xbe\x44\x88\x8c\x43\x8b\x34\x50\xd6\xe4\x88\xda\x86\xda\x65\x76\x97\x56\x54\x41\xdf\xbd\x33\x4b\x4a\xa2\x6c\xea\x9c\x5e\x51\x02\xb6\xa4\xd9\xd9\xf9\xf3\x9b\xbf\xac\x64\xf6\x59\x16\x08\x2b\xa9\x74\x14\xa9\x55\x65\xac\x87\x24\x02\x88\x4b\x53\xc4\xfc\x69\x5c\xf8\xd0\xe8\x47\x4b\xef\xab\x38\xe2\x5f\x85\xf2\xcb\xfa\x5e\x64\x66\x35\x2a\xcc\xd0\xad\x65\x51\xa0\xed\x7e\x75\x15\x66\x71\x34\xe8\x32\xfe\x0b\x9d\xc3\x87\xfc\x33\xb3\x2d\x4a\x59\xb8\x47\xe7\x7e\x53\xa2\xbd\x1f\x15\x56\x66\xb8\xa8\xcb\xa0\x68\xbb\xb5\x52\x93\x79\xe2\x67\x5c\xc8\xba\xf4\x93\x60\xa0\xdb\xed\xb6\xdb\xca\x2a\xed\x17\x10\xbf\xf8\x12\x83\xd8\xed\x02\x33\xea\xbc\xfd\xd6\x5c\xfb\xfe\x33\x6e\x2e\xe0\xfb\x07\x59\xd6\x08\xe3\x2b\x10\x9d\xfb\x7c\xb6\xdb\x11\x2b\x74\x25\x35\xbc\x27\xe2\xd2\x28\x1a\x8d\xe0\x6e\xa9\x1c\x2c\x54\x89\xb0\x96\x0e\x0a\xd4\x68\xa5\xc7\x1c\xee\x37\xe0\x97\x08\xad\xdf\xe0\x8d\x29\x05\xf3\xff\x22\x3f\x13\xb5\xb6\x08\xda\x78\x22\x83\x79\x40\xbb\xb6\xca\x23\xf1\xef\x45\xc9\x85\xa7\x3b\x1b\x53\x77\x04\x2a\x0f\xf7\x98\xc9\xda\xd1\x71\x59\xf2\xa1\x05\xcc\x95\x77\xb0\x36\x75\x49\x0a\x11\x4a\xe3\xfc\x77\xac\x64\xe2\x5b\xa2\xd1\xe5\x86\x4f\xf6\x4a\x3c\x6a\x50\x8b\x20\x19\xbf\x56\xa5\xca\x94\x27\x06\x0e\x8a\x5a\x6c\x60\x38\x54\x3a\x2b\xeb\x1c\x87\x1c\x76\x58\x18\x1b\x7c\xd8\xdb\x10\xf4\x12\xcd\xd5\x55\x48\x07\x0a\xce\x4a\xea\xdc\x91\xc6\xc2\x8c\x0f\x5c\x7b\x97\x8f\x04\xb4\xa4\x1e\x86\x1e\x84\x18\x09\x01\xc3\xeb\x80\xae\x74\x99\x2c\xd5\xbf\x29\x88\x6f\xe5\x0a\x81\xb1\x67\xdb\xc4\x94\x60\xcf\x54\x25\xcb\x40\x22\x0a\x03\x95\x00\x7e\xe9\x1e\xc5\x14\x1a\xb4\x0b\x4a\x89\xed\x2e\x86\x94\x02\x36\x1c\x56\x87\xd3\xed\xf6\xc8\xca\x42\x42\xc0\xf6\x71\x8b\x1e\xa4\x05\x53\x11\x70\xce\xdb\x3a\xf3\xb0\x85\x46\x73\xb2\x94\x6e\xa2\x1d\x66\x1c\x1d\x31\xcb\x96\xb8\x42\x97\x92\x15\xd1\xe0\x35\x21\xcb\xec\x4a\x17\xf0\xa9\x34\xba\x18\xc7\x4b\x22\xc5\x90\xa3\xcb\xac\xaa\xbc\x32\x7a\x1c\x33\x58\x93\x29\x07\xb5\x54\x8e\xa1\x36\x9a\x39\x42\x86\x8e\xa9\x70\xc8\xdf\xe6\x16\xea\x87\x71\xfc\xfa\xdd\xec\x2e\xfe\x14\x0d\xa6\x8c\x25\xb9\x03\xf4\xb4\xb2\x19\xde\x1e\xd9\x01\xf5\xae\xf4\x10\x22\xb5\x37\x39\x33\x5a\x63\xc6\xec\xee\x62\xaf\xd6\x31\xbf\x04\x4a\xfb\xdc\xac\x20\x24\x71\xab\x7e\xfa\xee\x3d\xa9\x27\xcf\x09\x95\x03\xf8\x0c\xc1\xac\x07\x80\x68\x70\x77\x3b\x0b\x20\x1c\x9f\x16\x8e\xfd\xd3\x9a\xee\x4b\x37\xfc\x36\x68\x9a\xfc\x2a\xc9\xd6\xf5\x92\x08\x1c\xe5\x26\x11\x55\xc8\xf6\x3f\xba\xa6\x80\x38\x37\xa8\xb2\x86\xc3\x0e\x74\x64\xcc\x7c\x0f\x1f\x7d\x0f\x08\x1e\x9f\x16\xcb\x1e\xc3\xfe\x2b\x5c\x7f\x17\xaa\x6c\x59\x83\x6c\xb0\xec\x06\xad\x27\x87\x32\x2e\x03\x7a\x42\x7b\x13\xaf\xa8\xc4\x35\xbb\xd5\xb1\x2c\x3b\x32\xf6\x18\xd8\x39\x65\xcd\xdc\x03\xfa\x2d\x8c\xc1\xe2\x97\x5a\x59\xcc\xe9\xa2\x3d\xb1\xea\xe6\xe5\xfb\xbb\xc9\xab\xc9\xcd\xf5\xdd\xcb\xa7\xc6\xbd\xc1\xcd\x6f\x18\x47\x1d\xb1\x0f\x35\xab\x1e\xd8\x20\x3a\xed\x37\xea\x79\x9b\xa6\xef\x27\xbf\x92\x3d\xf3\x37\x2f\xff\x11\x7f\x82\x43\x2e\x46\x94\x70\x8b\x5a\x67\x61\xfa\x24\x29\x6c\xa9\xeb\xb6\x5d\x65\x46\x19\x72\x01\x68\x2d\xb7\x6d\x4e\x17\xf1\x16\xd7\xc9\xac\x39\xfc\xdb\xec\xdd\xdb\x0b\x88\xe3\x94\xf8\x29\x99\x99\xeb\xbb\x2b\xd0\xaa\x0c\x12\x80\xfa\x63\x21\x5e\x49\x4f\x6d\x4c\x27\x74\xc8\x6c\x9c\xda\x95\xb4\xd4\xa2\x58\x60\x03\x01\x49\x9c\x06\x52\xf2\x03\xb7\x89\x8b\x96\xdc\x8e\x9a\x74\x7f\x41\xcc\x96\x94\x37\x3f\x1f\x61\x81\xab\xae\x95\x82\xff\x25\xa9\x98\xe8\x85\x11\x77\xd4\x67\xf1\x70\xf1\x96\x90\xfd\xb6\x7b\x1d\x2e\x32\x94\x7c\x9a\x1f\x9c\x6f\x65\x05\x4b\x93\xf4\xaf\xa7\xde\x0e\x06\xc6\x89\x97\x5f\x95\x4f\x2e\xc9\xde\x1d\x8f\x4c\x59\x29\xbe\xc6\xad\xb1\x99\xed\xbb\x1d\x7b\xda\xdb\x89\xaf\xa7\x93\xa4\x63\x12\x89\x58\x52\xaa\x97\x0d\x48\x14\xd9\x85\x2a\x28\xc6\xcc\x45\x52\xd3\xe8\xd9\xf6\xc9\x0b\xc2\xac\x99\x02\x24\xe0\x87\xfd\x28\x17\x0d\x6d\xdb\x7c\x8c\x41\x53\x28\x99\xb5\xa5\xa7\x27\x37\xc5\xeb\xd6\x84\x2b\x68\x8d\x21\x44\x9a\x8a\x45\x7b\x40\x85\xd6\x11\x71\x1b\x88\x49\xec\xb3\x2a\xa6\xe0\xad\x3c\x41\x1a\x46\x79\x12\xbf\x70\xe3\x17\x39\x11\x39\xae\x82\xfb\x59\xfb\x95\x3b\x48\x9a\x06\x84\x1f\xe1\xf8\x24\x67\x18\xcd\x01\x0b\x9d\xb6\x32\x79\xbc\x71\x23\x24\x14\x96\x35\x0d\xc4\x2e\x90\x20\x3d\xb0\x0b\xe3\xd1\xe8\x85\xfb\xa7\x26\xcd\x7b\x8b\xc5\x75\x9e\xdb\x24\x4d\xc3\x42\xf1\x1b\xad\xb7\x30\xc0\xa5\x10\xaa\x60\x30\x38\x94\x48\x6b\x28\x79\xdc\x41\x28\x7c\x24\xe4\xf6\x1b\xc4\xea\xba\x54\x0f\x78\xdb\x6a\xdb\x1e\xd4\x26\x3f\x32\x44\x77\x37\xd3\xfd\x51\xba\x7b\x9a\x3c\x3d\x5e\x0f\x9e\x99\x10\x54\x4a\x49\x7a\xac\xe0\x6f\x9c\x2b\x21\xbe\xee\xf7\xa7\x86\x3b\x9b\x1b\x27\xc7\xdc\xec\x42\xd6\xc2\x55\x90\x44\x4d\x4d\x34\x84\xf4\x0c\x23\x95\xc6\x57\x3f\xb5\xc6\x1b\x47\x77\x3e\x7c\x6c\x86\xdd\x36\x66\xe6\xd1\xa5\xb8\x8c\xc9\x00\x5a\xb4\xc2\x5d\x0a\xee\x7a\xbd\x16\x86\x16\xc0\x4a\x18\x5b\x8c\x94\xce\xf1\xab\xa8\x96\xd5\xe8\x8e\x46\x84\xe3\xf1\x32\xbf\x95\x1b\xb4\x73\x96\xd8\xb4\xc5\xf9\xcd\x12\xa5\x9f\xcf\x96\x88\xfe\x0f\xef\xeb\x12\xe7\xc3\xf9\x3b\xda\xd6\xe6\xb3\x66\xbb\x9a\xcf\xbc\xa5\x36\x11\x6e\x98\xcc\x94\xee\x9c\xa1\xbf\x28\xfd\x2b\x5a\xd7\xf4\x11\x76\xac\xfd\x45\x1c\x97\x97\xe7\x2e\x75\x5a\x3f\xfb\xb7\xa2\xa5\x34\xf9\xf0\x31\xc0\x72\x3c\xb9\x80\xcb\xb3\xf0\x74\x05\x7c\xf8\xe9\x63\x53\x7f\x8d\xfe\x5b\x23\xf3\xbf\xff\xf9\xa7\xbf\xd0\x4c\x99\x4a\x65\x93\x06\xba\x24\xd4\xd9\xe9\xd4\x49\x2f\xe0\xfc\x21\x5d\x7f\xa6\x22\x0f\xf5\xf8\x6c\xff\xa1\xd3\xbd\x86\xb0\xc4\x5c\x5d\xd1\x94\x68\xda\xe4\x09\xf9\xd8\x17\xa2\x90\xef\x6d\x32\x0f\xc8\xad\xdb\xff\xa5\xd3\xb4\x0a\x8e\xbf\xfe\xdf\xfd\xc6\x1d\x1b\x4e\xc7\xf6\x43\xcf\x89\x06\x6b\x2b\xab\x8a\xf6\xac\x71\x13\x33\x1a\x04\x7b\xa6\xfe\xfe\xd1\x95\xd2\xd3\x42\x2e\xa0\x37\x4d\x8e\x1e\xb6\x8d\xca\x9d\x74\xaa\xd6\x88\xa7\xfd\xa7\x07\x84\x93\xe5\x80\x2a\xaf\xcf\x4a\xa0\xf7\xa7\xcc\x54\xbc\x3f\x2e\x2c\x2d\x66\x61\x7f\xf4\x79\xa9\xee\x61\xff\x9a\x0a\xed\x8b\xed\x79\x19\x0e\x69\xbd\x23\xe7\x68\xaf\xc1\x6a\x28\xf9\x0c\xbc\x5a\xa1\xa9\x89\x4e\x45\x26\xb3\x0c\x2b\x7a\x21\x63\x01\x9d\xcd\x4b\xd0\x4b\x17\xad\xac\xb4\x05\x85\x77\xbf\x46\xdc\xb5\xce\x83\xa7\x40\x4d\xe9\x11\x89\x30\x02\x67\x58\x48\x8e\x32\x0f\x0a\x3b\xd2\x20\x41\x51\x08\xc8\xe8\x8d\x8e\x43\x5d\xca\xca\x9b\x0a\x56\x2a\x1f\xe6\x66\xad\x4b\xaa\xb0\x14\xf0\x01\xb5\xaf\x09\xa3\x0d\x4b\xa1\x39\x21\xd7\x72\x23\x22\xbf\xa9\xf0\x8c\x67\xed\xeb\x4e\x34\x78\x1c\xc0\xc3\xc2\x95\x94\xba\xf7\x6e\x0a\xd7\xc1\x6d\x1a\x43\x49\x16\x52\x9f\x02\xac\x9b\x5a\xa0\x3f\x63\xc3\x78\xf2\xc7\xd5\xac\xd4\xa2\xb9\x41\x5a\x92\xde\x44\xb7\xe8\x6b\xab\x39\xbd\xe9\x1e\x25\x84\x3f\x28\x4d\x78\x4b\x4c\x9f\x90\xa7\x68\x95\xc9\x93\x3f\xc1\x8f\x21\x1e\xdc\xf8\x6a\xcf\x7c\x8d\x24\x60\xed\x24\x9c\x7c\xf9\x4f\x00\x00\x00\xff\xff\x6c\xfc\x6d\x88\xbd\x10\x00\x00")

func templatesServerMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerMainGotmpl,
		"templates/server/main.gotmpl",
	)
}

func templatesServerMainGotmpl() (*asset, error) {
	bytes, err := templatesServerMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/main.gotmpl", size: 4285, mode: os.FileMode(420), modTime: time.Unix(1450129222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerOperationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x57\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\xa6\xc6\x76\x61\x19\x5a\xf9\x9e\x22\x87\x6d\xb7\x45\x72\xe8\x22\xc8\x06\xed\xb1\x60\xa4\x91\x44\x44\x26\x15\x8a\xb4\xe3\x1a\x7e\xf7\x0e\x7f\x64\x49\x8e\x6c\x2f\x50\x24\x87\x05\x72\xa0\xc5\x99\x6f\x66\xbe\xf9\x63\x1a\x96\x3d\xb1\x12\x61\xb7\x83\xf4\x2e\x9c\xf7\xfb\x28\x5a\x2e\xe1\xa1\xe2\x2d\x14\xbc\x46\xd8\xb0\x16\x4a\x14\xa8\x98\xc6\x1c\x1e\xb7\xa0\x2b\x84\x76\xc3\xca\x12\x15\x68\x29\xeb\xd4\xca\xff\x9e\x73\xcd\x45\x49\x97\x9d\xde\x8a\x97\x95\x86\x46\xc9\x35\x42\x61\xb4\x83\xaa\x50\xc0\x56\x1a\x50\xf8\x49\x19\xe1\x90\x3a\x68\xc8\xe4\x6a\xc5\x44\x1e\x45\x7c\xd5\x48\xa5\x61\x1e\x01\xcc\x04\xea\x65\xa5\x75\x33\x8b\xec\xaf\x92\xeb\xca\x3c\xa6\x24\xb9\x2c\xe5\xa7\xe0\xc3\xf0\x68\x45\x9f\xb8\x5e\xae\x78\x9e\xd7\xb8\x61\x0a\x67\xa4\x47\xe1\x29\x26\x28\xb6\xf4\x0b\x16\xcc\xd4\xfa\xd6\x59\x68\x29\x56\xba\x6a\x14\x17\xba\x80\xd9\xcf\xcf\x33\x48\x6d\xf8\x4e\x01\x45\x7e\x38\x7b\xe5\x0f\x4f\xb8\x4d\xe0\xc3\x9a\xd5\x06\xe1\xea\x1a\xd2\x11\x8a\xbd\xa5\x13\x1c\x01\x06\xf1\x23\xd4\xd8\x51\x6c\x45\x59\x9b\xb1\x9a\xff\x4b\xae\x7d\x65\x2b\x2b\x77\x43\x14\xd4\xa8\xfe\x30\x22\x03\x6d\x94\x68\x81\x11\x7b\x22\xd3\x5c\x0a\xd8\x50\xfc\x8e\x34\xe5\xb8\x6d\x79\x29\x18\x09\x21\x90\x41\x49\x82\x84\x58\x19\x22\x71\x08\x08\x95\x47\x8c\xf4\xb6\xc1\xcb\x36\xad\xad\x39\x49\xf1\xc2\x96\x84\x62\xab\x8e\xa5\x57\x5a\xfe\xf6\x10\x94\xd7\x21\x24\x48\x3f\x1b\x5d\x49\x45\xb2\xf9\x00\x23\x81\x23\xd1\xa1\x58\xf7\x4d\x48\xca\x3b\xe0\x33\xe9\x11\x89\x19\x6f\x58\x0d\x33\x0a\x0e\x55\xc1\x32\xdc\xed\x67\x10\x93\xec\x62\x88\x34\x90\x74\xbf\xfd\x45\x0c\x7d\x09\xa4\xf7\xd8\x36\x52\xe4\xc4\x81\xa5\xdd\x47\x0b\xf8\x82\x99\x09\x25\x4b\x84\xe2\xb3\xc1\x56\x3b\xff\x15\x5a\xe2\xed\x0d\xa3\xb3\x55\x6d\x31\xb2\xbc\xc0\xbc\x10\x17\x19\x8c\x83\x01\x22\xb1\xe7\x70\xbf\x6f\x3c\x0f\xef\xc0\x64\x73\xe0\xe3\x5d\x38\x85\x1d\x95\xb6\xa7\x0c\x0a\xf1\xaa\x74\x9a\xb7\x89\xad\x77\x2a\xda\x5f\x6c\x26\x38\x44\x0b\x85\xa4\x99\x55\x31\x0d\x19\x13\xa1\x33\x80\x5a\x94\xe7\xd3\xbd\xe3\xbd\xbf\xdc\x3a\x03\x0b\x96\x8e\x43\x05\xfc\xa0\x6d\xe4\x29\xff\x8a\x9b\xc9\x88\x20\x53\x48\x03\xdd\x4e\x2e\x81\x1b\xb0\x33\x39\xed\x78\xf2\xfc\xe3\x34\xdb\xb2\xb1\x9b\x80\x06\x9d\xef\xb6\x53\xf8\xf3\x4c\xbf\xc0\x62\xe0\xd8\x6f\x92\x42\x7b\xd1\x49\x37\xea\xce\xa6\x2a\x86\xc5\xb4\xd7\x83\x3a\xfe\x38\x29\xb1\x0b\x76\xae\x80\x1c\x48\x42\x92\xd5\x55\x67\x75\xef\x68\x39\x01\x1e\x16\xd4\x95\x92\x46\xfb\x7d\xfb\x27\x52\xda\xf2\xb0\x32\x28\xbf\x34\xd9\x1d\xf1\x61\x53\x3d\xb0\xb2\xed\x2e\x87\x19\xb1\x1f\x32\x02\x1d\xc1\x47\x51\xa8\x85\x6f\x86\x76\xa8\xda\x86\x94\x8e\x7e\xd9\xeb\x2f\xd8\x66\x8a\x37\x6e\x97\x04\xad\xa3\x6f\xc3\x92\xc0\xba\xc5\x63\x35\x0f\xfc\x5a\xc7\x8a\x9e\x28\xf0\xe9\x5c\x7f\xbe\xbb\xed\xf7\x61\xb4\x58\x9e\xe9\x31\x68\xb5\x32\x99\x76\x09\x0a\x29\x98\x4a\xbf\xdf\xb0\xa3\x86\x0b\x87\x73\x53\x77\xb8\x97\x6f\xbe\xa3\x7c\x6c\x92\xfd\x2e\xb0\x44\xdc\x63\x86\x7c\x8d\xaa\xf3\x74\x3a\xfb\x31\x7c\x43\xb5\xc6\x9b\x87\x87\xbb\xb9\x0a\x0d\x71\x1f\x16\xcb\xdf\x8a\x53\x5b\x26\xa0\x60\x11\xbe\xbb\x45\x14\xfb\x72\xb4\xd5\x92\xc0\x3f\xf6\xb9\x31\x61\xae\x8b\x3c\xbd\xb7\x72\xb7\xa2\x90\x73\x15\x47\x3d\x0f\xa3\xc9\x60\xdc\xec\x4c\x00\x95\xba\x04\x77\xd0\x9b\x5b\xc7\x2c\x76\x4c\xa0\x84\x68\x75\x7f\xba\x06\xc1\x6b\xe7\x1e\x9c\x77\xca\x8f\x0b\x8a\x98\x40\x02\x0e\x4d\x19\x99\x9b\x0c\xdb\xa4\x8b\x8d\x20\x63\x07\xe5\x5b\x8f\x8e\xf6\xa9\xb4\x66\x0a\x26\xf7\xd8\x99\x99\x76\x7e\xa4\xf9\x00\x3c\x09\xe3\x18\x7a\x3b\xd7\xc1\xd2\xb9\xc1\xd9\x11\xd9\x17\xbd\xff\x9d\xce\x17\xc7\x26\x63\xa0\x21\xe9\xde\xc3\xf4\x47\x23\xb1\xae\xb7\xfe\x8d\x36\x92\x4a\xe0\xd6\x3e\x92\x57\xbc\xc5\xe1\xb3\x73\x1f\x1d\xbd\x43\x03\xfd\x17\x52\xf7\x2b\x17\xf9\x5f\x76\x9f\x85\x3a\x3a\x64\x30\x79\xd5\x1c\x1f\xa7\x70\xfa\x6d\xe4\x83\x23\x9a\xfa\x65\xf0\xcb\xa8\x00\x6c\x74\x8f\x64\xae\x5b\x92\x6f\x57\x0f\x27\x2a\xda\xcd\xeb\xf6\x14\x23\xa1\x5f\xd3\xd3\xbb\xf8\x44\xf0\x83\x0d\x7b\x28\x0d\x97\x4a\x96\x69\xe3\x92\x18\xde\x0d\x83\x77\xa3\xf3\xd0\x52\xf6\x66\x5e\x0d\x56\xf2\x77\xb8\x32\xfa\xf7\xe5\x7f\x66\x84\xa2\xa1\xa1\xb2\x8f\xfe\x0b\x00\x00\xff\xff\xf7\x6f\xd8\xe2\x2d\x0e\x00\x00")

func templatesServerOperationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerOperationGotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templatesServerOperationGotmpl() (*asset, error) {
	bytes, err := templatesServerOperationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/operation.gotmpl", size: 3629, mode: os.FileMode(420), modTime: time.Unix(1447802315, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x1a\xdb\x72\xdb\x36\xf6\x39\xfa\x0a\x54\x9b\x66\x48\x55\xa1\xbc\xdd\xce\x3e\xb8\x71\x67\x6a\xc7\xdb\x7a\x9a\x26\xde\xb8\xcd\x4b\x9a\xe9\xc0\x12\x24\x71\xcc\x8b\x0c\x80\xb6\x15\x8f\xfe\x7d\xcf\xc1\x85\x04\x48\x50\x96\x12\x67\xb6\x0f\xcd\x43\x2c\x00\x07\xe7\x86\x73\x05\x78\x7f\x4f\x66\x6c\x9e\x16\x8c\x0c\x45\x96\x4e\xd9\x8a\x72\x9a\xdf\xd0\x2c\x9d\x51\x59\xf2\xe1\x66\x33\x00\x88\x74\x4e\x92\xd7\x8c\xcd\xc4\x45\xfa\x91\x11\x3d\x37\xa5\x39\xcb\x70\x98\xbc\x86\x5f\x30\xa9\xd6\x0e\x8f\x48\x5a\xc8\x7f\x7f\x17\x65\xac\x88\x00\x2a\x79\x47\xb3\x8a\x9d\xde\xad\x38\x13\x22\x2d\x0b\x80\x8b\x63\xdc\xce\x8a\x19\x69\x90\xff\x9a\x16\x67\x92\xe5\x02\xa7\x60\xcc\x38\x47\x4c\x86\x0d\x56\x2f\x2b\x8c\xe7\x54\x2e\x01\x6e\x4c\x60\xb0\xe2\x40\x6d\x4e\x86\x5f\x5f\x0f\x49\xf2\xaa\x9c\x52\xa9\x69\xa8\xc5\x20\x87\x6a\xc5\xa5\x17\x7f\xaf\xc8\x7d\x75\x44\x8a\x34\x23\xf7\x03\x42\x38\x93\x15\x2f\x70\x76\xb0\x09\xb0\x4a\xef\xb6\xb2\x6a\x96\x1f\x89\xd5\x1a\xdf\xfe\x8c\xfe\x5e\xa4\xd7\x15\xdb\xc6\xab\x03\xb1\x1f\xbb\xa1\x53\xdd\x93\xbb\xd3\xa2\xca\x7b\xd8\xc2\xa5\xcf\xe6\x47\xcf\x1b\x2a\xfb\x30\xa7\x7f\x39\x6e\xb1\xe2\xe5\x8a\x71\xb9\x6e\x79\x86\x23\xcb\x99\x38\xe7\x69\x9e\xca\xf4\x86\xe9\xad\xa0\xd1\x55\x06\xa2\xe0\x66\xb3\xe0\x6c\x4c\x34\x90\xaf\x8f\x33\x71\x52\x09\x59\xe6\xff\x29\x79\x4e\xa5\x64\xbc\x47\x39\x7a\xfd\xcd\x1c\x14\xa4\xf4\x83\x92\x0e\xe1\xb7\x55\xc9\x66\x33\xd4\x13\x17\xb7\x74\xb1\x60\x5c\xc3\xab\x59\x21\x41\x87\x0b\xdc\xd8\x52\x17\x28\x68\x4c\xe6\x0a\x50\x6c\x57\x55\x80\xed\x1f\x39\xa7\xeb\xb6\xd8\xa1\x50\xd2\x95\xdb\xaa\xda\x6a\xfa\x32\x2d\x66\xb5\xc2\xd4\xee\x61\x0f\x64\x83\x1f\xf7\x30\xef\x34\xce\x29\x67\x85\xd4\xb4\x92\x33\x58\xbd\x7b\x47\x51\x9b\x53\xd4\xa3\x00\xad\x24\x17\xab\x2c\x95\xc7\x6b\xad\x1a\x63\x69\xb8\xc7\x83\x7e\x1f\x9e\xff\xd0\xb5\xc6\x93\x32\xcb\xd8\x14\x95\xaf\x31\xa2\xc1\x29\xa6\x33\xc1\x7a\xd8\xe0\xf4\xd6\xd3\x84\x0b\x20\x3e\x2a\x46\x21\x00\x0c\x6e\x60\xa2\xb5\xaa\x27\x7e\x2a\x7f\x5b\xaf\x58\x60\xf3\x3b\x63\x27\xa7\x19\xcb\x51\x0b\x80\x69\x5e\x15\xd3\xa8\x05\x86\x41\xba\x15\x78\x4e\x96\x69\x36\xb3\xe1\x47\x11\xd1\x33\x35\xa9\x98\x8c\xc0\x06\x4a\x2e\x12\x43\x04\x1d\x0d\x0d\xa4\x65\xf0\x61\x6f\xd1\xd8\x90\xe3\xda\xa2\xc0\xc0\xc0\xf9\x06\x60\x78\x6d\x21\x91\xed\x83\xef\x3b\xb3\x2f\xda\x33\xe2\x63\x07\xe8\x9b\x6f\x2c\x4f\x60\x0b\x80\xd9\x48\xd1\x75\xaf\x7a\xa1\xe5\xbb\x68\x42\x7a\xe9\xa4\x2c\x6e\x40\x14\xe5\x8a\x37\xe8\x31\x63\xeb\x8d\x8d\x76\x5c\x98\xb6\x92\xb5\x09\xb9\xb6\x13\x03\x67\xc6\xa7\x1d\x07\x73\x5d\x0c\xd5\x7b\x56\x28\xbd\xa1\xda\xa3\x86\xd2\x6e\xc1\x70\x18\x38\xb8\xe1\xb8\xad\xa4\x30\x67\x70\x16\x35\x7b\x46\xc8\x7e\xcb\x6a\x0b\x3b\x76\x94\xb2\x4b\x76\xf0\xe2\x0a\xd2\x26\x5d\x4b\x3f\x22\x74\xb5\x02\x27\x69\xd3\xe2\x63\xa2\xce\x23\x56\x9b\xd0\xcd\x94\x59\x7d\x2e\xf3\xdb\x15\x14\x90\xa0\x25\xc3\xfe\x52\x3c\x4c\xd5\x4d\x48\x2a\x9e\x34\xe6\xd9\x84\xde\xb6\x0f\x76\xa3\xa3\xeb\x7d\x8f\x73\xc6\xae\x20\x5f\x4c\x37\x01\x52\x4d\xd8\x74\x12\xc3\x8a\x4e\xaf\xe8\x82\x11\x1d\xb2\xf5\x6f\x80\x18\x4c\x26\xe4\xb7\x65\x2a\xc8\x3c\xcd\x18\xb9\xa5\x82\x2c\x58\xc1\x38\x08\x38\x23\x97\x6b\x22\x97\x4c\xe5\x03\xc8\x92\x44\x96\x65\x96\x20\xfc\xe9\x0c\x62\x41\xb1\x80\x45\xbb\x2f\x4f\x17\x4b\x09\x2e\x57\x42\x84\x98\x57\x52\xa1\x5a\xb2\x82\xac\xcb\x0a\x64\x7c\xce\xab\xc2\xc3\x64\x49\x90\x69\x99\xe7\xb4\x98\x0d\x06\x69\xbe\x2a\xb9\x24\x11\x28\x60\x58\x30\x39\x59\x4a\xb9\x1a\xe2\x60\x91\xca\x65\x75\x99\x00\xe0\x64\x51\x3e\x37\x08\xdc\x9f\x3a\x20\xec\x06\x8b\x58\xaf\x52\x39\xb1\x95\xc2\x5e\xbb\x76\x03\xc6\xbf\xc3\x81\x3e\x47\x4e\x0b\x50\x72\xf2\x92\xcd\x69\x95\xc9\x33\x25\xa2\xd0\x76\xea\x45\x27\x6b\x9d\xe6\xd0\x9c\xbd\x4f\xaf\xd8\x7a\x4c\x9e\x2a\x4f\x46\x5b\x4c\x3c\x24\xb8\x6a\x12\x91\x8b\xcf\x80\xb7\xb0\xc6\xea\xa8\x11\x94\x8a\x29\xf5\x0a\xe9\x73\x74\x03\x01\x87\x51\x48\x9a\x16\x82\xd0\x2c\x53\xc7\x75\x59\x56\xb0\x77\xa5\x57\x31\x05\xe1\x24\x60\x58\x56\x70\x68\x2e\x02\x82\xf9\x4c\x05\x58\xa4\x01\x89\x2d\x05\x0a\x99\xb2\x1e\x70\x47\xa8\x0f\x48\x79\x89\xa8\xc1\xa6\xe6\xbc\xcc\x09\x25\xa8\xd3\xe4\x2d\x83\xd2\x5a\x48\xd8\x83\xdb\x8c\x06\x0f\x15\x3d\x06\xe9\x42\x28\x5b\x35\x24\x06\x12\x03\xf5\x36\xf6\xa1\x74\xab\xa6\xd2\x66\x36\xa3\x7b\xb3\xb6\xd9\x4c\x46\x26\x6f\xbd\x64\x62\xca\xd3\x95\xc9\x06\x48\xa1\x33\x53\x47\x13\x84\x47\x26\x53\xce\xcc\xc9\xd8\xd1\x21\x01\x6a\xac\x0d\x0b\x8d\x48\x9a\xeb\x9a\x9d\x10\x33\x38\x24\xb6\x9a\xbf\x9b\x66\x95\x80\x1c\xda\x40\xbd\x20\x2e\x06\x67\x7b\x07\x71\x5a\x38\x88\xf5\x20\x80\xb8\x86\xfa\xa1\x85\xb8\x5e\xe8\x20\x06\xc3\x4c\x57\x19\x7b\x33\x37\xb8\xcd\x98\xbc\x99\x1f\xea\x2e\xd0\x05\x08\xc8\xfb\x8a\x15\x0b\x95\x74\xb5\xc4\x44\x8f\xcd\x5e\x67\x39\x20\x91\xb7\x35\x2d\xfc\xad\xce\x72\x7b\xeb\xb9\x2a\x4e\x0a\xbd\xd1\x0c\x0e\x4d\x5c\xb3\x2b\x01\x4e\xeb\x2e\x4f\x33\xaa\x86\x35\x9f\x76\x31\xc0\xa6\xbb\x0f\xb8\x74\xf7\x35\x8b\xed\x7d\xad\xc6\x92\x10\x3d\x11\x36\x1b\xa7\x3a\x01\xc8\x33\x23\x8c\x33\xdb\xde\x10\xa8\xa6\x61\x63\x33\x4b\xf4\xb4\xc6\x13\x00\x76\x63\xcd\x68\x52\x97\x82\x45\x29\x49\x72\x31\x5d\xb2\x9c\x9a\x28\xd5\xf1\x35\x52\xf7\x34\xaf\xab\x2c\xa3\x97\x19\x4e\x8e\x1c\xfe\x4c\x49\xd5\x24\xe3\xed\x88\x20\xf8\x93\xc8\xa1\x0b\x88\x8f\xa9\x60\x88\x22\xde\x95\x8a\x13\x35\xe1\xb7\xca\x7a\x18\x4f\x8e\x21\xaf\x9b\x08\x03\x91\x0c\x2c\x09\x13\xbd\x50\x14\x6d\xfc\x87\x11\xa4\x27\x05\x32\x26\xa9\x24\x54\x88\x2a\x87\x59\xb9\x04\x35\x41\x8c\x07\xbb\xbf\xc3\x2c\x57\x2c\x04\x49\x71\xa4\xfa\x05\x4a\x4c\x0d\x80\x8c\x45\x10\x76\xe6\xb9\x84\x30\xb1\x48\xe1\xe7\x3a\xd6\x15\x2a\x36\x0f\x8c\xcf\xe9\x94\x21\x2b\x18\x3b\x85\x42\xa0\x8b\x32\x81\xc4\x6e\x53\x08\xb3\x15\x68\x08\xb6\x51\x95\x3f\x21\xea\x2d\xcb\x19\xc1\xd8\x29\x06\xd8\x92\x10\x95\xf3\xdf\xb2\x29\x03\xef\xe6\x56\x73\xa3\x2d\x51\x30\x76\xc5\x8e\x38\x19\xb9\x81\x76\x4c\x78\x59\x41\xd6\x1d\xe5\xe9\x6c\x96\xb1\x5b\x08\xcc\x60\xfb\x12\x14\x3f\x7b\x8b\x0b\x96\x77\x0c\xa1\xd8\x56\x41\x6d\x4a\xde\x7f\x50\x73\xb5\x8d\x24\x3f\x53\xf1\xdf\x8a\xf1\x75\x1d\x59\xaf\x05\x66\x26\x93\x24\x75\x5d\x2b\x22\x9e\xfc\xfe\xf6\x55\xa2\x00\xa3\x38\x36\x87\x63\x6b\x33\x40\x81\xa6\x58\x63\x68\x6a\x2d\x8e\x01\x5b\x30\x1d\x74\x28\x97\x08\x16\xfd\xeb\x5b\xf2\xe2\x05\xf9\xf6\xa0\x5d\x42\x3d\x79\xe2\x94\x4f\x4f\x36\x83\x27\xf3\x59\x98\x15\xc4\x12\x7b\xc9\x30\x9c\x23\x7c\x47\xf0\xda\x76\x6d\xf3\x8d\xe0\x28\x77\xf0\x18\xc6\xe4\x7a\x79\xd5\xb3\xf2\x27\x72\x77\x2d\x92\x9f\x98\x7c\xf3\x8b\x7b\x7b\x13\x77\x9a\x8a\xd6\x99\x27\x68\xbb\x41\xac\xd1\xfe\x6c\x28\x23\x30\x97\x24\x81\xbb\x0c\xa2\xce\xbd\xae\x3a\x61\xa0\x7a\xba\xb8\xe9\x40\xea\x83\x84\xc6\x10\x04\xb0\x0a\xe1\x7d\xf4\xb6\x2b\x44\xb3\xa3\x0f\xe1\x71\x55\xb3\x3f\x43\x8f\xa9\x9a\x9f\x19\x85\xbe\xc2\x2a\xe7\x53\x65\x78\xff\x41\x5f\x49\xdd\xf3\x44\x23\x44\x15\x79\x0a\x02\xb6\x31\xa9\x3c\x2e\xf3\xb5\x7f\x2a\xf3\x37\x73\x50\xd6\x37\x73\xdd\xfb\xd8\xf0\x2d\xad\xe6\x7a\xdc\x78\x38\xa2\x46\x54\x3d\xa7\xfc\x30\xc7\xd8\xff\xbf\x66\xb7\xd1\x77\x07\x07\xd0\xcc\x73\xc0\x8f\xcd\x88\xea\x43\xfe\x18\x86\x58\xf8\x63\x48\xe6\x14\x96\xa1\x6a\xfb\xfa\x66\xa8\xa5\x56\x62\x6b\x89\x35\xa9\xd0\xb1\x84\x33\x57\x13\x61\x50\x8c\xfb\x97\x90\x08\x0e\x83\xa2\x8f\x89\x16\x3e\xbc\xaa\xd7\x36\x2d\xf5\x6f\x36\xf3\xb0\x25\x8c\xc9\x7c\xb6\xdd\x91\x20\xfc\x3d\xae\xff\x7c\x0a\x27\x9f\x6f\x84\x75\x2b\xef\xe6\xf5\xc6\x32\xff\x0e\xca\xdb\x9d\x17\xeb\x9b\x96\x03\xff\x6d\x51\x9e\x45\xd5\x69\xde\xa8\xea\xb8\x9c\x19\xfb\x69\x8a\x5f\x1f\xa6\x53\x9b\x3a\x53\xa7\x77\xd8\x91\xab\xfe\xf0\x12\x10\x79\xf7\x9f\xbf\x96\x33\x38\x96\xe6\xb6\x05\xda\x82\x1c\xea\x9b\x25\xcd\x60\x15\xe3\xfa\xca\xae\xd9\x9b\xc8\xce\x16\x28\x5f\x8e\x15\x5a\xad\x86\x93\xb2\xc0\x12\x95\xef\x15\x30\x63\x2f\xbe\x60\x65\x87\x9c\xb6\x2e\xc9\xdd\x43\xf5\x69\xd9\x1f\x35\x2b\xcf\x70\xfb\xce\x27\x61\xc2\xb5\x2a\xec\x4e\x71\x18\x05\x83\xf4\xf0\xa1\x5b\x5b\x27\x70\xd7\x67\xd9\x8e\xe0\x7e\x88\xc0\xb2\xfb\xcf\xce\x0d\x62\xa8\xa4\x56\xcf\x0d\x85\xb9\x1d\xdb\x2d\x0b\xd8\x2b\xbc\xde\x8b\xc2\x10\x2a\x7b\x79\x18\x3d\x68\xd4\x5b\x0f\x53\xff\xbb\x84\xd4\x77\x65\x46\x9b\x41\xf3\x7f\x73\xd4\x0d\x6f\x78\x62\x7b\x51\xdf\x42\xbb\xa1\x52\xb8\xd7\xa5\xf8\x9a\x0d\x80\x31\x39\x3a\x22\x07\x35\x9e\x7d\xd2\xea\xde\x2d\xe1\xb3\x9a\x09\x94\xaf\x66\xce\xba\x78\xab\x33\xac\xad\xbc\xe6\xf4\x87\x9a\x51\xff\x75\xe1\x04\x5a\xbf\x52\xa4\x92\x35\xaf\x38\xda\x72\x61\x57\x92\x24\x36\xb6\xf8\x6f\x34\x40\xe4\xe9\x34\x83\x16\x52\x09\x04\x3a\x8f\x5a\x42\xc6\x44\xbf\x45\x75\xda\x0e\xaf\xe9\x68\xa2\x51\xbd\x82\x4f\x34\xee\x1b\x4c\xf8\x21\x74\x7b\xc3\xe8\xb0\xd6\xf4\x8a\x5b\x4a\x67\x7a\x8b\x75\x0d\xb1\xe5\xe7\x98\x2c\xa9\xf8\x85\xad\xc1\x90\xca\xac\x7e\x08\x25\x3d\xcd\xef\xbd\x17\x3e\x23\x23\x59\xdd\x2b\xc4\xde\xad\x1a\x40\x7d\x65\x90\x87\xce\xc2\x42\xee\xfc\xda\xdd\x89\xfc\xaa\x95\xa5\xb7\xe6\x6d\xd7\x31\x01\x2d\xa3\x67\x06\x00\xa6\x5e\x1e\x71\xe1\xbd\x0b\xf4\xfc\x9f\x1f\x1a\xbc\xbb\x08\xa6\x17\x7f\xcc\xb2\xf2\xf6\x34\x5f\xc9\xb5\xea\x46\x63\xcf\x29\xeb\x07\x6b\xbb\xe9\xc2\xbe\x3e\xef\xfa\xae\x0f\xdc\xed\xfa\x6c\xe4\xd6\x07\x11\x69\x73\x4e\x62\x12\xc1\xc1\x69\xa6\x2d\x3b\x71\x1f\xff\x4a\x4d\x47\x10\x92\xc9\x3d\x99\x4c\x08\xc3\x75\x7b\xb3\x01\xc6\xa4\x6f\x90\x4b\xb9\x04\xc3\xbc\xa9\x3d\x48\xb8\x41\xda\xdc\x89\x9b\x30\xd9\x7d\x0c\xd3\xd1\xa0\x16\xfc\x1f\x37\x43\x77\x8f\x1f\x80\x1c\x37\x6c\x9d\x7c\x73\x6b\xb1\xf5\x9d\xb2\x0d\xa0\x6f\xcd\xfc\x47\x4b\x43\x0a\xf4\xfd\x49\xef\x93\x3b\x7f\xa6\xe1\x2d\xd6\xd9\x59\x9f\xb4\xf3\x06\x18\xd4\x98\x12\xac\x53\x30\x77\x43\x85\xaf\x00\xe3\xcb\xfa\xe6\x25\x6a\xb3\xe0\x7d\x22\xe1\x72\xf2\x17\xd5\xc1\x28\x52\xd2\x25\xd1\xc8\x2b\x6f\x62\xf7\x1d\xb4\x77\x33\x10\xe8\x98\x8f\xb9\xb0\x6a\x32\x81\x78\xb0\x9b\xb7\x7e\xdd\x53\x03\x6f\xab\x64\x03\x7e\x5b\x84\xbe\x08\xd0\xa2\xb8\xf5\xce\x5f\x31\x03\xb4\xde\x4f\xbe\x78\xa4\xaf\xfd\x9d\x5d\x07\xee\xbd\x87\x39\x5e\x2b\x0e\xb5\x1b\x9b\x2f\x4c\x50\x44\xbf\x34\xbe\xbe\x09\x97\x27\x3b\x64\x8f\xbe\xad\xe1\x8c\x42\x9e\x13\x93\x53\x06\x3a\xf1\x84\x3f\xbd\xe9\x41\xba\xdb\x27\x36\xae\x66\x84\xf9\xf6\xd0\xf0\x10\xdb\x13\x52\x1d\xce\xc3\x69\x4b\x4b\xae\x90\x38\x05\xde\x17\x3b\x41\x27\xda\xcf\xd8\xfc\x9d\x7d\x00\xed\xf9\x36\xa9\x01\xde\xf1\xd3\xa3\x96\x30\xcf\x9e\x29\xb5\x58\x4a\xee\xa1\xf6\x06\x0b\x0b\x3c\x68\x55\xdc\x3d\x2a\x02\xbf\x75\xa5\xdc\xe5\x83\x84\x5a\x1f\xbd\x09\xd2\x7b\xf7\xf7\xee\xe8\x2f\x10\xdd\xff\x3b\x68\x75\xa3\x96\xff\x69\x1c\x16\xb6\xad\xd8\xda\xc3\xfb\xa7\xc4\xb6\x9d\x24\x7a\xa0\x84\xdd\xe1\xa3\xad\x60\x74\xee\x7c\xc1\xe7\xfc\x72\x7a\x80\xd3\x3b\xc9\xa9\x6e\x73\x94\x94\x93\xd1\xc0\x23\x3a\x2b\xa7\x3a\xee\x18\x3a\xf6\x8d\x3c\xc7\x5b\x02\xef\x79\x7c\x34\xf1\x77\x0a\x85\xd4\x6c\x6b\x68\xff\x2f\x00\x00\xff\xff\x18\x18\xe1\x72\xcb\x2c\x00\x00")

func templatesServerParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerParameterGotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templatesServerParameterGotmpl() (*asset, error) {
	bytes, err := templatesServerParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/parameter.gotmpl", size: 11467, mode: os.FileMode(420), modTime: time.Unix(1450129222, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServerResponsesGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x56\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\x71\xd3\x5a\xc0\x36\x1c\xb9\x7b\xd8\x8b\xb7\x0e\x18\xd2\x62\x0b\xb0\x35\x45\xda\x61\xaf\x65\xa4\x93\xc4\x46\x22\x15\x8a\xb2\xe3\x19\xfe\xdf\x77\xfc\x21\x59\xb2\xe9\x26\x7d\xb2\xc9\xfb\xee\xe3\x77\xc7\xbb\x13\xf7\x7b\xc8\x30\xe7\x02\x21\x6e\x51\x6d\x50\x29\x6c\x1b\x29\x5a\x8c\xe1\x70\x58\x2d\xc8\xcc\x73\x48\xde\x61\x9b\x2a\xde\x68\x2e\x05\x6d\xd3\x66\xc3\xda\x94\x55\xfc\x3f\x84\xe4\x03\xab\x91\x36\x81\x76\xcf\x70\x58\xb5\xf8\x0d\x7c\xd9\xd5\x4c\x8c\x37\xc9\x43\x64\x87\x43\x14\xb5\x5b\x56\x14\xa8\xd6\xbd\x1a\x83\x4e\x09\x33\xa1\x88\x16\xab\x48\xef\x1a\x6b\x0c\x1c\xd0\x6a\xd5\xa5\x1a\xf6\x11\x18\x80\x62\xa2\x20\xe3\x9f\xc8\x32\x54\xad\x0f\x2e\x18\xdb\xf9\x0e\x89\x72\x7f\x0c\xfe\x0e\x1f\x3b\xae\xd0\xec\x10\x73\xbf\x5a\x03\x9d\x86\xa7\xd8\xbf\xd9\x13\xaf\xbb\xda\x41\xfd\x62\x0d\xde\xf8\xfe\x29\xad\xba\x96\x6f\xf0\x88\xfa\x15\xc6\x0c\x23\xf7\x33\x62\x2e\x46\xc4\x6e\x11\x20\x1e\x50\xbf\x9d\x10\x0f\x86\x33\xe2\xae\xd2\xbc\xa9\xf0\x36\xf7\xdc\x7e\x0d\xb7\xb9\xe5\x9f\x02\x02\xf1\xfe\x85\xa2\xd0\xe5\x10\x31\xb8\xb5\xf7\x1d\x99\x03\x11\x4d\x5c\xb9\x98\xba\x8e\xcc\xa7\xae\x1f\x99\xd6\xa8\x84\x73\xf4\x0b\xe7\x75\xb4\x04\x94\xde\x68\xac\xdb\xa3\x50\xbb\x1c\x74\xf6\xc6\x80\xcc\xb1\x1f\xa9\x1c\xfb\x1d\x8d\xa7\x7e\xff\x08\xfe\xd8\xe1\xc8\xd5\x6d\x84\xcb\xe6\x1d\xe6\x8c\xd2\xec\x80\x7e\x61\x4f\x68\x14\x17\x3a\x87\xf8\xf5\x8f\x9b\x78\x0c\x1b\x08\x08\x4f\x4d\x01\x17\x3a\xc2\x68\xfc\x43\x7e\x36\x2d\x43\xab\x2f\x5f\x5b\x29\xd6\xf1\x7e\x3f\x6d\xac\xc3\x61\x29\x6b\x4e\x42\x1b\xbd\x8b\xbf\x38\xae\x81\xdc\x0b\xfc\x94\x96\x58\x33\xb7\xb5\x5a\xc1\x0d\xa5\xfb\x5e\x66\x3b\x9b\xfe\x5d\x25\x59\x36\x05\x26\x37\xed\xb5\xac\xa9\x68\x9e\x6e\xef\xbf\x62\x6a\x14\x2f\x26\xf5\xe8\x61\x67\xda\x0c\xe9\x45\x35\x34\x26\xe8\xec\x6b\x85\x4c\x5f\x1a\x01\x5b\x4e\x05\x93\xf9\x34\x95\xbe\xf5\x37\xac\xea\xb0\x8d\xf2\x4e\xa4\xf0\x01\xb7\x41\xcf\xd9\xfc\x52\x0a\x49\x82\x42\xdd\x51\x51\x05\x01\xc6\x1e\x9e\x37\x67\x77\x1b\xf4\xff\xe6\x35\x2f\x4f\xae\xc2\xfd\xef\x33\xf1\xaf\xa2\x3c\xdd\xf5\x03\x53\x4b\xd0\x25\x42\x5a\x71\x14\xda\x05\x3b\x33\xa9\xbe\xc3\x14\x69\x34\xa8\x3e\xa0\x45\x50\xc6\x7c\xca\x36\x53\x5b\x28\xb5\x6e\x92\x7e\xc3\x5a\xd5\x92\x94\xca\xac\x4b\x51\x59\xeb\x03\xd7\xc9\x47\xbf\x31\xbf\x38\x77\x5d\xc9\x0c\x83\xdd\xdd\x0a\x21\x7d\xf1\x99\xfc\x6e\x3d\x7c\x36\x4f\x7e\xcf\xb2\xd9\x38\x23\x8f\xf1\xa0\x71\x09\x79\xad\x93\x4f\xce\x34\x8b\x5f\x6f\xe2\x25\x04\x22\x4c\xc2\x01\xce\x4f\x2a\x9b\x0e\xb5\x41\xf9\x93\xdd\x6d\xe1\x23\x24\xd7\x32\x43\xb8\xfa\x89\x50\x3f\xbf\x79\x63\x3c\xe8\x9b\xe6\xcb\xd6\x9a\x46\xdd\x37\x3f\x6d\x8f\xe7\xba\x80\xce\x25\x7b\x48\x74\xdf\x47\x3f\xbc\x05\xc1\x2b\xd8\x4f\xb4\x5a\x2f\xfa\x54\xc3\xfa\xed\x70\x03\x7d\xe6\xe9\xaa\xc2\x69\xf0\x8c\xf3\x5f\xac\x67\xcf\x6b\xd9\x80\x12\x24\x78\x3a\x23\xc3\xdc\x5c\x4e\x85\xda\x16\x8f\xc2\x54\x12\xc3\x0e\x6a\x9e\x65\x15\x6e\x99\x42\xea\x26\x56\xb9\xbe\xd2\x25\x6f\xad\xfb\xd9\x60\x08\x44\x0a\x87\xc9\x17\x68\x68\xe1\xe1\x7f\xc3\xd2\x07\x56\xa0\x1f\xdb\xee\xff\xc1\x15\xf6\x67\x3a\x08\x72\x4e\x1f\xa1\x2d\x6b\xa1\x40\x81\x8a\x5a\x3e\x83\xfb\x9d\x55\xe9\xdf\x0a\x54\xf1\xb2\x4a\x0c\xfe\x7d\xc6\x35\x17\x85\x15\xe8\xfc\x6a\x5e\x94\xda\xa4\x6a\x83\x90\x77\xda\x52\x95\x28\x60\x27\x3b\x0a\xf2\x4a\x75\x62\xc2\xd4\x1f\x01\xa9\xac\xe9\x85\x92\x45\x51\xc4\xeb\x46\x2a\x0d\x33\x0a\x35\x16\xa8\x57\xa6\xde\x63\xb3\x28\x28\x15\xdd\x7d\x42\xc8\x55\x21\xaf\x3c\xc3\xf8\xaf\xef\x8c\x97\x81\xcd\xef\xcb\x90\x74\x57\x52\xb5\xdf\x25\x61\x45\x93\x8f\x67\x14\xd7\xcb\xbc\xdc\xe8\x88\xa3\x49\x1f\xfb\x61\x74\x63\xd3\xe1\xc7\xda\xa4\x39\xa7\xb3\x69\xec\xfb\xea\x01\x77\x4b\x78\x65\xc7\xaf\xa9\xdc\x64\x42\x62\xac\xfe\x1b\x35\xe6\xf3\xf0\x13\xd6\x79\x14\x5d\xa6\xed\x67\x94\x1d\x36\x04\x33\x1f\x8f\xca\xdc\xe6\xd9\x0b\xf7\x48\x7e\xa4\x9e\x8e\xe9\x61\x9c\x3e\x47\x75\xc1\xc1\x93\x1e\xd5\xd2\xe3\x4c\x2b\xe6\xda\xc4\x0a\x5c\x2d\xa6\xc4\x99\x4c\xe9\xe1\x4a\xe5\x4b\x9c\xc6\xde\xbf\x84\x6b\x9a\x35\x95\xed\x8e\xd1\xeb\x77\x2a\xc9\x92\x7a\xb7\xe3\xd9\xff\x07\x00\x00\xff\xff\xe1\x9e\xf1\x3c\xe2\x0b\x00\x00")

func templatesServerResponsesGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServerResponsesGotmpl,
		"templates/server/responses.gotmpl",
	)
}

func templatesServerResponsesGotmpl() (*asset, error) {
	bytes, err := templatesServerResponsesGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/server/responses.gotmpl", size: 3042, mode: os.FileMode(420), modTime: time.Unix(1450420897, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x54\x4d\x4b\x03\x31\x10\xbd\xe7\x57\x0c\xa1\x07\x5b\xec\xee\xdd\xa3\x88\x58\x50\x2f\x15\xf1\xd8\x90\x9d\xd5\x48\xbe\x48\x52\xb1\x96\xfc\x77\x67\xbb\xb5\xdd\x62\xdd\x05\x85\x1e\xbc\x0d\x79\x1f\x79\xf3\x9a\xee\x7a\x0d\x15\xd6\xca\x22\xf0\x98\xc2\x52\xa6\x5a\xa1\xae\x38\xe4\x4c\x88\xaa\xc1\xba\x04\xa3\x62\x16\x2f\x45\xc4\x87\x95\x47\x02\xca\x09\x10\x96\xd0\x78\x2d\x12\xe9\x2a\x27\x49\xaa\xec\x33\x87\xa2\xd5\xed\x31\x1f\x9c\xc7\x90\x56\x8f\x42\xab\x4a\x24\xe5\xec\x95\x93\xf3\x2f\x76\xce\x30\x29\x89\x8f\xb6\xca\x99\xd1\xe0\x45\x94\xc4\xfc\x40\x28\xee\x85\x41\xc2\x0f\xdc\xa2\x7c\x41\x23\x9a\x18\xed\x55\xb0\x78\x8d\xce\x5e\xf0\x36\xea\xa8\xb8\x11\xdd\x9c\xd3\xc6\x59\x47\x6c\x33\x6d\x0c\x69\x3c\x77\x46\x35\x8e\x69\xd5\x5e\x4c\x47\x5b\x7d\xf1\x74\x77\xbb\x25\xc1\xbb\xd1\x1b\xdb\xce\x19\xdf\xf1\x17\x6c\x37\xb2\x4e\x7f\x69\xe9\x35\xee\xea\x63\xa7\xea\x6f\x1f\xe6\xf7\x05\x4e\xf9\x02\xca\x12\xe4\x32\x26\x67\x20\x62\x50\x1b\x93\x70\x7c\xd1\xce\x43\x99\xd5\x42\xe2\x29\x5f\x4b\xff\xb6\x67\xe3\xfe\x7d\xd9\x1c\xd3\x51\x5d\xaf\x6a\x3c\xf4\x7b\x0f\xb7\xc0\xfe\x6f\x0d\x3e\xa8\xb7\xef\x9f\x0e\x49\x86\x5d\xeb\xeb\x06\x1b\x48\xf5\xa3\xfd\xe1\x3f\xeb\xcf\xee\x9f\x01\x00\x00\xff\xff\xca\x00\xb4\x63\xf4\x04\x00\x00")

func templatesStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesStructfieldGotmpl,
		"templates/structfield.gotmpl",
	)
}

func templatesStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/structfield.gotmpl", size: 1268, mode: os.FileMode(420), modTime: time.Unix(1449556235, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSwagger_json_embedGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xcb\x6e\x83\x30\x10\x45\xf7\xfe\x8a\x2b\x94\x4a\x89\xd4\x92\x7d\xa5\xec\xda\x45\x2b\xf5\xa1\xa6\x3f\xe0\xe0\x01\xdc\x60\x9b\xfa\x41\x84\x22\xfe\xbd\x03\x09\x52\xc9\x6e\xc4\x1c\x1f\xe6\xce\xb4\xb2\x38\xca\x8a\x70\x3e\x23\xff\xbc\xd6\xc3\x20\xc4\x76\x8b\xef\x5a\x07\x94\xba\x21\x9c\x64\x40\x45\x96\xbc\x8c\xa4\x70\xe8\x11\x6b\x42\x38\xc9\xaa\x22\x8f\xe8\x5c\x93\x8f\xfc\xb3\xd2\x51\xdb\x8a\x9b\xf3\x3b\xa3\xab\x3a\xa2\xf5\xae\x23\x94\x29\x4e\xaa\x9a\x2c\x7a\x97\xe0\xe9\xc1\x27\xbb\x30\xcd\xbf\x40\xe1\x8c\x91\x56\x09\xa1\x4d\xeb\x7c\xc4\x5a\x00\x19\xd9\xc2\x29\xf6\x6f\x7f\x82\xb3\x99\xe0\x4f\x3c\xb3\x97\x96\x07\xce\x9f\xa8\x94\xa9\x89\x2f\x13\x1e\x38\x00\xb7\x5a\xaf\x6d\x2c\x91\xdd\xfd\x66\xc8\x39\xd2\xc4\x93\x55\x98\xeb\xcb\xdb\xd5\x91\xfa\x7b\xac\x3a\xd9\x24\xc2\xe3\x0e\xf9\x42\x32\x76\xb9\xc2\x8d\xef\x8a\xdf\x58\x37\xd3\xda\xf6\x97\x34\xaf\xfb\x8f\x77\x90\x39\x90\x52\xbc\xb3\x8e\x7c\xd0\xce\xc2\x95\x8b\xc4\xca\x15\xc9\x90\x8d\x48\x81\x21\x19\xe7\x15\x8c\x68\xd4\x86\x44\x27\xfd\x42\xb8\xc3\x98\x3e\xff\x92\xa7\x37\x0a\x81\x8f\xb5\x1e\x0f\xf7\x9f\x18\x86\x8d\xf8\x0b\x00\x00\xff\xff\x3a\xba\xd6\x9f\xd5\x01\x00\x00")

func templatesSwagger_json_embedGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSwagger_json_embedGotmpl,
		"templates/swagger_json_embed.gotmpl",
	)
}

func templatesSwagger_json_embedGotmpl() (*asset, error) {
	bytes, err := templatesSwagger_json_embedGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/swagger_json_embed.gotmpl", size: 469, mode: os.FileMode(420), modTime: time.Unix(1447794014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTuplefieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesTuplefieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTuplefieldGotmpl,
		"templates/tuplefield.gotmpl",
	)
}

func templatesTuplefieldGotmpl() (*asset, error) {
	bytes, err := templatesTuplefieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tuplefield.gotmpl", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTupleserializerGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\x5d\x6f\xdb\x36\x17\xbe\xb6\x7e\xc5\x79\x8d\xbc\x85\xd5\x09\x2a\x92\xcb\x14\x19\x90\xac\xdd\x90\x01\x49\x86\x76\xdb\x4d\x10\xb4\xb4\x44\xc7\x4a\x64\x49\x23\xa9\x24\x9e\xe0\xff\xbe\x73\x48\x7d\x5a\x94\x9d\x0f\x37\x2b\x96\x8b\xc0\x26\x0f\xcf\xe7\x73\x1e\x1e\xba\x28\x20\xe4\xb3\x28\xe1\x30\x56\x79\x16\xf3\xcf\x5c\x44\x2c\x8e\xfe\xe6\x62\x0c\xab\x95\xf3\xee\x1d\xfc\x91\x2c\x98\x90\x73\x16\xff\xfa\xf9\xe2\x1c\xf2\xea\x9b\x04\x35\x8f\xf0\x1f\x1d\x02\xb5\xcc\x38\xcc\x44\xba\x00\x06\x5a\x8c\x09\xc1\x96\xce\x2c\x4f\x02\x98\x14\x85\xff\x89\x07\x3c\xba\xe3\xe2\x9c\x2d\xf8\x6a\x05\x6f\xd1\x6a\xc6\x64\xa0\x0d\x81\x4f\xab\x68\xcc\xed\x9a\x9a\x84\x4c\x31\xb8\xbc\x9a\x2e\x15\x77\x81\x0b\x91\x0a\x28\x1c\x00\x74\x49\x2a\x76\xcd\x61\xdf\x83\x6b\xae\xd0\x0d\x6e\xcc\xc1\x34\x57\x70\x93\xcb\xd6\x12\x8a\xdf\x31\x61\xe4\xf7\x51\xd7\x8d\x4c\x13\xff\x13\xbb\x3f\xe3\x52\xe2\x12\x6e\x47\x33\x52\x0d\x87\x47\xa0\xf7\x6a\x0f\xb4\x75\x0f\xde\x98\xa3\xee\x7b\x2d\xf5\xbf\x23\x48\xa2\x58\x7b\x01\x20\xb8\xca\x45\x42\xeb\xf8\x75\xd5\x76\xec\x00\xc3\x43\xbd\xfe\x71\x18\x46\x2a\x4a\x13\x16\x9f\x2a\xbe\x90\x94\x4f\xe3\x4f\xcc\xa4\x3a\x4d\x42\xfe\x00\x51\xa2\x70\x0d\xe5\x79\x12\x9a\x7d\xfc\x2c\x58\x82\x5a\xf6\xa2\xf0\xc1\x83\xbd\x3b\x16\x93\x77\xfe\x6f\x22\xcd\xb8\x50\x11\x27\x3d\xa8\x3d\xe6\xc9\xa4\x74\x0e\x7e\xa4\x53\x24\x8f\x5b\xa5\x77\x83\x71\x99\x33\x97\xcd\x81\x2b\x0f\x8c\xbf\x49\xaa\xb4\x39\xff\x54\x9e\xe7\x71\xcc\xa6\x31\x55\xe5\x4d\xed\x1c\x1d\xa1\xed\x76\x31\x71\xd9\xef\x14\x53\x4b\x54\x05\xb5\x64\x6d\x2d\x6f\x98\x39\x63\x7c\xcf\x9e\x2d\x68\xe5\xea\xa8\x15\x65\x51\xa0\x4f\x5a\x62\xd5\xcf\xdf\x60\xee\x7b\x69\xab\x95\xff\xb0\x5f\xfa\x37\x43\x94\x7d\xf1\xa0\xcc\xba\xa9\x44\x99\xb2\x96\xf0\xe1\x55\x1d\x0e\xd5\x53\xa5\x2c\x0c\xc9\x32\x9a\xca\x62\xa6\xb0\x99\x64\x30\xe7\x0b\xf6\x3b\xf6\xc5\x78\xc0\x99\x8d\x55\x42\xfb\x08\x3e\xad\xd7\x9e\xc5\x5e\x1e\x4d\x26\xe8\x0f\xfd\xf0\xff\x64\x71\xce\x3f\x3e\x64\x02\x81\x8e\x86\x09\x17\x47\xc0\xb2\x0c\xd3\x34\xb1\xef\x7b\x26\x0a\xd7\xa9\x54\x75\x12\x5b\x1a\x43\x0f\x9c\x95\x43\xac\x70\xd6\xe2\x84\x41\x46\x40\x74\xa7\x8f\x63\x84\x01\x42\x68\x59\x99\xb8\x30\x31\x64\xe0\x19\x32\x70\x75\x2e\x34\x49\x60\xfe\x2e\xaf\xd0\x18\x17\x33\x16\xf0\x62\x55\xb4\xfb\xa8\xdb\x39\x56\x43\x5e\x3b\x54\xd8\x86\xa2\x0a\x22\x0d\x40\x28\xa3\x6b\xa2\xb6\x0a\x98\xda\x69\x8f\xeb\x62\x18\x9a\xb9\x73\x2d\x48\x2e\x73\xae\x91\x71\xd6\x62\x25\x17\x4b\xd0\xc8\xb5\x08\x3c\x8c\x64\x20\xa2\x45\x94\x20\x02\xc3\xa7\x12\x79\x96\xc6\xcb\x45\x2a\xb2\x79\x14\xf4\xe9\x5c\x2a\x91\x07\xe8\x0d\x7f\x21\xa5\x0b\x76\x6f\x61\x74\x6a\x21\x9d\x95\x6e\x07\xe5\x53\x6a\x9f\x93\x34\x5c\x62\x0b\x51\x0c\x9b\xe8\x1a\x35\x63\xc3\xe8\xf4\x6c\xe7\xea\x0e\x3c\x8e\xe3\xf8\x62\x66\x90\x31\x00\x18\xe2\x46\x64\x36\xff\x43\x93\xdf\x54\xfc\x1c\xf1\x38\xac\x03\xed\x25\xc4\x2f\x11\x74\x2a\x4f\x98\xe4\x14\x88\x56\x15\xe0\x66\x27\x43\x5a\x0d\x55\x33\x96\x7c\x08\x9e\x0d\x34\x8f\x74\x9e\x7c\xab\x54\x1b\x3d\xd6\x0f\xcf\x8f\x6e\xd8\xa8\x21\x65\xdb\x95\xb0\xf3\xe0\xad\xf1\x35\x6d\xf2\x18\x6a\xea\x61\xbc\xa1\xa7\xed\x08\x7f\x36\x45\x3d\x01\xde\x3b\x46\xe5\xf7\x5b\xb7\xff\x3a\x2e\x2d\x9e\x59\xe2\xa8\xfc\xcc\x04\x5e\x5e\x33\x18\xff\xff\xaf\xf1\x9a\x9c\xbe\x45\x9e\x79\x1d\xcc\x99\xfc\xf0\x92\x1b\x21\x9d\xde\xf0\x40\xc1\x7d\xa4\xe6\xd8\x25\xdf\xdd\xfd\x40\x7e\xa5\xb9\xaa\x2a\xa9\x1b\x69\xb7\xd7\xc4\x40\x3f\x1a\x04\x1d\x27\x69\x82\x09\xc9\x65\x1b\xc4\x9b\x66\xf6\x1e\xf6\x70\x8d\x91\xd6\xf6\x54\x3b\x30\x49\x7b\x55\x38\x75\x24\xd5\x30\xfe\x4b\x5a\xaa\x9a\x50\xd6\xa4\x7f\xce\xef\x4f\xf2\xd9\x8c\x0b\x0a\xd5\xf5\x60\xae\x54\x76\x1b\x29\x9f\xd2\xfb\x53\x9a\xc8\x7c\x81\x5b\xae\xbb\xb5\x29\xf5\x78\xbd\xb1\x39\x19\x8a\x4e\xf4\xa3\x81\xb2\xa1\x1f\x60\xee\x5a\x78\xb6\xde\xb2\x86\xf2\x82\x30\xca\x52\x6f\xa8\x63\xd5\xc8\xa5\xcf\xb5\xb7\x5d\x5f\x09\x64\x36\x7f\xa1\xe3\x1e\xea\xcb\x13\x82\x7f\x78\x31\xbd\xa1\x28\x16\xec\x96\x4f\x16\x2c\xbb\xc4\x16\x88\x92\xeb\xf6\x14\xea\x6e\x07\x62\xa3\xeb\x51\x70\x44\x6d\xe5\x09\xfb\x18\x0b\xe9\x2d\x99\x6a\xb4\x5e\xae\x93\x4b\x29\x79\xf5\x9e\x44\xeb\x97\xa2\x8c\x83\xbe\xc2\x9e\x3e\xab\x4d\x7f\xd2\x99\xbc\xdd\x96\xe2\x7a\x52\x46\xf5\x1f\xdb\xcf\x29\x9b\xb5\x66\x3e\xa6\x3f\x14\xa1\x4a\x7b\xf0\xa5\x4e\x5d\x45\x79\x5a\x99\xdb\x96\xc4\x38\xed\xa0\x32\x83\xf8\x30\xb4\x4a\x2b\x1b\xe1\xd5\x79\xa7\xf5\xde\x60\x96\x57\x58\xf3\x0e\x03\x3b\x9e\xda\xef\x30\x4b\x77\x98\x80\xdc\xce\x9b\x6e\xe0\x9d\x5b\x7e\x76\x4a\x8a\xc4\x97\x46\x1e\x2b\xfb\x9c\xb2\x63\x2e\x33\xa6\x86\x5f\xfe\xe6\x5a\xa3\x67\xbd\xf9\x3d\x61\x80\xf2\x36\x30\x5e\x73\xfb\xf6\xaf\xd2\x5a\xee\x71\x53\xc6\x20\x8f\xd9\xa2\xe8\x45\xb0\x9d\xd1\x36\xb9\xba\xc9\xcd\xb7\x96\x09\x05\xcd\x1a\xaf\x9e\x36\xd8\x6e\xb9\xaa\xbf\xfd\x98\xab\x7f\x9a\x11\xed\x58\x08\x33\x6b\xc1\x39\x23\x82\xe9\x74\xdf\x83\xe9\x41\x79\xcd\x9b\x25\xea\x2d\xad\xc9\x19\xd1\x2e\x7d\x5d\xeb\xfa\xad\x37\xbf\x1e\xa1\x8b\x67\xc0\xdc\x3a\x77\x9a\x4b\xad\x5b\xf7\x7e\x56\x0e\xfb\x51\xaf\xff\x1c\x66\xfd\x85\xe1\xd9\xe3\xf0\x2b\xb9\x45\x6c\xe3\x3a\xa3\x75\xd2\x1b\x8d\x1a\x44\xea\x22\x39\x23\x2c\xe9\xf4\xc0\x5a\x30\x03\xb4\x62\x27\xe5\xe8\xc6\xec\x94\xcc\x6a\xbb\x40\x06\x7f\x81\xa3\xdd\xaf\xe4\xe0\xe1\x98\xba\xae\x0a\x3f\x5d\x44\x74\x40\x2d\xc7\x5f\x77\x51\xa0\x7f\xc1\x51\xcd\x6f\xab\xd7\xcd\xf3\x6b\xe3\xfe\x9b\xf9\x55\x5d\x0e\xc6\x87\xc7\x63\xbe\x5c\x93\xf7\xec\xda\xc7\x71\x21\x60\x4a\xf3\xa2\x61\x36\x1c\x27\x0c\x65\x37\xfd\xf4\x4f\x00\x00\x00\xff\xff\x11\x81\xde\xe1\x65\x19\x00\x00")

func templatesTupleserializerGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesTupleserializerGotmpl,
		"templates/tupleserializer.gotmpl",
	)
}

func templatesTupleserializerGotmpl() (*asset, error) {
	bytes, err := templatesTupleserializerGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/tupleserializer.gotmpl", size: 6501, mode: os.FileMode(420), modTime: time.Unix(1449939631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationCustomformatGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\xb1\x27\x0b\xa5\x1f\xa0\xf4\xa8\x27\x41\x4f\xde\x17\x4d\x74\x21\x26\xb2\xd9\x8a\x10\xf6\xdf\xb5\xe9\x6d\xe6\xf1\x86\xe1\x00\x2f\x82\xdd\x84\x0f\x45\xbe\x93\xfa\xf1\x98\xe5\x45\x7a\x0e\xdb\x5a\xc7\x0b\xe9\xd3\x6c\x40\xf7\xcf\xa7\x7c\x23\xe5\x9c\xcc\xba\x15\xac\x62\xab\x45\x85\xd3\x63\x59\x5c\x29\xce\xfe\xf0\x7d\x8b\x2f\xa5\xc9\xfd\x80\xd0\xc4\xd2\xef\xdb\xd7\x66\x42\xe2\x88\xea\x00\xf1\x3a\x4b\x5a\xa8\x33\xf7\x0b\x00\x00\xff\xff\x65\xa7\x7e\x3f\x8b\x00\x00\x00")

func templatesValidationCustomformatGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationCustomformatGotmpl,
		"templates/validation/customformat.gotmpl",
	)
}

func templatesValidationCustomformatGotmpl() (*asset, error) {
	bytes, err := templatesValidationCustomformatGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/customformat.gotmpl", size: 139, mode: os.FileMode(420), modTime: time.Unix(1449387782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationPrimitiveGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xcf\x6a\xc3\x30\x0c\x87\xef\x79\x0a\x2d\x63\xb0\xc2\xe8\x69\xec\xb0\xd1\x63\x6e\x1d\xdb\x69\xe7\x9a\x56\x69\x0d\xae\x92\x39\x4a\x08\x04\xbd\xfb\xec\x36\x7f\xba\xd1\x84\x19\x4a\x6e\x96\xbe\x38\xfe\x7d\x48\x4d\xa3\x53\x58\xbe\x6b\x5a\x23\xed\xf9\x20\x12\xb9\x1a\xad\x85\xd7\x15\x54\xca\xe8\x9d\x62\x1c\xf0\x63\xd3\x80\xff\xfe\x53\xf1\x01\x44\x5c\x35\x1c\xd1\x14\x28\x12\xc7\xee\x44\x3b\x91\x27\x70\x34\xb7\x9a\x38\x85\xf8\xe1\x3b\x86\xe5\x3a\xdb\x2a\xd6\x19\x81\x87\x05\x3b\xb4\x77\xff\x5b\x7e\x29\x53\x62\x52\xe7\x16\x8b\xc2\x51\x91\x85\xbf\x7a\x19\x69\xf1\x76\x4a\x74\xb7\x02\xd2\x06\x9a\x08\xc0\x22\x97\x96\x7c\x37\x92\xa8\x7d\x30\x6a\x55\x54\x3d\xa9\xd2\xe1\x39\x55\x86\x48\x41\x2a\x2e\x0f\xa3\xa5\xeb\x22\x2d\x9c\x4b\x63\xe3\xfa\x7d\x9e\x4d\xd8\x44\x34\xe9\x63\x79\x1c\x5d\x2d\x0f\x6f\xa7\x91\x9a\x4c\xf1\xcb\xf3\xf4\x66\x9d\xf3\x9c\xaa\xa4\xde\x9a\xb2\xd0\x15\xf6\xed\xd0\x75\x9b\x90\x3b\xc3\x59\xe5\xba\x3c\x7f\xe4\xba\x76\x98\x5c\x69\x58\xe7\x06\x3f\xd2\x11\xbf\x9e\xcf\xaa\x78\x91\x2a\x48\x27\xa1\xb1\x41\x79\x72\x3b\x85\x6b\xd1\x7f\x5f\xb9\xaf\xe2\x2e\xce\x3f\x0d\x7e\x02\x00\x00\xff\xff\xb5\x88\x47\x55\xa8\x05\x00\x00")

func templatesValidationPrimitiveGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationPrimitiveGotmpl,
		"templates/validation/primitive.gotmpl",
	)
}

func templatesValidationPrimitiveGotmpl() (*asset, error) {
	bytes, err := templatesValidationPrimitiveGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/primitive.gotmpl", size: 1448, mode: os.FileMode(420), modTime: time.Unix(1449366574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesValidationStructfieldGotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x4e\xc3\x30\x0c\xbe\xef\x29\xac\x3d\x00\x0f\x30\x21\x4e\x70\x40\x02\x15\x81\xe0\x1e\x2d\xee\xb0\x94\xba\x5d\x96\xa0\x4d\xd5\xde\x9d\xb4\x49\x13\xaf\xcb\xa9\x76\xbf\x1f\x7d\x8e\x3d\x8e\xa0\xb1\x25\x46\xd8\x0e\xb6\x1f\xd0\xba\xcb\x8f\x32\xa4\x95\xa3\x9e\x9f\xfb\xfd\x97\xb3\xc4\x87\x2d\x5c\xaf\x81\x49\x2d\x3c\x7c\xe2\xd1\x93\x45\x1d\xfe\x6c\x96\x7a\x07\xce\x7a\x0c\x04\x64\x2d\x99\x4a\x37\x6c\x2e\x91\xa9\x34\x4c\x4d\x9d\xfa\xae\xce\xd4\xf9\x6e\x62\xa6\x72\x07\x09\x7a\x39\xef\x8d\x3f\xd1\x1f\x16\xce\x23\x48\xbd\x10\xdf\xd9\x12\x67\xdb\x58\x56\x6c\x33\xe7\x69\x65\x9b\x81\x3b\x5b\x6f\x1c\x0d\x06\x9b\x76\x76\x4e\x1d\x34\xed\xec\x7e\x0b\x57\x26\x7d\x43\x3e\xb8\xdf\x34\x2b\xc4\x2e\x29\x05\x58\x99\x45\x08\x89\x6f\x85\x02\x5c\x0b\x3f\x94\x73\x68\x79\x92\xa5\x32\x6a\xca\xff\x4a\xc6\x57\x87\xdd\x69\x89\x38\x37\x39\xe1\x02\x55\x02\x16\x55\xc8\x27\x55\x05\x5a\xab\xbe\x99\x8e\x1e\xb3\x30\xb6\xd5\x23\xe9\xad\x38\xa9\x72\x86\x79\xfd\x79\x61\x72\x01\xe2\x65\xc4\xeb\xe6\xd9\x4b\xb2\x32\xd9\x3a\xd2\x38\x86\x14\x53\x88\xf9\xb3\xf9\x0f\x00\x00\xff\xff\x11\x4c\xd0\x4a\x31\x03\x00\x00")

func templatesValidationStructfieldGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesValidationStructfieldGotmpl,
		"templates/validation/structfield.gotmpl",
	)
}

func templatesValidationStructfieldGotmpl() (*asset, error) {
	bytes, err := templatesValidationStructfieldGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/validation/structfield.gotmpl", size: 817, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/additionalpropertiesserializer.gotmpl": templatesAdditionalpropertiesserializerGotmpl,
	"templates/client/client.gotmpl": templatesClientClientGotmpl,
	"templates/client/facade.gotmpl": templatesClientFacadeGotmpl,
	"templates/client/parameter.gotmpl": templatesClientParameterGotmpl,
	"templates/client/response.gotmpl": templatesClientResponseGotmpl,
	"templates/docstring.gotmpl": templatesDocstringGotmpl,
	"templates/header.gotmpl": templatesHeaderGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/modelvalidator.gotmpl": templatesModelvalidatorGotmpl,
	"templates/schema.gotmpl": templatesSchemaGotmpl,
	"templates/schemabody.gotmpl": templatesSchemabodyGotmpl,
	"templates/schematype.gotmpl": templatesSchematypeGotmpl,
	"templates/schemavalidator.gotmpl": templatesSchemavalidatorGotmpl,
	"templates/server/builder.gotmpl": templatesServerBuilderGotmpl,
	"templates/server/configureapi.gotmpl": templatesServerConfigureapiGotmpl,
	"templates/server/doc.gotmpl": templatesServerDocGotmpl,
	"templates/server/main.gotmpl": templatesServerMainGotmpl,
	"templates/server/operation.gotmpl": templatesServerOperationGotmpl,
	"templates/server/parameter.gotmpl": templatesServerParameterGotmpl,
	"templates/server/responses.gotmpl": templatesServerResponsesGotmpl,
	"templates/structfield.gotmpl": templatesStructfieldGotmpl,
	"templates/swagger_json_embed.gotmpl": templatesSwagger_json_embedGotmpl,
	"templates/tuplefield.gotmpl": templatesTuplefieldGotmpl,
	"templates/tupleserializer.gotmpl": templatesTupleserializerGotmpl,
	"templates/validation/customformat.gotmpl": templatesValidationCustomformatGotmpl,
	"templates/validation/primitive.gotmpl": templatesValidationPrimitiveGotmpl,
	"templates/validation/structfield.gotmpl": templatesValidationStructfieldGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"additionalpropertiesserializer.gotmpl": &bintree{templatesAdditionalpropertiesserializerGotmpl, map[string]*bintree{}},
		"client": &bintree{nil, map[string]*bintree{
			"client.gotmpl": &bintree{templatesClientClientGotmpl, map[string]*bintree{}},
			"facade.gotmpl": &bintree{templatesClientFacadeGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesClientParameterGotmpl, map[string]*bintree{}},
			"response.gotmpl": &bintree{templatesClientResponseGotmpl, map[string]*bintree{}},
		}},
		"docstring.gotmpl": &bintree{templatesDocstringGotmpl, map[string]*bintree{}},
		"header.gotmpl": &bintree{templatesHeaderGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"modelvalidator.gotmpl": &bintree{templatesModelvalidatorGotmpl, map[string]*bintree{}},
		"schema.gotmpl": &bintree{templatesSchemaGotmpl, map[string]*bintree{}},
		"schemabody.gotmpl": &bintree{templatesSchemabodyGotmpl, map[string]*bintree{}},
		"schematype.gotmpl": &bintree{templatesSchematypeGotmpl, map[string]*bintree{}},
		"schemavalidator.gotmpl": &bintree{templatesSchemavalidatorGotmpl, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"builder.gotmpl": &bintree{templatesServerBuilderGotmpl, map[string]*bintree{}},
			"configureapi.gotmpl": &bintree{templatesServerConfigureapiGotmpl, map[string]*bintree{}},
			"doc.gotmpl": &bintree{templatesServerDocGotmpl, map[string]*bintree{}},
			"main.gotmpl": &bintree{templatesServerMainGotmpl, map[string]*bintree{}},
			"operation.gotmpl": &bintree{templatesServerOperationGotmpl, map[string]*bintree{}},
			"parameter.gotmpl": &bintree{templatesServerParameterGotmpl, map[string]*bintree{}},
			"responses.gotmpl": &bintree{templatesServerResponsesGotmpl, map[string]*bintree{}},
		}},
		"structfield.gotmpl": &bintree{templatesStructfieldGotmpl, map[string]*bintree{}},
		"swagger_json_embed.gotmpl": &bintree{templatesSwagger_json_embedGotmpl, map[string]*bintree{}},
		"tuplefield.gotmpl": &bintree{templatesTuplefieldGotmpl, map[string]*bintree{}},
		"tupleserializer.gotmpl": &bintree{templatesTupleserializerGotmpl, map[string]*bintree{}},
		"validation": &bintree{nil, map[string]*bintree{
			"customformat.gotmpl": &bintree{templatesValidationCustomformatGotmpl, map[string]*bintree{}},
			"primitive.gotmpl": &bintree{templatesValidationPrimitiveGotmpl, map[string]*bintree{}},
			"structfield.gotmpl": &bintree{templatesValidationStructfieldGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

