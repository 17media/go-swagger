package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_model_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x4e\xc4\x20\x10\x86\xef\x3c\xc5\xa4\x59\x13\x4d\xb4\x7b\xdf\xc4\x93\x7a\xf0\x62\x4c\xdc\x07\xd8\xb1\x9d\xb6\xb8\x05\x2a\x4c\x77\xd3\x10\xde\x5d\xa0\x6d\xd6\xf5\xe2\x0d\xca\xf7\x4f\x7f\x3e\xbc\xaf\xa9\x91\x9a\xa0\x50\xa6\xa6\x7e\xb0\x66\x20\xcb\x53\x11\x82\xf0\x5e\x36\x50\x3e\x9b\xea\x83\xad\xd4\x6d\x08\xde\x5f\xef\x48\xd7\x19\x2b\xdf\x97\xd4\x1b\x2a\x0a\x01\x12\x87\x8c\xfb\x69\x48\xbb\xc3\x97\x33\x7a\x57\x24\x0c\x2d\xaa\x99\x29\x0e\x62\xcd\x8b\x01\xab\x23\xb6\x04\x99\xc8\xcb\xf4\x75\xbb\x85\x7d\x27\x1d\x34\xb2\x27\x38\xa3\x83\x96\x34\x59\x64\xaa\xe1\x73\x02\xee\x08\xdc\x19\xdb\x96\x2c\xb0\x31\x7d\x99\xf8\x97\x5a\x72\xac\x16\x0f\xd7\x9c\x92\x6d\xc7\x10\x2f\x75\x22\x68\x46\xce\xa3\x3a\xd2\x30\x99\x11\x2c\x3d\xd8\x51\x5f\x4d\x5a\x7f\x01\x95\x51\x0a\x75\x2d\x16\x07\xaf\x6a\x30\x96\x5d\x08\x72\x5e\xc0\xad\x80\x58\xd7\xa2\x8e\xb5\x37\x47\x9a\xee\x61\x73\xc2\x7e\x24\xd8\x3d\xfe\xa2\x33\x94\x8e\xb3\x93\x58\x43\x6a\x6e\xa0\xb8\xf9\x2e\x16\x7c\x41\x66\x0f\x77\x17\x23\xff\x98\x5f\x41\x8e\x82\x93\xb5\xa7\x1e\x9d\x5b\xdc\x3b\xb6\x63\xc5\xe0\xc5\x5a\x6f\x7d\x1c\x49\x2e\x27\x99\xd4\xd0\xa7\x3b\xfe\x79\x70\x28\x2f\x83\x45\x10\x3f\x01\x00\x00\xff\xff\x80\x30\xad\xe3\x18\x02\x00\x00")

func templates_model_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_model_gotmpl,
		"templates/model.gotmpl",
	)
}

func templates_model_gotmpl() (*asset, error) {
	bytes, err := templates_model_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/model.gotmpl", size: 536, mode: os.FileMode(420), modTime: time.Unix(1424659214, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_modelvalidator_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x09\x1d\x60\xb5\x89\xb2\x01\xc3\x1e\xd6\x75\x40\x91\x79\x68\x80\x2e\x0d\x92\x6e\xcf\x65\xe4\x93\xcc\x56\x22\x1d\x91\x4a\xe2\x09\xfa\xee\x3b\x92\xa2\x64\xfd\xb1\x63\x27\x18\xb0\x27\x53\x77\xe4\xdd\xef\x7e\xf7\x87\x74\x55\x2d\x31\xe1\x02\x21\x58\x17\x3c\xe7\x9a\xdf\xe3\x3d\xcb\xf8\x92\x69\x59\x04\x75\x3d\xab\x2a\x9e\x40\x74\x8d\x77\x25\x2f\x70\x49\x02\xfa\xc4\xa2\x80\x5f\xde\x41\xb3\x0f\x5b\xed\xbc\xaa\xa2\x2b\xa6\x57\x75\x7d\x02\x01\xad\x3f\xca\x98\x69\x2e\x45\x5d\x07\x27\x40\xdf\x7f\xb3\xac\xc4\xc5\xe3\xba\x40\xa5\xac\x38\x7c\x6b\x6d\x7d\xf7\x0e\x04\xcf\xa0\x9a\x01\x14\xa8\xcb\x42\x18\xe9\xcc\xf8\x46\xb1\x6c\x31\xfc\xc9\xc5\x47\x14\xa9\x31\x3f\x05\xa2\x55\x1f\x8d\xc2\x4a\xb7\xac\x1f\x87\x8a\x3d\xee\x45\xe5\xd5\xcf\x44\xd5\x59\x3f\x0a\x15\x79\xd2\x58\x88\x69\x4c\x8d\xf2\x19\x88\xbe\xb8\x23\xce\xf4\x97\x63\xb3\xc7\xf3\x32\xdf\x99\x3b\xa3\xdc\x8b\x28\xc9\x24\xd3\x3f\xff\x34\x9f\xac\x23\x9f\x42\xe7\xc2\x7e\x2d\x1e\xe3\xac\x54\x54\xce\xad\xf8\xd8\xbc\xee\xc1\xeb\x94\x2f\xc5\xeb\x5d\x0c\xf0\x7a\xf1\x71\x78\xcb\x4c\xf3\x75\x86\x9f\x92\x1d\x90\x5b\xfd\x4b\x51\x6f\x39\x3a\x0a\xe1\x42\xec\xa2\xd3\x68\x9e\xd7\x1f\xce\xe6\xc1\x30\xfc\xaf\x1f\x79\x71\xa9\xb4\xcc\x13\x59\xe4\x4c\xf7\xa6\xde\x04\xc8\x3f\xec\xae\x27\xe8\x33\x02\xb7\xd1\x7e\x2a\x5d\x70\x91\xee\x22\xd3\xf9\x55\x07\xa3\xf7\xa8\x55\xc6\xe3\xa9\x21\x7d\x89\xb8\x54\x37\xfc\x1f\xb4\x12\x02\x59\xb0\xfc\x92\xe5\xf4\x69\x84\x26\x18\x2e\x4c\x6e\x33\x14\xd3\x90\xc2\x71\xcf\x5e\x68\xcc\xd5\xce\xa6\xb5\xda\xa7\x32\x37\xc0\xe1\x5b\xb5\xb1\x7c\x6c\x53\xee\x03\xd4\x68\x9f\x05\xa8\xb5\x7c\x14\xa0\xbf\x04\xbf\x2b\x71\x0f\xa6\xad\x0d\xff\xed\xed\xf8\x3f\xe8\x2e\x03\xe3\x86\xea\x3d\xc3\x9b\x78\x85\x39\xbb\x31\x75\x0a\xa4\x3a\x3b\x03\x65\xe5\xa0\xac\x62\xd2\xe3\x8c\xda\x01\xb8\x41\xfe\xc3\x5b\xfa\xfd\x15\x76\x96\x29\xa9\xdf\xbc\x21\x20\x55\x55\x30\x91\x22\x44\x9e\x7f\x20\xc3\xb4\x5c\x67\x14\xb6\x79\xcf\xc8\x35\x16\x7a\xd3\x75\x0a\x44\x5b\x53\xc0\xae\x32\x85\x0e\x9f\x90\x7a\x8c\xf1\xaa\xb1\xe0\x6a\xe5\x85\xfe\x1c\x3f\xef\x97\x4b\x6e\x88\x67\x59\x67\xa4\x0d\x9c\x5c\x5a\x29\x5d\xf9\x75\x6d\x48\x20\x16\x6c\xb7\x86\x70\xda\x57\x1a\xc1\x8f\x66\x87\x25\x02\xe0\x20\x24\x00\x5b\x31\x13\x98\x9d\x04\xc3\x6f\x7d\x6f\x83\xa4\xcb\x42\x0d\xe3\xb8\x94\xfa\x7d\x96\xc9\x07\x7a\x03\x06\x53\x26\x83\x51\xd9\x85\x93\x83\x79\x38\xea\xe4\xed\x57\x8c\xfb\xa3\x99\x92\xe5\xc6\x36\x38\xa5\x81\xfa\x3b\xd3\xec\xf3\x66\x3d\x1e\x7c\xd7\xa8\x1a\x62\x47\x90\x8c\xc4\x36\xc8\xdc\xcf\x61\xc3\xc9\xe8\x78\xf4\x81\xa9\x85\x8d\x99\xb2\x30\xe6\xe1\x5c\xe6\x6b\xa9\xb8\xc6\xc6\x1a\x99\xb6\xbb\xe7\x63\x43\xce\x4a\x14\x45\xe1\xe4\x54\x1f\x27\xad\x2d\x9a\x0b\x75\xe5\xdf\xe6\x75\xdd\x4f\xf4\xe8\xc9\x6e\x32\xdd\x2f\xb9\x0b\x75\x6e\xf9\x72\xf7\x12\xbd\xdd\xfa\x36\xa6\xef\xc0\x49\x33\x52\x68\x46\x58\x07\x06\x06\xd7\xd1\xf4\x49\xda\x8c\x8f\x9f\x6c\xc2\xfa\xa7\x87\x19\xee\x1f\x77\xbf\x6b\x16\x7f\x63\xd4\x78\x96\x53\xbb\x24\xa1\x29\x84\xcf\x2b\xae\x20\xe1\xd4\xb4\x0f\x4c\x41\x8a\x84\x8d\x8c\x2e\xe1\x76\x03\x7a\x45\x9d\xfc\xc0\xd2\x14\x0b\xd0\x52\x66\x91\xd9\xbf\x30\x45\x2b\x52\x52\xfa\x73\x39\x4f\x57\x1a\x88\xfb\x7b\x84\xa4\xd4\xd6\xd4\x0a\x05\x6c\x64\x49\x99\x3e\x2d\x4a\xd1\xb3\xe4\x5d\x40\x2c\xf3\x9c\x89\xe5\x6c\xc6\x29\xff\x85\x86\x39\x55\x46\x90\x72\xbd\x2a\x6f\x23\xd2\x9d\xc5\x4c\x95\x2c\xfb\xca\xf3\xb3\x54\x9e\x36\xa7\xcf\x5c\xcd\x04\x87\x6c\xa5\x97\x43\x92\xeb\x83\xb6\xfa\x41\x1f\xcc\xec\x40\x72\x33\xea\xd5\x37\xdc\x9c\xc0\xab\x7b\x53\xf5\xa6\x03\xa2\x0b\x8b\xd3\x4f\x2d\xa3\x36\x7d\x5d\x51\xe8\xf4\x28\x48\x20\xf8\xfe\x2e\x68\xb6\x37\x5b\x1c\xf5\xa1\xe5\xd9\xb7\x4a\x7b\xa9\x28\x47\x21\x25\xe4\x43\x49\x3c\x9c\x67\x4c\xa9\x66\x4a\x26\xa5\x88\xc1\x94\xff\x35\xc6\x48\xa5\x59\x38\x39\xbc\x26\xd1\xd6\xbe\x10\x86\xfd\x07\x2e\x66\x3a\x97\x72\x5a\x6e\x42\x78\xbd\xf5\x0f\x53\xd1\xb3\xb3\xe9\x3f\xdb\xd2\x02\x1f\xe6\x03\x75\xb8\x4d\x80\x1f\xde\x1c\x7d\xcc\xa6\x14\xa9\x99\xbb\x46\x75\x8a\xee\xc6\x1c\x61\x8e\xbc\x83\xd1\x5d\x30\xdf\xf9\x76\xb3\x00\xcd\x78\x6c\x86\x06\xa9\x43\x3b\x79\x3b\x4e\xbb\x55\x37\x4e\xe8\x90\x9d\x0a\xf0\x2a\xf6\x1c\xd9\xb4\xb5\x8c\xc1\xf6\x05\xd4\x8b\x6d\x47\x64\xfb\x12\xd1\x39\x31\x89\x78\x32\xca\x89\xcc\x34\xe3\xaf\x73\x69\x83\x3f\xe0\x12\xea\x42\x26\xc6\x26\xee\x80\x7f\x03\x00\x00\xff\xff\x5a\x9d\x54\x7b\x90\x10\x00\x00")

func templates_modelvalidator_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_modelvalidator_gotmpl,
		"templates/modelvalidator.gotmpl",
	)
}

func templates_modelvalidator_gotmpl() (*asset, error) {
	bytes, err := templates_modelvalidator_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/modelvalidator.gotmpl", size: 4240, mode: os.FileMode(420), modTime: time.Unix(1424671638, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_builder_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x6d\x6f\xdb\xb6\x13\x7f\xfd\xf7\xa7\x38\x18\x2d\x20\x15\xaa\xf2\x7f\x1d\x20\x03\xb2\xa6\x43\xb3\x61\x5d\x91\x14\xdb\x8b\x20\x18\x18\xe9\x6c\x73\xd1\x53\x49\x2a\x99\x17\xf8\xbb\xef\xf8\x24\x51\x96\xec\xda\x4d\x8a\x19\x01\x22\x91\xc7\x7b\xbe\xdf\x1d\xd5\xb0\xec\x9e\x2d\x11\x9e\x9e\xd2\x4f\xf6\x71\xb3\x99\xcd\x4e\x4e\xe0\xf3\x8a\x4b\x58\xf0\x02\xe1\x91\x49\x58\x62\x85\x82\x29\xcc\xe1\x6e\x0d\x6a\x85\x20\x1f\xd9\x72\x89\x02\x54\x5d\x17\xa9\xa6\x7f\x9f\x73\xc5\xab\x25\x6d\xfa\x73\x25\x5f\xae\x14\x34\xa2\x7e\x40\x58\xb4\xca\xb0\x5a\x61\x05\xeb\xba\x05\x81\x6f\x45\x5b\x0d\x38\x79\x11\x90\xd5\x65\xc9\xaa\x7c\x36\xe3\x65\x53\x0b\x05\xd1\x0c\x60\x2e\x95\x20\xee\x72\xae\x9f\x2b\x54\x27\x2b\xa5\x1a\xf3\xb2\xe4\x6a\xd5\xde\xa5\x74\xe8\x24\x63\xb2\x65\xc5\x5f\xbc\x3c\x59\xd6\x6f\x1d\xdb\x43\x68\x4e\x64\x83\xd9\x61\x84\x4a\x2c\x4a\x75\x10\x69\xc9\xf3\xbc\xc0\x47\x26\xf0\x48\xf2\x13\x89\x59\x2b\xb8\x5a\xcf\x67\x74\xf0\xe9\x49\xb0\x8a\xe2\xf3\xea\x1e\xd7\x09\xbc\x7a\x60\x45\x8b\x70\x7a\x06\xe9\xa5\x71\x8e\xa4\x68\x69\x22\xbd\xbd\xd9\xd0\x03\xf9\x9b\x57\x6a\x01\xf3\xd7\x5f\xe6\x8e\xdc\x91\x60\x95\xd3\x53\x6c\x82\x4b\xd1\x3e\x6f\x9a\x8f\xac\xa4\xcd\xf3\x4f\x97\xfa\xfd\xb2\x5a\xd4\xe9\x05\xca\x4c\xf0\x46\xf1\xba\x22\x5a\xb5\x6e\x70\x44\x4a\x2e\x68\x33\x05\x4f\xc4\x53\xbb\x0d\xfa\xdf\x1b\xfd\x9e\x5e\xd4\x59\x5b\x62\xa5\x68\x3f\xab\x2b\x85\x7f\xab\x6e\xbf\xb7\x31\x7d\x67\xb7\x88\x68\x45\xa1\x2e\x50\x48\x47\x54\xb2\xe6\xc6\xc6\xfa\x56\x87\x38\xfd\x60\xb7\x89\x70\x51\x8b\x92\x29\x4f\x07\x36\x14\xe9\x15\x2e\x39\x3d\xae\x03\x57\x69\xe6\x92\x74\x20\xdf\x58\x53\xdf\x15\x4c\x4a\x6b\x81\xdb\x12\x94\x80\xfa\x9c\x96\xcb\xb4\x9e\x76\x91\x44\xd0\xeb\x9c\x8e\xfc\x8a\x39\x67\x9f\xc9\xfe\xcd\x66\x4e\x89\x5c\x22\x68\x67\x18\x21\x93\xec\x5c\x18\xbd\x68\x11\x78\x3c\x50\xec\x93\xa8\xf3\x36\x9b\x54\xcc\x6d\x0d\x15\x6b\xfc\xe2\xd1\x8a\x75\xec\xbc\x62\x7e\x61\x5a\xb1\x6b\x97\x72\x17\xb8\xe0\x15\xd7\xe1\xf7\x89\xc5\x17\x94\x6a\xf2\x47\x26\x79\x76\xde\xaa\xd5\x84\xe6\x7a\x79\xa0\xf5\xa2\xad\x32\xcd\x82\xaa\x9b\x29\x50\xec\x1e\x25\xb4\x12\x45\x45\xe4\x40\xe1\x84\x86\xce\x3e\xd6\x22\x37\x2f\x02\x55\x2b\x2a\x6b\x2d\xaf\x32\xde\xb0\x82\x04\x93\x14\x4e\xd8\x81\x42\x47\x9d\x36\x49\x06\xe5\x14\xcf\x98\x61\xfc\x48\xc5\x04\x77\x5a\x27\xb3\x33\xb2\xde\xa8\xa4\xd5\x88\x6c\x2a\x25\x60\xff\xc7\x10\x69\x9c\xf3\x72\x36\x9b\x04\x50\x88\x5a\xc4\xbd\x57\xbc\xc5\x94\xea\xbf\xe0\xfa\x39\x26\x33\xc2\xc6\x7b\x82\xbb\x6f\x35\x92\xec\x23\xb8\xad\x35\x03\x60\x0d\x07\xaa\x70\xad\x86\xd5\xc0\xc0\x2a\xcf\x89\x80\x5b\x14\xa5\x9d\xeb\xba\x15\x99\xaf\xf6\x7d\xee\x38\xc0\x0d\xd3\x69\xf2\x5b\xa3\x11\xda\x66\xc7\xc8\x29\xae\x52\x41\x22\x15\xa9\x56\xa9\xf6\xd4\xbe\xc6\x4d\x1a\x3b\x65\x3f\xb4\x84\xf1\xc1\xe9\x9e\xba\x4b\xbb\xae\x1f\x4d\xcb\x09\x3b\x56\x3a\x49\x62\x8d\x28\xe4\x3e\x16\xbb\x4e\x8d\x9c\x40\xf6\x5e\xa3\x78\xc0\xf7\xda\x53\x40\x3d\x2e\x63\x45\x41\xfe\x37\x2d\x8d\x42\x84\x7e\x5d\x60\x86\xfc\x01\xf3\x44\x9b\x2a\x50\x2f\x31\xc8\x71\xc1\xda\x42\x79\x4f\x58\x7e\x77\xad\x32\xcd\x30\xa3\xe3\xe4\x35\xfd\x2c\xa0\x7e\x74\xf9\xad\x1b\x29\xd1\x05\x42\xf5\xcf\x84\xd1\x20\xe3\x15\xca\x86\x22\x81\x7f\x50\xe1\xa2\x48\xe0\x8d\x5b\xfd\xd2\xa2\x54\x5d\x44\x6d\x33\xff\xc9\x61\xa7\xcf\x43\x1d\x04\x9f\xbf\x64\x83\x4d\x0b\x8f\xb0\x33\x2d\xc3\xa4\xc8\x95\x35\x45\xb8\x10\xbd\xd9\xea\x05\xb1\xe7\x1b\xc5\xdb\x70\x4c\xfd\xe1\x7f\x56\x18\x8c\xf8\xa4\x5e\x8e\xd5\xed\xca\xe9\x61\x79\x0d\x81\xb9\x95\xaa\x2e\x9d\x5e\x40\xcd\x8c\xe7\x4c\xd5\xe2\x08\x05\x87\xcc\x23\x03\x41\x1e\x13\x1c\x5b\xa7\xb9\xa5\x48\x7a\x29\x7e\xe3\x77\xbf\x10\x9b\xa6\xb7\xd3\x9c\xf4\x3c\xcf\x8d\x00\xcf\x39\xe0\xe5\xe3\xe0\x78\xa1\xdf\xc1\x30\x14\xae\xb4\x82\x8a\x0e\x6d\x39\xc2\x68\x2f\x85\xc2\x62\xb3\x52\xeb\xfd\xc0\x04\xb4\x55\x10\xf4\x9b\x5b\xeb\x88\xe9\xce\x49\xab\x54\x83\x63\x63\x77\xf4\xbf\xb3\x33\xa8\x78\x61\x04\xc1\x50\xcc\x19\x81\x57\x43\x45\x14\x85\xab\x89\xe9\x65\x13\x8c\xe6\x1a\x83\x76\xa0\x4f\xdf\x3d\x0f\x53\xae\xeb\x81\xcf\x55\xce\x33\xda\xa7\xdc\xae\x0e\x7a\x80\x9e\x06\x9e\x9f\xab\xa3\x66\xb2\x4f\xbf\x10\xba\x0f\x53\xcb\x83\xe4\x73\x35\x73\x7c\x46\xca\x59\x2d\x0a\xac\x06\xc7\x63\xf8\x01\xfe\xef\x84\x39\x00\xd1\x45\x68\x00\x70\x11\xcd\x4b\x2e\xa5\x86\xaa\xb0\x62\x4e\xe1\xb5\x9c\xfb\x16\x2f\xd3\x9f\x6b\x5e\x6d\x6b\x44\x7f\xb1\x95\x3f\xeb\xd8\x92\x51\x54\x95\x03\x58\x27\x0c\xa0\x6b\x88\xd2\xd0\x63\x0b\x27\x6c\x5c\x0c\x96\xe4\xab\x2a\x68\x6b\x3c\x3f\xa2\x28\x07\x52\xa2\x8e\xc9\xe5\x45\x37\x9b\x1c\x09\xed\xc6\x49\x3b\x31\xb6\x17\x67\x8d\x3c\xef\x87\x8b\x5a\xc8\xce\x50\x0d\x34\x6c\xb0\xd5\x35\x69\x3d\xcd\xf3\x05\xd7\xed\xc1\xe5\x36\xc8\x6c\x85\x84\x0e\x47\x58\x3d\x12\x1b\x39\x1e\xe1\xa0\x6f\xee\x0d\xbe\x80\xae\xcd\x7e\x3c\xd8\x77\x33\xec\x80\x99\x03\x63\x3d\x28\xec\xaa\x3d\x81\x52\xf7\x5c\xba\x2d\x95\x34\x91\x45\x5f\xe3\x18\xdb\x4b\x06\x58\x0c\xb7\x7a\xea\xc3\xb6\x82\xbc\xde\x36\x35\x25\xb5\xe8\x6c\x65\x48\xdd\xca\x01\x58\xa0\x7f\x74\xf9\x43\x53\x21\xd6\x49\xf3\xd3\x99\xbf\xd0\x4c\xcc\xda\xd6\x80\x1b\x2d\xe5\x96\xaa\xcd\xc7\x21\xed\x48\x22\x1b\x89\x36\x81\xa6\x1f\x71\xe9\xfe\x47\x23\x25\xcb\xf0\x69\xd3\xe7\xca\xee\x4c\x19\xe3\x88\xe1\x17\x6f\xe2\x1e\x46\x86\x1a\x86\xb3\xf1\x2e\x15\x7b\x1a\x17\x71\x63\xb0\x77\x2b\xdd\x36\x13\x9b\xef\x34\x23\xbf\xa4\xe6\xc4\x2e\x86\x6d\xcd\xc3\xb7\x8d\x43\x21\xc7\xd4\xaa\x1f\x0c\x8a\x43\x7c\xe8\xcf\xda\xfe\xed\xdb\xd4\xb0\x80\xfc\xfd\x71\xaa\x76\x4a\x7d\x5f\x33\x77\xb4\x63\xca\x26\x94\x13\x95\xfe\xca\x27\xbb\x9e\x3d\x59\x1e\x5d\x33\xee\x2b\x63\xd0\xcf\xbf\x5e\x0e\x9e\x83\xaf\x84\x3f\x13\x28\x55\x5f\x02\x81\x22\x83\x2a\x28\xd5\xb8\x06\x06\x92\x07\x3b\xe7\x45\x41\xe0\xc4\x69\x46\xf9\x87\x0c\x1c\x17\x46\x78\xc3\xed\xab\xc3\xe5\xd9\x36\x81\xce\xb9\x43\x87\x94\x89\x6c\x78\xc9\xdc\xf0\x53\xc2\x30\x37\xfc\x15\xfe\xe5\x72\x23\x94\x73\x70\x6e\x74\xb3\x90\xcf\x8d\xe1\x34\xf5\xf5\xd4\xf0\x0c\x5e\x20\x35\x06\x92\xff\xdb\xd4\x08\xbe\x8a\x7c\xcf\xd4\x70\x23\x50\x30\x5e\x84\xdf\xb6\xba\xcc\xe8\xee\xf4\xdf\x38\x62\xf4\x62\x26\xe7\x8b\x28\x14\x9a\xc0\x5d\x5d\x17\x76\x88\x70\x63\xd8\xd8\x59\xfe\xdb\x5c\xac\x87\x40\x3f\x95\x8d\xc9\x74\x93\x73\x6c\xdf\x31\xc2\xf7\xc8\x8f\x7a\x93\x53\x66\xf7\xc1\x6f\x30\x58\xf6\xde\xa3\xc6\xc0\xc8\xa7\x8e\xc5\x2a\x01\xea\x10\xa7\x53\xa1\xf4\x8c\x6e\x02\x63\x6f\xfb\x40\x98\x93\x3a\x00\x87\x3b\x70\x6c\x88\xf7\xcf\x58\xba\xff\xb8\x39\xb0\x62\x0f\x19\x04\x5f\x3f\x3f\xe2\xe3\x55\xdd\x2a\x76\x57\xa0\xfb\x10\x3a\xe1\x7c\x8d\x13\xc9\x98\x63\xa2\xc5\xf5\xb3\xb4\x46\xf9\xad\xd9\x7e\x9f\xcb\x47\xf5\x1d\xe6\x44\xbc\xe7\xc2\xb0\xf5\x49\x66\xaf\x98\x9b\x60\xbe\x71\x55\xd8\x7f\xa9\x21\xdb\x87\x35\x38\x61\xba\x73\xda\x84\xf5\xd3\x77\x94\x78\x58\x89\x87\x6b\xf6\x1d\x95\x99\xf8\x8a\xe6\x21\xe1\xdf\x00\x00\x00\xff\xff\x39\x4c\x24\xb1\x74\x19\x00\x00")

func templates_server_builder_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_builder_gotmpl,
		"templates/server/builder.gotmpl",
	)
}

func templates_server_builder_gotmpl() (*asset, error) {
	bytes, err := templates_server_builder_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/builder.gotmpl", size: 6516, mode: os.FileMode(420), modTime: time.Unix(1424662442, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_operation_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x56\xdd\x6f\xe3\x44\x10\x7f\xf7\x5f\x31\x44\xc7\x91\x54\xc6\x7d\x2f\xba\x07\x28\x88\xde\x03\x47\xd5\x56\xf0\x88\xb6\xeb\x49\xbc\xd4\xde\x75\xf7\x23\x69\x88\xfc\xbf\x33\xfb\x61\x27\x6e\xdc\x80\x28\x94\x93\x4e\xba\x75\x76\xe6\x37\xbf\xf9\xcd\xc7\xb6\x65\xfc\x81\xad\x10\x76\xbb\xe2\x3a\x1e\xbb\x2e\xcb\xce\xcf\xe1\xae\x12\x06\x96\xa2\x46\xd8\x30\x03\x2b\x94\xa8\x99\xc5\x12\xee\xb7\x60\x2b\x04\xb3\x61\xab\x15\x6a\xb0\x4a\xd5\x85\xb7\xff\xa1\x14\x56\xc8\x15\x5d\xf6\x7e\x8d\x58\x55\x16\x5a\xad\xd6\x08\x4b\x67\x03\x54\x85\x12\xb6\xca\x81\xc6\xaf\xb5\x93\x23\xa4\x3e\x04\x70\xd5\x34\x4c\x96\x59\x26\x9a\x56\x69\x0b\xf3\x0c\x60\x26\xd1\x9e\x57\xd6\xb6\xb3\x8c\xbe\x76\x3b\xcd\x24\x91\x7e\xf7\x80\xdb\x1c\xde\xad\x59\xed\x10\x2e\x3e\x40\xf1\x31\x78\x18\x4a\xc1\x1b\xf9\xeb\xae\xa3\x03\x91\x10\xd2\x2e\x61\xf6\xe5\xe3\x2c\x99\x27\x13\x94\x25\x9d\x16\x21\x63\x92\xe0\xb2\x66\xc6\x7c\x62\x0d\x5d\x5f\x11\x85\x9a\x68\x91\x23\xea\x25\xe3\x94\x83\xa2\x74\x2b\x66\x81\x33\x09\x55\xb8\x06\xc2\x12\xa5\xf7\xbc\x72\xc4\xf9\xc0\x1d\x5a\xa6\x59\x63\x32\xbb\x6d\xf1\x2f\x91\x77\x81\x8b\x58\x42\xf1\xad\xb3\x95\xd2\xe2\x0f\x2c\x03\x41\x62\x15\xad\xbd\x8c\xa5\xe3\x68\x80\x91\x76\xc6\xd5\x16\x88\x0d\xf1\x40\xad\x95\x2e\xe0\x47\xb4\x26\xa8\xa9\xf1\xd1\xa1\xb1\x29\x3c\x50\xe9\x36\x58\xd7\xfe\xff\xa0\x35\x72\xa7\x85\xdd\x06\x41\xb8\x68\x59\x3d\x44\xbe\x75\x9c\xe0\xcd\x4f\xaa\xc4\xba\xe7\x38\x8f\x57\xd7\x01\xab\xeb\xc6\x69\xc4\x5f\xf3\x5e\xc4\x33\xdf\x41\x3d\x6a\xd7\x2d\x20\x39\xdf\xa0\x75\x5a\x9a\x4b\xd5\xb4\x35\x3e\xfd\x7c\xff\x3b\x72\x1b\xac\x83\x17\x39\x8d\x03\xe7\x31\xa3\x45\xac\x4e\x6d\xf0\x5f\xe1\x12\x30\x0f\x0a\xbe\x07\x7f\xad\xc2\xaf\xd5\xaf\xa7\xf4\x7f\xe8\x35\x84\x9e\x94\x27\x9c\xe2\x2e\xf8\x84\x9b\xb1\x3f\x70\x8d\x34\xaa\x5e\x2b\x89\x1b\xf0\x83\x59\xf4\x6d\x1d\xc7\x04\x27\x87\x42\xb5\x7e\xc4\x85\x92\xd9\xd2\x49\x7e\x8c\x3b\xe7\xf6\x09\xce\x1a\x51\x12\xd2\x86\x69\x2c\x2e\x15\x0d\xc9\x93\xcd\xd3\xbc\xe9\xe9\x51\x5a\xc0\xd9\x33\x7e\x7e\xa2\x74\x50\x12\xde\x8f\xaf\x76\x09\xf2\x02\x28\x56\x9e\x8a\xaf\x2f\xfa\x00\x21\xe5\x28\xdd\xf7\x8a\xdf\x5a\xea\xa2\x55\x50\x6f\xf4\x15\xc5\x99\x98\x6d\x30\x56\x3b\x6e\x43\xfc\x14\x68\x2a\x9f\xa1\x6b\xfa\xf2\xa4\x66\x80\xa9\x32\xed\xcb\x71\x75\x4a\x04\x4f\x3c\xa8\x4a\x95\xa7\x2e\xe2\x28\xd6\xa8\x13\xab\x67\xf2\x2c\xe0\x16\xf5\x1a\xaf\xee\xee\xae\xe7\x3a\x95\xef\x06\x4d\xab\xa4\xc1\x5f\x69\x3f\xa0\xce\x41\xc3\x59\xfa\x3d\xb4\xfb\x22\x4a\xaa\x9c\xc5\x1c\x7e\xf3\xcb\xf6\x28\x4a\x9f\x5c\x71\xe3\xad\x3e\xca\xa5\x9a\x53\x5f\x4e\xae\x36\x17\xf6\x4f\xe8\xdd\xd3\x50\x83\xd3\xdc\x53\xf2\xb8\xbe\xd3\x09\xce\x7b\x7e\xf1\x01\xa4\xa8\x03\x31\x38\x45\x27\x64\x56\x52\xa6\x04\x91\x50\x68\x3d\xc4\x69\xcf\xfb\x9c\x08\x70\x11\x80\x62\xdb\xd0\xd1\xcf\xc1\xb0\x27\x23\x4d\x1f\xf8\x11\xf6\xbb\x05\x66\xc3\x12\xdf\x75\xb3\x3e\xaf\x7e\x10\xe3\x57\x31\x3f\x5a\x47\x34\x52\xc2\x7e\x65\x40\x3d\xc4\xe7\x92\xfe\xd1\x3c\xd5\xf5\x96\xe6\x69\x6c\xdb\xb7\xda\x68\x38\x53\xfa\x27\x85\xfb\x4e\xc8\xf2\x17\xff\x38\xa5\xfa\x0d\xfa\xe5\xcf\x3a\xef\xfd\x31\xc6\xb0\x1d\x42\x16\x24\x71\xbf\x28\xbe\x19\xc9\xee\xd3\xb8\xa7\x30\xfb\x4d\xf8\xdf\x54\xe1\xa5\xc7\x71\x6a\xef\x6a\xdc\xbf\x02\x9e\xeb\x94\xcd\x45\xba\x9f\x92\x2f\xcd\x52\xf1\xd2\x0e\x9d\x54\x6a\x88\x38\x74\x4b\x28\x31\xe3\xd6\x85\xa2\xa6\xbf\x15\x0e\x1e\x8f\x37\xec\xe1\xec\xf5\xb0\x2f\x08\x3d\xd1\x20\x07\xaf\xd0\xdf\x2c\xd0\x64\x13\xff\xa3\x2a\x0c\xaf\xd9\x67\x23\xfd\xdb\x2b\x9f\xde\xec\x3f\x03\x00\x00\xff\xff\x6a\x9d\x7c\x9d\xd5\x0b\x00\x00")

func templates_server_operation_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_operation_gotmpl,
		"templates/server/operation.gotmpl",
	)
}

func templates_server_operation_gotmpl() (*asset, error) {
	bytes, err := templates_server_operation_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/operation.gotmpl", size: 3029, mode: os.FileMode(420), modTime: time.Unix(1424655055, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_server_parameter_gotmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\x4b\x73\x13\xbb\x12\xde\xfb\x57\xe8\xba\x80\xb2\x83\x99\x64\x41\xdd\x05\xdc\xdc\xaa\x0b\x84\x8b\xab\x80\xc3\x49\x20\x1b\xa0\x0e\xca\x8c\x6c\xeb\x30\xaf\x48\x9a\x24\xc6\x95\xff\x7e\xba\xf5\x98\xd1\x3c\x63\x3b\xd9\xb0\x4a\x46\xdd\x6a\x7d\xfd\x6e\xc9\x9b\x4d\xc4\x16\x3c\x65\x64\x9c\x0b\x9e\x70\xc5\xaf\xd8\x15\x8d\x79\x44\x55\x26\xc6\xb7\xb7\xa3\xcd\x86\x2f\x48\xf0\x81\xa7\xef\x59\xba\x54\x2b\x58\x81\x6f\x26\x04\x79\x71\x4c\x2c\x23\xab\xc8\x93\xcd\x26\xf8\x44\x91\x6d\x46\xc6\xf0\xff\xfb\x2c\xa4\x8a\x67\xe9\xed\xed\x78\x46\xe0\xfb\x9c\xc6\x05\x3b\xb9\xc9\x05\x93\x52\x2f\xeb\x55\x4f\xfa\xf4\xa5\x16\xfe\xaf\x63\x92\xf2\x98\x6c\x46\x84\x08\xa6\x0a\x91\xe2\xea\x08\xd1\xb0\x34\xaa\x50\xd1\x9b\x41\x54\x8e\xbc\x27\xaa\x4a\xfa\x4e\xa8\xe0\x24\xc5\x44\xda\x8d\xc9\x12\xf7\x40\xf4\xc3\x6c\x31\xa2\x7f\xec\x66\x27\x9e\xf2\xa4\x48\x7a\x7d\x87\xc4\x41\x44\x8b\x38\xa3\xea\xdf\xcf\x27\x5d\xc8\xa6\xce\x85\xe6\x08\xfd\x75\x72\x13\xc6\x85\x84\x50\x2a\x97\x77\xf5\xeb\x00\x5e\x43\xbc\x2f\x5e\x77\x44\x03\xaf\x5b\xde\x0d\x6f\x11\x2b\x9e\xc7\xec\x8f\x45\x0f\xe4\x92\x7e\x5f\xd4\xde\x41\x3b\x21\x3c\x49\xfb\xcc\x89\x94\xfd\xf2\xc3\xc8\xdc\x1a\x86\xfe\x5b\x55\x9b\xb0\x90\x2a\x4b\x16\x99\x48\xa8\xaa\x15\x9c\x0e\x8c\x6f\x35\xd7\x1d\xd6\xc3\x05\xc3\xa8\x3f\xa5\x12\x3c\x5d\xf6\xd9\xd2\x9c\x2b\xb7\x03\x5f\x81\x96\x31\x0f\xbb\xca\xe3\x47\xc6\x22\x79\xc6\x7f\x31\xbd\x02\x18\x05\x4d\x3e\xd2\x04\x3e\x71\x11\x75\xe1\x29\x7a\x36\x66\x69\x37\xa2\x69\x3b\x63\xe7\x8a\x25\xb2\x37\x65\x35\xf5\x2e\xbf\x35\x70\xb8\x44\xb5\x92\x77\x4d\xc9\x21\x40\x96\xba\x17\xa0\x52\xf2\x4e\x80\xbe\xa4\xfc\xb2\x60\x03\x98\x3c\x86\x9d\xe3\xfb\x37\xcf\xad\x5c\x64\x39\x13\x6a\xdd\x11\xa9\x73\xf9\xc9\xb5\x79\xdc\x01\xd6\xc9\x63\x80\xda\xd9\xfd\x49\x80\x2c\xbe\xaa\x73\xf9\x5a\xa7\xad\xc9\x33\x68\x45\x75\x19\xdd\x39\xdd\x29\x26\x4b\x15\x05\xac\x0d\x01\x8d\xfc\xaa\xef\x6c\x28\x79\xc1\xd3\xa8\x04\x3d\xee\xe2\xd0\xd2\x90\x8d\x79\x06\x80\x10\x64\xa9\x42\xb6\x60\x0e\x94\x9b\x73\x0a\x18\x42\x74\x5b\xa1\x78\x1c\x9c\xe5\x31\x57\xaf\xd6\x46\x41\xe3\x3b\xe4\xf7\x79\xbf\x76\xad\x7e\x37\xde\x7d\x9d\xc5\x31\x0b\xd1\xbf\x65\x29\xd2\xa9\x1d\x4b\xd6\x75\xa4\xa0\xd7\x95\x7e\x1e\x51\xfe\x42\xaa\x84\x14\x19\x5d\x51\x41\x6a\x34\xfd\xf9\x79\x9d\xb3\xe6\xa6\x73\x1b\x76\x27\x31\x4b\x00\x1c\x4a\x58\x14\x69\x38\xa9\x31\x61\x21\xd2\x11\xf6\x7a\xc5\xe3\xa8\x1d\x7d\x15\xc9\x1c\x31\x25\x07\x10\x6c\x99\x90\x81\x15\x0f\x5c\x3a\x12\xeb\xb1\xd3\x8c\x37\x62\x84\x00\xc4\x32\x66\x21\x84\x21\x66\x47\x10\x1d\x75\x7d\x10\xe7\xd1\xcb\xc6\xda\x7f\x48\xc3\x1e\x0d\x86\xa7\x4f\x2d\x08\x70\x29\x08\xb4\x90\x5b\xe1\x59\x11\x6a\x51\x8f\x71\x60\x08\x10\x87\x57\x80\x1c\xe3\xf0\x0a\x4d\x31\x73\x39\x5c\x9a\xc1\xe3\xa8\x5b\x52\xc7\x81\x17\x00\x53\xc0\x63\x6b\x80\x97\xb0\xa8\xbe\x0c\xfe\x17\x45\x27\xda\x8a\x13\x6b\xcc\x79\xaa\x6d\x85\x36\x9e\x94\x47\x0d\xb6\x36\xdf\x29\xa6\x72\x0c\x40\x99\xda\x93\xb5\xe1\x01\x00\x7c\x82\xe9\x4b\x7c\x46\xbf\xde\xc8\xa9\xeb\x39\x14\x2d\xed\x02\xd5\xa1\x6f\x27\x18\xc3\x37\x87\xf0\x9c\x6a\x3f\xd6\x02\xfc\x98\xd0\x3c\x87\xb4\xa8\x03\x11\x33\xa2\x7d\x64\x36\x98\x94\xd2\xa2\xf7\xd6\x6a\xc0\x82\x1d\x8a\xf5\xaa\xd6\x50\xce\xda\x7a\x3f\x0d\x87\x51\x95\x25\x0e\xb5\x27\x55\x18\xd7\x0a\x6a\x23\x39\xfd\x2a\xe8\xa7\xe5\xbd\xa3\xc1\xc3\x7d\x5f\x73\xdd\xc3\x5a\x6d\x2c\xae\xa2\x96\x1d\x21\xa7\xe1\x4f\xba\x64\x66\x00\xd1\xff\x02\x75\x74\x78\x48\x3e\xaf\xb8\x24\x0b\x1e\x33\x72\x4d\x25\x59\x32\x30\x1f\xe8\x1d\x91\x8b\x35\x51\x2b\x46\xe4\x35\x5d\x2e\xa1\x88\xa8\x2c\x8b\x03\xe4\x3f\x89\xa0\x84\xa4\x4b\x20\xba\x7d\x09\x5f\xae\x14\x81\xfa\x77\xc5\xa0\xd8\x2a\x2d\x6a\xc5\x52\xb2\xce\x0a\x50\xe8\x99\x28\xd2\x9a\x24\x77\x04\x09\xb3\x24\xa1\x69\x34\x1a\xf1\x24\xcf\x84\x22\x13\x50\x7a\x9c\x32\x75\xb8\x52\x2a\x1f\xe3\xc7\x92\xab\x55\x71\x11\x00\xe3\x61\x48\x65\x41\xe3\xbf\x79\x72\xb8\xcc\x9e\x59\x51\xdb\xf0\x1c\x9a\x62\xb3\x15\x6b\xc2\xa3\x28\x66\xd7\xd0\xd6\x34\x04\x54\x65\xbb\x8d\x6e\xd8\x19\x8f\xb4\xdf\x04\x4d\xc1\xd2\x8f\x7e\xb2\xf5\x8c\x3c\xd2\xe9\x8a\xf1\x15\xcc\xb5\x9a\xd2\x06\x27\x92\x75\xab\x01\xcb\x41\x3f\x5a\x90\xf1\xe3\xcb\xb1\x65\xb7\x2c\xc6\x85\x53\xed\x26\xf4\x72\x4c\xa5\x34\x83\xa3\x9e\x21\x25\x58\x50\x07\xbc\x24\x34\x8e\xb5\x8d\x2f\xb2\x22\x8d\x48\x6e\xa8\xd8\x65\x70\x11\xb6\xbe\x2b\xc0\xd2\xde\x7e\x82\xbd\x4a\xd7\x56\x94\xad\xd6\x39\x0f\x41\x84\xf6\x38\xe4\x14\x18\x80\x64\x17\x3a\x95\x22\xb2\x10\x59\x42\x28\x41\x83\x04\xa7\x0c\xa6\x49\xa9\x46\xb0\x81\x75\x23\x82\x1b\x47\x11\x2a\xdb\x97\x8c\x1d\xcc\xc0\x2b\x5d\xcf\x79\xc3\x64\x28\x78\x6e\xea\xba\x51\xac\xb6\xe4\xd4\xd6\x09\xf0\xc9\x36\x55\x8b\xba\x6a\xfa\x95\x79\x4c\x14\xbf\x82\xdc\xb6\xe8\xc0\x08\x6a\x45\x30\xd9\xc1\x2e\x60\x0d\xe7\x1c\xf8\x82\x70\xd4\x2c\x33\xc2\x15\x01\xe8\x45\x02\xab\x6a\x45\x15\xc6\x22\x5c\x29\x6f\x30\xaa\xd3\xa5\x24\x1c\xbf\xf4\x00\x41\x89\x2d\x05\xf4\x22\x66\x13\x98\x04\xca\xc1\xf6\x94\x49\xb8\x89\xe2\x2c\xc1\xc4\x82\x86\x0c\x61\xa0\xc9\xa5\xde\x6c\xca\xb4\xc4\x83\xae\x39\x78\xa7\x00\xbb\x82\x71\xa8\xce\x95\x84\xa9\x55\x16\x11\xb4\xb9\x1c\xe1\x7c\x42\x30\xab\x4f\x59\xc8\xa0\x39\x0b\xab\xec\x41\x97\x81\xa7\xbe\xa6\x13\x41\x0e\x7c\xbf\xcc\x88\xc8\x0a\x48\xac\x83\x2a\x90\xe1\x66\xa1\xc2\x15\x8b\x4e\x91\xd0\x81\xde\xcc\xd3\x12\xe3\x33\x65\xd7\x93\x06\x79\xea\xc6\x8b\xe0\x1d\x95\x7f\x16\x4c\xac\x9d\x2f\x2f\xf5\x16\x11\x7c\x39\x7d\x1f\x68\xc2\xa4\xea\x48\xc4\x6e\xc0\x09\xc4\xf1\x7b\x0e\xeb\x0a\x0d\x77\x4e\x9a\xa9\xd6\x64\x6c\x86\xe5\xea\x74\x28\x6f\x50\x25\x3f\x30\xb1\x64\x6d\xab\x05\xe8\xf7\x56\xe0\x4c\x2e\x65\xf0\x7f\xa6\xaa\x6b\xc8\xd4\x9a\xca\x5e\x96\xe5\xb4\x81\x1e\x66\x25\xe0\xdb\xfb\x38\x23\xdb\x28\xb7\xeb\xc1\xef\x18\x85\x2e\xb5\xff\xd1\x81\x11\xb0\xeb\xb1\xa5\xb3\x2a\x93\xbf\x85\x4a\x5e\x2e\xf9\xd7\xd6\xe6\x35\xd6\x9c\x58\x8e\x8d\x42\x9f\x82\xbb\x3d\x00\xbb\x0c\x86\x1f\x21\x12\x9f\x1f\x1d\xc1\xcc\x27\x40\x32\x36\x1b\xdd\x67\xbe\x8d\xeb\xc7\x7e\x1b\x93\x05\x05\x42\xf4\x82\x3c\xbe\x1a\xeb\xe3\xb5\x5e\xb7\x44\xeb\x65\x0e\x68\xdb\xad\x5d\x56\x8e\x5d\x6f\x0a\x10\xf4\xe6\x0d\x24\xfb\x0b\xd2\x54\xd9\x28\xd9\x5c\x37\xab\xb7\x76\x9c\x73\x13\xd9\x3e\x6e\x43\x9b\xe9\xd9\xf2\x6e\xaf\xd9\xf1\xa7\x2c\x93\x9e\x1b\x1f\x3c\x73\x3a\x2e\x84\x1d\xc9\xd4\x77\xed\x1b\x0e\x3b\xac\xce\xf5\xd0\x7b\x10\x7c\x7d\xb6\xdc\x11\xa4\x6f\xe5\xb2\x0e\xce\xe5\xab\x2c\x72\xd6\xac\x5d\x26\x8c\x0c\xb0\x3f\x76\x15\xe1\xfe\x01\x30\xb8\x61\x46\x9e\x6c\x11\x88\x5b\xdd\x24\x6c\x82\x00\x04\xc9\xf4\xea\xa4\x91\x16\xe3\xae\xcb\x53\x7f\x7a\xb4\xe2\x06\x7b\xd8\x5f\x8d\x21\xbc\xdd\x9d\xf4\xc5\x3d\x35\x03\xe5\x9d\x09\xe6\x86\xe1\x9e\x61\xbb\x2d\xc2\x8d\xdf\x93\xba\x67\x3a\x27\x6c\x63\x23\x13\x35\xde\x7c\x4d\xc8\x05\x54\x8f\x9f\xf6\xeb\xd6\x1b\xb2\xb7\xc9\xd2\x96\x0e\x7d\x90\xa6\x4e\xa4\xcd\x46\x1b\x2b\x5e\x72\xa6\xb5\x17\x00\x9c\xf7\x81\x07\xc6\xbe\x47\xa1\x6b\xee\x7a\x3a\x2c\x5b\x3d\xd1\x6f\x1a\xcd\x06\xe9\xb7\x47\x3f\x04\xcb\xdb\xbf\x77\xbd\xef\x7c\xa3\x1a\x9a\x33\x2a\x28\xd5\x9c\xd1\x53\xa7\xe8\xb5\x7d\x55\x2e\xdf\x8f\xf1\x7b\x91\x28\x10\xbb\xe4\xf0\xef\x7a\x8f\x29\xc3\xa5\x17\x16\x84\x89\x55\xb2\x6c\xc0\x53\xa2\xe7\x1b\x2e\x18\x18\xb2\xe3\x81\xd1\x11\xcf\xca\xc7\xee\xde\x37\x04\x40\xff\x70\xb7\xf5\xca\xc5\xfa\x0e\x3a\xf4\x88\xe2\x3d\x9f\x20\x84\x7b\x3c\x92\x0c\x3e\x8f\x94\x0f\x23\x78\xc8\x76\x2f\x0e\xed\xb7\xaf\x63\x33\xb9\xd6\xdf\x17\x7a\x38\xe1\x9c\x0e\x53\xc0\xe8\x57\xbd\x93\x49\xdf\x67\xed\x3c\x73\x5e\x6c\x47\x5a\xef\xaf\x13\x3d\xfe\x72\x6f\x3b\x5a\x41\x03\x00\xc6\xf5\x4d\xeb\x5a\x3d\x90\x95\x7d\x9d\xf4\xe1\x52\xe7\xeb\xf7\x87\x4f\x1e\xa2\xdf\x48\x91\x8c\xbf\xac\xe8\xf8\x2a\x5d\x51\x4b\x1c\xcd\x76\x7c\x4c\x8e\x86\xe2\xcd\xed\x18\x08\xb6\xed\x42\xab\xd1\x38\xdf\xb0\x05\x05\xb8\xe7\xe6\x7a\x1b\xb1\xc5\xb9\xbb\x17\x77\x3f\x39\xd7\xf9\x07\x1e\x96\xb5\xd3\x2b\xd5\x9e\x3c\xd1\x66\x70\x07\x4c\xc9\x7f\x4b\x7d\x7b\x82\xd8\xb1\x7a\x11\xdf\x63\x2c\xa7\x9c\xaf\xbb\x5f\xf9\x87\xde\x9c\x86\xd2\xa8\xfe\xa2\xe3\xe7\xd1\x19\xca\xf8\x6d\x93\xa9\xfa\xb5\x03\x1b\x54\xbd\x2c\xf4\xa8\xb7\x6b\xaa\xdd\xa9\x72\x47\x82\xed\xf7\x96\xdf\x7e\xc6\x6f\xfc\x2a\x53\xfe\xfd\x27\x00\x00\xff\xff\x23\x88\x9b\xcd\x4e\x22\x00\x00")

func templates_server_parameter_gotmpl_bytes() ([]byte, error) {
	return bindata_read(
		_templates_server_parameter_gotmpl,
		"templates/server/parameter.gotmpl",
	)
}

func templates_server_parameter_gotmpl() (*asset, error) {
	bytes, err := templates_server_parameter_gotmpl_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/server/parameter.gotmpl", size: 8782, mode: os.FileMode(420), modTime: time.Unix(1424676722, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/model.gotmpl": templates_model_gotmpl,
	"templates/modelvalidator.gotmpl": templates_modelvalidator_gotmpl,
	"templates/server/builder.gotmpl": templates_server_builder_gotmpl,
	"templates/server/operation.gotmpl": templates_server_operation_gotmpl,
	"templates/server/parameter.gotmpl": templates_server_parameter_gotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"model.gotmpl": &_bintree_t{templates_model_gotmpl, map[string]*_bintree_t{
		}},
		"modelvalidator.gotmpl": &_bintree_t{templates_modelvalidator_gotmpl, map[string]*_bintree_t{
		}},
		"server": &_bintree_t{nil, map[string]*_bintree_t{
			"builder.gotmpl": &_bintree_t{templates_server_builder_gotmpl, map[string]*_bintree_t{
			}},
			"operation.gotmpl": &_bintree_t{templates_server_operation_gotmpl, map[string]*_bintree_t{
			}},
			"parameter.gotmpl": &_bintree_t{templates_server_parameter_gotmpl, map[string]*_bintree_t{
			}},
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

